const __vite__fileDeps=["assets/index.html-Bfs6A-07.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/index.html-BakPGcVU.js","assets/index.html-DIjJ2cJB.js","assets/index.html-C94jATm2.js","assets/index.html-Ch_G-MKB.js","assets/index.html---RfFWs6.js","assets/index.html-n-czCrmd.js","assets/index.html-9_vE_KA5.js","assets/index.html-9E3reuQS.js","assets/REAEME.html-7DhZDNsn.js","assets/index.html-CLwdq7KC.js","assets/index.html-FhVPz_go.js","assets/index.html-BvdW_I9V.js","assets/index.html-CnzrVmxb.js","assets/index.html-BpM1fr0F.js","assets/index.html-D7QiQymA.js","assets/index.html-DDRXfa_w.js","assets/index.html-7-Akrco3.js","assets/index.html-CQKZsg5a.js","assets/index.html-3-ozuwGR.js","assets/index.html-DZ9ou3ll.js","assets/index.html-knVELFtY.js","assets/index.html-CikLvi_7.js","assets/index.html-CcRZODEL.js","assets/index.html-DYu5jYne.js","assets/index.html-DRj8aGCy.js","assets/index.html--T1p7_5Z.js","assets/index.html-1WfNnBi5.js","assets/index.html-BztlChkc.js","assets/index.html-BfqJk7y9.js","assets/index.html-JA_RsDbE.js","assets/介绍.html-nVkiwiSA.js","assets/绘制图形.html-0avymuh5.js","assets/绘制图片.html-BM-KZcx-.js","assets/绘制文本.html-CYvEb235.js","assets/绘图样式.html-CMwqeR3N.js","assets/进阶.html-CHQxsNxJ.js","assets/index.html-BV3F9R3T.js","assets/index.html-BaCjKyyq.js","assets/Webpack5_基础.html-CRM6I9Og.js","assets/Webpack5_搭建脚手架.html-UbxIoPzh.js","assets/Webpack5_高级.html-DxdxHXzq.js","assets/index.html-D7y2kanx.js","assets/READEME.html-hP783urv.js","assets/index.html-MQlwW22Z.js","assets/index.html-DzZ_nEvP.js","assets/index.html-CwmidCsW.js","assets/index.html-CP23k0zA.js","assets/index.html-Tu_Q2ot-.js","assets/index.html-CVhzCJ_p.js","assets/index.html-CwkzCe8z.js","assets/index.html-DwI92bAm.js","assets/index.html-BZrwNRla.js","assets/index.html-BSJBPQPE.js","assets/index.html-GJFrL8zs.js","assets/index.html-DZYwPkGj.js","assets/index.html-9u5Fdrko.js","assets/index.html-pPTjFfeG.js","assets/index.html-57QHuF_R.js","assets/index.html-CPy6CXEm.js","assets/index.html-DJJ21Bq0.js","assets/index.html-DU8qL0VC.js","assets/index.html-BAfLVbmG.js","assets/index.html-3GecsPRC.js","assets/index.html-Bfo1SYxv.js","assets/index.html-CxQmug64.js","assets/index.html-BZxGJS5a.js","assets/index.html-DtNAB48z.js","assets/index.html-BCAAv2Jm.js","assets/index.html-B6PY3Gh1.js","assets/index.html-Cw4qjsIR.js","assets/index.html-Cg88VhxV.js","assets/index.html-fMfF2mcd.js","assets/index.html-BxWr6PvM.js","assets/index.html-CGsLtC1Y.js","assets/index.html-b3zvX1BT.js","assets/index.html-BXCtZ22c.js","assets/index.html-DA5gMICj.js","assets/index.html-DLk1dmBA.js","assets/index.html-nqOELZIJ.js","assets/index.html-TKo3jOWx.js","assets/index.html-DOT1-zJd.js","assets/index.html-CtWDBC4x.js","assets/index.html-e17v6Uz9.js","assets/index.html-CifEOysp.js","assets/index.html-jHYzqWMV.js","assets/index.html-DOcgCnUG.js","assets/index.html-bq8aWtGj.js","assets/index.html-uMyba6nu.js","assets/index.html-DOqtz6dD.js","assets/index.html-C0v5zXoG.js","assets/index.html-DhZc-f9C.js","assets/01-基本构造.html-BgYYa7kH.js","assets/02-抽离-封装-优化.html-la_GHW-L.js","assets/03-封装操作微队列函数.html-DNu2VNQ-.js","assets/04-then函数的实现.html-Coqirbep.js","assets/05-执行队列函数.html-D47zZa2f.js","assets/06-核心代码.html-CNXSV_bm.js","assets/index.html-5Q6hO-OQ.js","assets/index.html-z8Gxe_YD.js","assets/index.html-BnwCMvEY.js","assets/index.html-CvKallFi.js","assets/index.html-CNZ9CQM7.js","assets/index.html-SvkNQKWe.js","assets/index.html-BK_SIKHz.js","assets/index.html-DMpvzY2n.js","assets/index.html-Bt14ShU7.js","assets/index.html-DIdha7Ft.js","assets/index.html-CLk-hAN4.js","assets/index.html-CnN_9Z2G.js","assets/index.html-CsWJ0L4N.js","assets/index.html-a33Mlv8q.js","assets/index.html-cAQxgMBK.js","assets/index.html-CibSDjbq.js","assets/index.html-CCHRmGcj.js","assets/index.html-B3BjA8Tn.js","assets/index.html-CKFQz_U4.js","assets/index.html-DuKvEOZC.js","assets/index.html-DwNoqJtm.js","assets/index.html-iV2XhLEz.js","assets/index.html-DsGPk4pW.js","assets/index.html-Da-_87x2.js","assets/index.html-BXluEdnV.js","assets/index.html-DZJoAUQm.js","assets/index.html-B7M9AqQq.js","assets/index.html-Ct4vPS4V.js","assets/index.html-cOcTLy-B.js","assets/index.html-CBW6TYgh.js","assets/index.html-D1jpuyyf.js","assets/index.html-2jGwfVdn.js","assets/index.html-BvFDmoIG.js","assets/index.html-Bba-xXKc.js","assets/index.html-Rh9wfsoV.js","assets/index.html-BtvJvVK4.js","assets/index.html--XXlX1mt.js","assets/index.html-B0RJbyG4.js","assets/index.html-Cg9Bd7qO.js","assets/index.html-DD7yDuAI.js","assets/index.html-Duqg-H0U.js","assets/index.html-CU1u9egG.js","assets/index.html-B9hN3coe.js","assets/index.html-6T_L_CSj.js","assets/index.html-CjLjKYQF.js","assets/404.html-BaQrO9R0.js","assets/index.html-CgyLAE9O.js","assets/index.html-s0LggCaJ.js","assets/index.html-mrBF0Zgs.js","assets/index.html-BZW9wx3T.js","assets/index.html-BeFsTr1p.js","assets/index.html-C2Peh6ER.js","assets/index.html-D2p89VXf.js","assets/index.html-DA2XNQ65.js","assets/index.html-Coc6X0Vd.js","assets/index.html-B3daBjCg.js","assets/index.html-BWgQld8z.js","assets/index.html-CqQB6nCf.js","assets/index.html-BLnUaX7j.js","assets/index.html-C0uELPy8.js","assets/index.html-D4OWnErr.js","assets/index.html-BBZxL1aS.js","assets/index.html-BUWj3ytS.js","assets/index.html-btVN-CPB.js","assets/index.html-CK9NtdNl.js","assets/index.html-Cg3R7JHu.js","assets/index.html-yTmCZMy2.js","assets/index.html-Dr8ABDyx.js","assets/index.html-fPMaHWGc.js","assets/index.html-C4PDjKZI.js","assets/index.html-CQ9-7aOh.js","assets/index.html-BPoZvoPN.js","assets/index.html-B5l2Uewy.js","assets/index.html-BhYeuDCn.js","assets/index.html-BAgKrr2p.js","assets/index.html-BT-T6-es.js","assets/index.html-DqEBEUG4.js","assets/index.html-CsoySTUF.js","assets/index.html-BygxmxB6.js","assets/index.html-CKqUbm8T.js","assets/index.html-B1kcmHu2.js","assets/index.html-CqBvn0Jx.js","assets/index.html-DQ1XTmNy.js","assets/index.html-ck84Jh0k.js","assets/index.html-BXg-gWlD.js","assets/index.html-DLH51xjY.js","assets/index.html-BhQCc6Ey.js","assets/index.html-Dp8Ur8H-.js","assets/index.html-CEsVTQjR.js","assets/index.html-CAdTYG3W.js","assets/index.html-D3liQiQ3.js","assets/index.html-XgS3SdaE.js","assets/index.html-BULUN6DY.js","assets/index.html-DFajMh7n.js","assets/index.html-DXav2DEU.js","assets/index.html-DbfPg2Gt.js","assets/index.html-BGa1_jvR.js","assets/index.html-DHDbp8MR.js","assets/index.html-DYqcsCGV.js","assets/index.html-rXbRx0JS.js","assets/index.html-JVu_yna9.js","assets/index.html-Cce6oiax.js","assets/index.html-DvHcJ-lC.js","assets/index.html-D98YCoH2.js","assets/index.html-YAMmaiNX.js","assets/index.html-D9JPeoyB.js","assets/index.html--yBWgNh0.js","assets/index.html-CvtBXOsU.js","assets/index.html-CqU4KV4y.js","assets/index.html-IIox4XVO.js","assets/index.html-BN7ohymx.js","assets/index.html-gnd4UerU.js","assets/index.html-BUCDev9a.js","assets/index.html-DwuTxlX7.js","assets/index.html-bfKSISIP.js","assets/index.html-Cup8EHJr.js","assets/index.html-CAMiCVl4.js","assets/index.html-D6nkAP45.js","assets/index.html-DJYl4NMT.js","assets/index.html-DT79RwbG.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
var Yr=Object.defineProperty;var Qr=(i,s,a)=>s in i?Yr(i,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):i[s]=a;var Ct=(i,s,a)=>Qr(i,typeof s!="symbol"?s+"":s,a);/**
* @vue/shared v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function vl(i,s){const a=new Set(i.split(","));return n=>a.has(n)}const fi={},fa=[],es=()=>{},Xr=()=>!1,on=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),Fl=i=>i.startsWith("onUpdate:"),_i=Object.assign,fl=(i,s)=>{const a=i.indexOf(s);a>-1&&i.splice(a,1)},Zr=Object.prototype.hasOwnProperty,pi=(i,s)=>Zr.call(i,s),si=Array.isArray,Wa=i=>rt(i)==="[object Map]",i2=i=>rt(i)==="[object Set]",ni=i=>typeof i=="function",Oi=i=>typeof i=="string",ja=i=>typeof i=="symbol",bi=i=>i!==null&&typeof i=="object",Mh=i=>(bi(i)||ni(i))&&ni(i.then)&&ni(i.catch),s2=Object.prototype.toString,rt=i=>s2.call(i),a2=i=>rt(i).slice(8,-1),n2=i=>rt(i)==="[object Object]",ml=i=>Oi(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,ma=vl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),dt=i=>{const s=Object.create(null);return a=>s[a]||(s[a]=i(a))},t2=/-(\w)/g,ds=dt(i=>i.replace(t2,(s,a)=>a?a.toUpperCase():"")),l2=/\B([A-Z])/g,Ia=dt(i=>i.replace(l2,"-$1").toLowerCase()),Bn=dt(i=>i.charAt(0).toUpperCase()+i.slice(1)),bt=dt(i=>i?`on${Bn(i)}`:""),Gs=(i,s)=>!Object.is(i,s),Dt=(i,...s)=>{for(let a=0;a<i.length;a++)i[a](...s)},Hh=(i,s,a,n=!1)=>{Object.defineProperty(i,s,{configurable:!0,enumerable:!1,writable:n,value:a})},e2=i=>{const s=parseFloat(i);return isNaN(s)?i:s},h2=i=>{const s=Oi(i)?Number(i):NaN;return isNaN(s)?i:s};let ge;const $h=()=>ge||(ge=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Cl(i){if(si(i)){const s={};for(let a=0;a<i.length;a++){const n=i[a],t=Oi(n)?d2(n):Cl(n);if(t)for(const l in t)s[l]=t[l]}return s}else if(Oi(i)||bi(i))return i}const k2=/;(?![^(]*\))/g,p2=/:([^]+)/,r2=/\/\*[^]*?\*\//g;function d2(i){const s={};return i.replace(r2,"").split(k2).forEach(a=>{if(a){const n=a.split(p2);n.length>1&&(s[n[0].trim()]=n[1].trim())}}),s}function bl(i){let s="";if(Oi(i))s=i;else if(si(i))for(let a=0;a<i.length;a++){const n=bl(i[a]);n&&(s+=n+" ")}else if(bi(i))for(const a in i)i[a]&&(s+=a+" ");return s.trim()}const c2="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",o2=vl(c2);function Nh(i){return!!i||i===""}/**
* @vue/reactivity v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Xi;class B2{constructor(s=!1){this.detached=s,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Xi,!s&&Xi&&(this.index=(Xi.scopes||(Xi.scopes=[])).push(this)-1)}get active(){return this._active}run(s){if(this._active){const a=Xi;try{return Xi=this,s()}finally{Xi=a}}}on(){Xi=this}off(){Xi=this.parent}stop(s){if(this._active){let a,n;for(a=0,n=this.effects.length;a<n;a++)this.effects[a].stop();for(a=0,n=this.cleanups.length;a<n;a++)this.cleanups[a]();if(this.scopes)for(a=0,n=this.scopes.length;a<n;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!s){const t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.parent=void 0,this._active=!1}}}function E2(i,s=Xi){s&&s.active&&s.effects.push(i)}function zh(){return Xi}function g2(i){Xi&&Xi.cleanups.push(i)}let ra;class Dl{constructor(s,a,n,t){this.fn=s,this.trigger=a,this.scheduler=n,this.active=!0,this.deps=[],this._dirtyLevel=5,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,E2(this,t)}get dirty(){if(this._dirtyLevel===2)return!1;if(this._dirtyLevel===3||this._dirtyLevel===4){this._dirtyLevel=1,Xs();for(let s=0;s<this._depsLength;s++){const a=this.deps[s];if(a.computed){if(a.computed.effect._dirtyLevel===2)return js(),!0;if(y2(a.computed),this._dirtyLevel>=5)break}}this._dirtyLevel===1&&(this._dirtyLevel=0),js()}return this._dirtyLevel>=5}set dirty(s){this._dirtyLevel=s?5:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let s=Us,a=ra;try{return Us=!0,ra=this,this._runnings++,ye(this),this.fn()}finally{Ae(this),this._runnings--,ra=a,Us=s}}stop(){this.active&&(ye(this),Ae(this),this.onStop&&this.onStop(),this.active=!1)}}function y2(i){return i.value}function ye(i){i._trackId++,i._depsLength=0}function Ae(i){if(i.deps.length>i._depsLength){for(let s=i._depsLength;s<i.deps.length;s++)Wh(i.deps[s],i);i.deps.length=i._depsLength}}function Wh(i,s){const a=i.get(s);a!==void 0&&s._trackId!==a&&(i.delete(s),i.size===0&&i.cleanup())}let Us=!0,Jt=0;const qh=[];function Xs(){qh.push(Us),Us=!1}function js(){const i=qh.pop();Us=i===void 0?!0:i}function _l(){Jt++}function wl(){for(Jt--;!Jt&&Gt.length;)Gt.shift()()}function Uh(i,s,a){if(s.get(i)!==i._trackId){s.set(i,i._trackId);const n=i.deps[i._depsLength];n!==s?(n&&Wh(n,i),i.deps[i._depsLength++]=s):i._depsLength++}}const Gt=[];function Jh(i,s,a){_l();for(const n of i.keys()){let t;if(!i.computed&&n.computed&&n._runnings>0&&(t??(t=i.get(n)===n._trackId))){n._dirtyLevel=2;continue}n._dirtyLevel<s&&(t??(t=i.get(n)===n._trackId))&&(n._shouldSchedule||(n._shouldSchedule=n._dirtyLevel===0),n.computed&&n._dirtyLevel===2&&(n._shouldSchedule=!0),n._dirtyLevel=s),n._shouldSchedule&&(t??(t=i.get(n)===n._trackId))&&(n.trigger(),(!n._runnings||n.allowRecurse)&&n._dirtyLevel!==3&&(n._shouldSchedule=!1,n.scheduler&&Gt.push(n.scheduler)))}wl()}const Gh=(i,s)=>{const a=new Map;return a.cleanup=i,a.computed=s,a},it=new WeakMap,da=Symbol(""),Kt=Symbol("");function Gi(i,s,a){if(Us&&ra){let n=it.get(i);n||it.set(i,n=new Map);let t=n.get(a);t||n.set(a,t=Gh(()=>n.delete(a))),Uh(ra,t)}}function Ls(i,s,a,n,t,l){const e=it.get(i);if(!e)return;let k=[];if(s==="clear")k=[...e.values()];else if(a==="length"&&si(i)){const p=Number(n);e.forEach((r,d)=>{(d==="length"||!ja(d)&&d>=p)&&k.push(r)})}else switch(a!==void 0&&k.push(e.get(a)),s){case"add":si(i)?ml(a)&&k.push(e.get("length")):(k.push(e.get(da)),Wa(i)&&k.push(e.get(Kt)));break;case"delete":si(i)||(k.push(e.get(da)),Wa(i)&&k.push(e.get(Kt)));break;case"set":Wa(i)&&k.push(e.get(da));break}_l();for(const p of k)p&&Jh(p,5);wl()}function A2(i,s){const a=it.get(i);return a&&a.get(s)}const u2=vl("__proto__,__v_isRef,__isVue"),Kh=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(ja)),ue=v2();function v2(){const i={};return["includes","indexOf","lastIndexOf"].forEach(s=>{i[s]=function(...a){const n=ri(this);for(let l=0,e=this.length;l<e;l++)Gi(n,"get",l+"");const t=n[s](...a);return t===-1||t===!1?n[s](...a.map(ri)):t}}),["push","pop","shift","unshift","splice"].forEach(s=>{i[s]=function(...a){Xs(),_l();const n=ri(this)[s].apply(this,a);return wl(),js(),n}}),i}function F2(i){ja(i)||(i=String(i));const s=ri(this);return Gi(s,"has",i),s.hasOwnProperty(i)}class Yh{constructor(s=!1,a=!1){this._isReadonly=s,this._isShallow=a}get(s,a,n){const t=this._isReadonly,l=this._isShallow;if(a==="__v_isReactive")return!t;if(a==="__v_isReadonly")return t;if(a==="__v_isShallow")return l;if(a==="__v_raw")return n===(t?l?L2:ik:l?Zh:Xh).get(s)||Object.getPrototypeOf(s)===Object.getPrototypeOf(n)?s:void 0;const e=si(s);if(!t){if(e&&pi(ue,a))return Reflect.get(ue,a,n);if(a==="hasOwnProperty")return F2}const k=Reflect.get(s,a,n);return(ja(a)?Kh.has(a):u2(a))||(t||Gi(s,"get",a),l)?k:Vi(k)?e&&ml(a)?k:k.value:bi(k)?t?Zs(k):En(k):k}}class Qh extends Yh{constructor(s=!1){super(!1,s)}set(s,a,n,t){let l=s[a];if(!this._isShallow){const p=an(l);if(!st(n)&&!an(n)&&(l=ri(l),n=ri(n)),!si(s)&&Vi(l)&&!Vi(n))return p?!1:(l.value=n,!0)}const e=si(s)&&ml(a)?Number(a)<s.length:pi(s,a),k=Reflect.set(s,a,n,t);return s===ri(t)&&(e?Gs(n,l)&&Ls(s,"set",a,n):Ls(s,"add",a,n)),k}deleteProperty(s,a){const n=pi(s,a);s[a];const t=Reflect.deleteProperty(s,a);return t&&n&&Ls(s,"delete",a,void 0),t}has(s,a){const n=Reflect.has(s,a);return(!ja(a)||!Kh.has(a))&&Gi(s,"has",a),n}ownKeys(s){return Gi(s,"iterate",si(s)?"length":da),Reflect.ownKeys(s)}}class f2 extends Yh{constructor(s=!1){super(!0,s)}set(s,a){return!0}deleteProperty(s,a){return!0}}const m2=new Qh,C2=new f2,b2=new Qh(!0);const xl=i=>i,ct=i=>Reflect.getPrototypeOf(i);function Vn(i,s,a=!1,n=!1){i=i.__v_raw;const t=ri(i),l=ri(s);a||(Gs(s,l)&&Gi(t,"get",s),Gi(t,"get",l));const{has:e}=ct(t),k=n?xl:a?Tl:nn;if(e.call(t,s))return k(i.get(s));if(e.call(t,l))return k(i.get(l));i!==t&&i.get(s)}function Mn(i,s=!1){const a=this.__v_raw,n=ri(a),t=ri(i);return s||(Gs(i,t)&&Gi(n,"has",i),Gi(n,"has",t)),i===t?a.has(i):a.has(i)||a.has(t)}function Hn(i,s=!1){return i=i.__v_raw,!s&&Gi(ri(i),"iterate",da),Reflect.get(i,"size",i)}function ve(i){i=ri(i);const s=ri(this);return ct(s).has.call(s,i)||(s.add(i),Ls(s,"add",i,i)),this}function Fe(i,s){s=ri(s);const a=ri(this),{has:n,get:t}=ct(a);let l=n.call(a,i);l||(i=ri(i),l=n.call(a,i));const e=t.call(a,i);return a.set(i,s),l?Gs(s,e)&&Ls(a,"set",i,s):Ls(a,"add",i,s),this}function fe(i){const s=ri(this),{has:a,get:n}=ct(s);let t=a.call(s,i);t||(i=ri(i),t=a.call(s,i)),n&&n.call(s,i);const l=s.delete(i);return t&&Ls(s,"delete",i,void 0),l}function me(){const i=ri(this),s=i.size!==0,a=i.clear();return s&&Ls(i,"clear",void 0,void 0),a}function $n(i,s){return function(n,t){const l=this,e=l.__v_raw,k=ri(e),p=s?xl:i?Tl:nn;return!i&&Gi(k,"iterate",da),e.forEach((r,d)=>n.call(t,p(r),p(d),l))}}function Nn(i,s,a){return function(...n){const t=this.__v_raw,l=ri(t),e=Wa(l),k=i==="entries"||i===Symbol.iterator&&e,p=i==="keys"&&e,r=t[i](...n),d=a?xl:s?Tl:nn;return!s&&Gi(l,"iterate",p?Kt:da),{next(){const{value:c,done:o}=r.next();return o?{value:c,done:o}:{value:k?[d(c[0]),d(c[1])]:d(c),done:o}},[Symbol.iterator](){return this}}}}function Vs(i){return function(...s){return i==="delete"?!1:i==="clear"?void 0:this}}function D2(){const i={get(l){return Vn(this,l)},get size(){return Hn(this)},has:Mn,add:ve,set:Fe,delete:fe,clear:me,forEach:$n(!1,!1)},s={get(l){return Vn(this,l,!1,!0)},get size(){return Hn(this)},has:Mn,add:ve,set:Fe,delete:fe,clear:me,forEach:$n(!1,!0)},a={get(l){return Vn(this,l,!0)},get size(){return Hn(this,!0)},has(l){return Mn.call(this,l,!0)},add:Vs("add"),set:Vs("set"),delete:Vs("delete"),clear:Vs("clear"),forEach:$n(!0,!1)},n={get(l){return Vn(this,l,!0,!0)},get size(){return Hn(this,!0)},has(l){return Mn.call(this,l,!0)},add:Vs("add"),set:Vs("set"),delete:Vs("delete"),clear:Vs("clear"),forEach:$n(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{i[l]=Nn(l,!1,!1),a[l]=Nn(l,!0,!1),s[l]=Nn(l,!1,!0),n[l]=Nn(l,!0,!0)}),[i,a,s,n]}const[_2,w2,x2,S2]=D2();function Sl(i,s){const a=s?i?S2:x2:i?w2:_2;return(n,t,l)=>t==="__v_isReactive"?!i:t==="__v_isReadonly"?i:t==="__v_raw"?n:Reflect.get(pi(a,t)&&t in n?a:n,t,l)}const P2={get:Sl(!1,!1)},T2={get:Sl(!1,!0)},R2={get:Sl(!0,!1)};const Xh=new WeakMap,Zh=new WeakMap,ik=new WeakMap,L2=new WeakMap;function j2(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function I2(i){return i.__v_skip||!Object.isExtensible(i)?0:j2(a2(i))}function En(i){return an(i)?i:Pl(i,!1,m2,P2,Xh)}function sk(i){return Pl(i,!1,b2,T2,Zh)}function Zs(i){return Pl(i,!0,C2,R2,ik)}function Pl(i,s,a,n,t){if(!bi(i)||i.__v_raw&&!(s&&i.__v_isReactive))return i;const l=t.get(i);if(l)return l;const e=I2(i);if(e===0)return i;const k=new Proxy(i,e===2?n:a);return t.set(i,k),k}function qa(i){return an(i)?qa(i.__v_raw):!!(i&&i.__v_isReactive)}function an(i){return!!(i&&i.__v_isReadonly)}function st(i){return!!(i&&i.__v_isShallow)}function ak(i){return i?!!i.__v_raw:!1}function ri(i){const s=i&&i.__v_raw;return s?ri(s):i}function O2(i){return Object.isExtensible(i)&&Hh(i,"__v_skip",!0),i}const nn=i=>bi(i)?En(i):i,Tl=i=>bi(i)?Zs(i):i;class nk{constructor(s,a,n,t){this.getter=s,this._setter=a,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Dl(()=>s(this._value),()=>Ua(this,this.effect._dirtyLevel===3?3:4)),this.effect.computed=this,this.effect.active=this._cacheable=!t,this.__v_isReadonly=n}get value(){const s=ri(this),a=s.effect._dirtyLevel;return(!s._cacheable||s.effect.dirty)&&Gs(s._value,s._value=s.effect.run())&&a!==3&&Ua(s,5),Rl(s),s.effect._dirtyLevel>=2&&Ua(s,3),s._value}set value(s){this._setter(s)}get _dirty(){return this.effect.dirty}set _dirty(s){this.effect.dirty=s}}function V2(i,s,a=!1){let n,t;const l=ni(i);return l?(n=i,t=es):(n=i.get,t=i.set),new nk(n,t,l||!t,a)}function Rl(i){var s;Us&&ra&&(i=ri(i),Uh(ra,(s=i.dep)!=null?s:i.dep=Gh(()=>i.dep=void 0,i instanceof nk?i:void 0)))}function Ua(i,s=5,a,n){i=ri(i);const t=i.dep;t&&Jh(t,s)}function Vi(i){return!!(i&&i.__v_isRef===!0)}function Z(i){return tk(i,!1)}function Mi(i){return tk(i,!0)}function tk(i,s){return Vi(i)?i:new M2(i,s)}class M2{constructor(s,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?s:ri(s),this._value=a?s:nn(s)}get value(){return Rl(this),this._value}set value(s){const a=this.__v_isShallow||st(s)||an(s);s=a?s:ri(s),Gs(s,this._rawValue)&&(this._rawValue,this._rawValue=s,this._value=a?s:nn(s),Ua(this,5))}}function ca(i){return Vi(i)?i.value:i}const H2={get:(i,s,a)=>ca(Reflect.get(i,s,a)),set:(i,s,a,n)=>{const t=i[s];return Vi(t)&&!Vi(a)?(t.value=a,!0):Reflect.set(i,s,a,n)}};function lk(i){return qa(i)?i:new Proxy(i,H2)}class $2{constructor(s){this.dep=void 0,this.__v_isRef=!0;const{get:a,set:n}=s(()=>Rl(this),()=>Ua(this));this._get=a,this._set=n}get value(){return this._get()}set value(s){this._set(s)}}function ek(i){return new $2(i)}class N2{constructor(s,a,n){this._object=s,this._key=a,this._defaultValue=n,this.__v_isRef=!0}get value(){const s=this._object[this._key];return s===void 0?this._defaultValue:s}set value(s){this._object[this._key]=s}get dep(){return A2(ri(this._object),this._key)}}class z2{constructor(s){this._getter=s,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function Oa(i,s,a){return Vi(i)?i:ni(i)?new z2(i):bi(i)&&arguments.length>1?W2(i,s,a):Z(i)}function W2(i,s,a){const n=i[s];return Vi(n)?n:new N2(i,s,a)}/**
* @vue/runtime-core v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Js(i,s,a,n){try{return n?i(...n):i()}catch(t){gn(t,s,a)}}function ks(i,s,a,n){if(ni(i)){const t=Js(i,s,a,n);return t&&Mh(t)&&t.catch(l=>{gn(l,s,a)}),t}if(si(i)){const t=[];for(let l=0;l<i.length;l++)t.push(ks(i[l],s,a,n));return t}}function gn(i,s,a,n=!0){const t=s?s.vnode:null;if(s){let l=s.parent;const e=s.proxy,k=`https://vuejs.org/error-reference/#runtime-${a}`;for(;l;){const r=l.ec;if(r){for(let d=0;d<r.length;d++)if(r[d](i,e,k)===!1)return}l=l.parent}const p=s.appContext.config.errorHandler;if(p){Xs(),Js(p,null,10,[i,e,k]),js();return}}q2(i,a,t,n)}function q2(i,s,a,n=!0){console.error(i)}let tn=!1,Yt=!1;const Hi=[];let Cs=0;const Ca=[];let Ns=null,ea=0;const hk=Promise.resolve();let Ll=null;function ia(i){const s=Ll||hk;return i?s.then(this?i.bind(this):i):s}function U2(i){let s=Cs+1,a=Hi.length;for(;s<a;){const n=s+a>>>1,t=Hi[n],l=ln(t);l<i||l===i&&t.pre?s=n+1:a=n}return s}function ot(i){(!Hi.length||!Hi.includes(i,tn&&i.allowRecurse?Cs+1:Cs))&&(i.id==null?Hi.push(i):Hi.splice(U2(i.id),0,i),kk())}function kk(){!tn&&!Yt&&(Yt=!0,Ll=hk.then(pk))}function J2(i){const s=Hi.indexOf(i);s>Cs&&Hi.splice(s,1)}function G2(i){si(i)?Ca.push(...i):(!Ns||!Ns.includes(i,i.allowRecurse?ea+1:ea))&&Ca.push(i),kk()}function Ce(i,s,a=tn?Cs+1:0){for(;a<Hi.length;a++){const n=Hi[a];if(n&&n.pre){if(i&&n.id!==i.uid)continue;Hi.splice(a,1),a--,n()}}}function at(i){if(Ca.length){const s=[...new Set(Ca)].sort((a,n)=>ln(a)-ln(n));if(Ca.length=0,Ns){Ns.push(...s);return}for(Ns=s,ea=0;ea<Ns.length;ea++){const a=Ns[ea];a.active!==!1&&a()}Ns=null,ea=0}}const ln=i=>i.id==null?1/0:i.id,K2=(i,s)=>{const a=ln(i)-ln(s);if(a===0){if(i.pre&&!s.pre)return-1;if(s.pre&&!i.pre)return 1}return a};function pk(i){Yt=!1,tn=!0,Hi.sort(K2);try{for(Cs=0;Cs<Hi.length;Cs++){const s=Hi[Cs];s&&s.active!==!1&&Js(s,null,14)}}finally{Cs=0,Hi.length=0,at(),tn=!1,Ll=null,(Hi.length||Ca.length)&&pk()}}function Y2(i,s,...a){if(i.isUnmounted)return;const n=i.vnode.props||fi;let t=a;const l=s.startsWith("update:"),e=l&&s.slice(7);if(e&&e in n){const d=`${e==="modelValue"?"model":e}Modifiers`,{number:c,trim:o}=n[d]||fi;o&&(t=a.map(B=>Oi(B)?B.trim():B)),c&&(t=a.map(e2))}let k,p=n[k=bt(s)]||n[k=bt(ds(s))];!p&&l&&(p=n[k=bt(Ia(s))]),p&&ks(p,i,6,t);const r=n[k+"Once"];if(r){if(!i.emitted)i.emitted={};else if(i.emitted[k])return;i.emitted[k]=!0,ks(r,i,6,t)}}function rk(i,s,a=!1){const n=s.emitsCache,t=n.get(i);if(t!==void 0)return t;const l=i.emits;let e={},k=!1;if(!ni(i)){const p=r=>{const d=rk(r,s,!0);d&&(k=!0,_i(e,d))};!a&&s.mixins.length&&s.mixins.forEach(p),i.extends&&p(i.extends),i.mixins&&i.mixins.forEach(p)}return!l&&!k?(bi(i)&&n.set(i,null),null):(si(l)?l.forEach(p=>e[p]=null):_i(e,l),bi(i)&&n.set(i,e),e)}function Bt(i,s){return!i||!on(s)?!1:(s=s.slice(2).replace(/Once$/,""),pi(i,s[0].toLowerCase()+s.slice(1))||pi(i,Ia(s))||pi(i,s))}let hs=null,dk=null;function nt(i){const s=hs;return hs=i,dk=i&&i.type.__scopeId||null,s}function Q2(i,s=hs,a){if(!s||i._n)return i;const n=(...t)=>{n._d&&Ve(-1);const l=nt(s);let e;try{e=i(...t)}finally{nt(l),n._d&&Ve(1)}return e};return n._n=!0,n._c=!0,n._d=!0,n}function _t(i){const{type:s,vnode:a,proxy:n,withProxy:t,propsOptions:[l],slots:e,attrs:k,emit:p,render:r,renderCache:d,props:c,data:o,setupState:B,ctx:u,inheritAttrs:v}=i,m=nt(i);let f,C;try{if(a.shapeFlag&4){const D=t||n,O=D;f=Es(r.call(O,D,d,c,B,o,u)),C=k}else{const D=s;f=Es(D.length>1?D(c,{attrs:k,slots:e,emit:p}):D(c,null)),C=s.props?k:X2(k)}}catch(D){Qa.length=0,gn(D,i,1),f=Pi(ls)}let A=f;if(C&&v!==!1){const D=Object.keys(C),{shapeFlag:O}=A;D.length&&O&7&&(l&&D.some(Fl)&&(C=Z2(C,l)),A=Ks(A,C,!1,!0))}return a.dirs&&(A=Ks(A,null,!1,!0),A.dirs=A.dirs?A.dirs.concat(a.dirs):a.dirs),a.transition&&(A.transition=a.transition),f=A,nt(m),f}const X2=i=>{let s;for(const a in i)(a==="class"||a==="style"||on(a))&&((s||(s={}))[a]=i[a]);return s},Z2=(i,s)=>{const a={};for(const n in i)(!Fl(n)||!(n.slice(9)in s))&&(a[n]=i[n]);return a};function id(i,s,a){const{props:n,children:t,component:l}=i,{props:e,children:k,patchFlag:p}=s,r=l.emitsOptions;if(s.dirs||s.transition)return!0;if(a&&p>=0){if(p&1024)return!0;if(p&16)return n?be(n,e,r):!!e;if(p&8){const d=s.dynamicProps;for(let c=0;c<d.length;c++){const o=d[c];if(e[o]!==n[o]&&!Bt(r,o))return!0}}}else return(t||k)&&(!k||!k.$stable)?!0:n===e?!1:n?e?be(n,e,r):!0:!!e;return!1}function be(i,s,a){const n=Object.keys(s);if(n.length!==Object.keys(i).length)return!0;for(let t=0;t<n.length;t++){const l=n[t];if(s[l]!==i[l]&&!Bt(a,l))return!0}return!1}function sd({vnode:i,parent:s},a){for(;s;){const n=s.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=s.vnode).el=a,s=s.parent;else break}}const ck="components";function ps(i,s){return nd(ck,i,!0,s)||i}const ad=Symbol.for("v-ndc");function nd(i,s,a=!0,n=!1){const t=hs||Ii;if(t){const l=t.type;if(i===ck){const k=Xd(l,!1);if(k&&(k===s||k===ds(s)||k===Bn(ds(s))))return l}const e=De(t[i]||l[i],s)||De(t.appContext[i],s);return!e&&n?l:e}}function De(i,s){return i&&(i[s]||i[ds(s)]||i[Bn(ds(s))])}const td=i=>i.__isSuspense;function ok(i,s){s&&s.pendingBranch?si(i)?s.effects.push(...i):s.effects.push(i):G2(i)}function Et(i,s,a=Ii,n=!1){if(a){const t=a[i]||(a[i]=[]),l=s.__weh||(s.__weh=(...e)=>{Xs();const k=vn(a),p=ks(s,a,i,e);return k(),js(),p});return n?t.unshift(l):t.push(l),l}}const Is=i=>(s,a=Ii)=>{(!Fn||i==="sp")&&Et(i,(...n)=>s(...n),a)},ld=Is("bm"),wi=Is("m"),ed=Is("bu"),Bk=Is("u"),Ek=Is("bum"),yn=Is("um"),hd=Is("sp"),kd=Is("rtg"),pd=Is("rtc");function rd(i,s=Ii){Et("ec",i,s)}function ms(i,s,a,n){const t=i.dirs,l=s&&s.dirs;for(let e=0;e<t.length;e++){const k=t[e];l&&(k.oldValue=l[e].value);let p=k.dir[n];p&&(Xs(),ks(p,a,8,[i.el,k,i,s]),js())}}/*! #__NO_SIDE_EFFECTS__ */function N(i,s){return ni(i)?_i({name:i.name},s,{setup:i}):i}const Ja=i=>!!i.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function dd(i){ni(i)&&(i={loader:i});const{loader:s,loadingComponent:a,errorComponent:n,delay:t=200,timeout:l,suspensible:e=!0,onError:k}=i;let p=null,r,d=0;const c=()=>(d++,p=null,o()),o=()=>{let B;return p||(B=p=s().catch(u=>{if(u=u instanceof Error?u:new Error(String(u)),k)return new Promise((v,m)=>{k(u,()=>v(c()),()=>m(u),d+1)});throw u}).then(u=>B!==p&&p?p:(u&&(u.__esModule||u[Symbol.toStringTag]==="Module")&&(u=u.default),r=u,u)))};return N({name:"AsyncComponentWrapper",__asyncLoader:o,get __asyncResolved(){return r},setup(){const B=Ii;if(r)return()=>wt(r,B);const u=C=>{p=null,gn(C,B,13,!n)};if(e&&B.suspense||Fn)return o().then(C=>()=>wt(C,B)).catch(C=>(u(C),()=>n?Pi(n,{error:C}):null));const v=Z(!1),m=Z(),f=Z(!!t);return t&&setTimeout(()=>{f.value=!1},t),l!=null&&setTimeout(()=>{if(!v.value&&!m.value){const C=new Error(`Async component timed out after ${l}ms.`);u(C),m.value=C}},l),o().then(()=>{v.value=!0,B.parent&&An(B.parent.vnode)&&(B.parent.effect.dirty=!0,ot(B.parent.update))}).catch(C=>{u(C),m.value=C}),()=>{if(v.value&&r)return wt(r,B);if(m.value&&n)return Pi(n,{error:m.value});if(a&&!f.value)return Pi(a)}}})}function wt(i,s){const{ref:a,props:n,children:t,ce:l}=s.vnode,e=Pi(i,n,t);return e.ref=a,e.ce=l,delete s.vnode.ce,e}const Qt=i=>i?Mk(i)?Hl(i):Qt(i.parent):null,Ga=_i(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Qt(i.parent),$root:i=>Qt(i.root),$emit:i=>i.emit,$options:i=>jl(i),$forceUpdate:i=>i.f||(i.f=()=>{i.effect.dirty=!0,ot(i.update)}),$nextTick:i=>i.n||(i.n=ia.bind(i.proxy)),$watch:i=>Rd.bind(i)}),xt=(i,s)=>i!==fi&&!i.__isScriptSetup&&pi(i,s),cd={get({_:i},s){if(s==="__v_skip")return!0;const{ctx:a,setupState:n,data:t,props:l,accessCache:e,type:k,appContext:p}=i;let r;if(s[0]!=="$"){const B=e[s];if(B!==void 0)switch(B){case 1:return n[s];case 2:return t[s];case 4:return a[s];case 3:return l[s]}else{if(xt(n,s))return e[s]=1,n[s];if(t!==fi&&pi(t,s))return e[s]=2,t[s];if((r=i.propsOptions[0])&&pi(r,s))return e[s]=3,l[s];if(a!==fi&&pi(a,s))return e[s]=4,a[s];Xt&&(e[s]=0)}}const d=Ga[s];let c,o;if(d)return s==="$attrs"&&Gi(i.attrs,"get",""),d(i);if((c=k.__cssModules)&&(c=c[s]))return c;if(a!==fi&&pi(a,s))return e[s]=4,a[s];if(o=p.config.globalProperties,pi(o,s))return o[s]},set({_:i},s,a){const{data:n,setupState:t,ctx:l}=i;return xt(t,s)?(t[s]=a,!0):n!==fi&&pi(n,s)?(n[s]=a,!0):pi(i.props,s)||s[0]==="$"&&s.slice(1)in i?!1:(l[s]=a,!0)},has({_:{data:i,setupState:s,accessCache:a,ctx:n,appContext:t,propsOptions:l}},e){let k;return!!a[e]||i!==fi&&pi(i,e)||xt(s,e)||(k=l[0])&&pi(k,e)||pi(n,e)||pi(Ga,e)||pi(t.config.globalProperties,e)},defineProperty(i,s,a){return a.get!=null?i._.accessCache[s]=0:pi(a,"value")&&this.set(i,s,a.value,null),Reflect.defineProperty(i,s,a)}};function _e(i){return si(i)?i.reduce((s,a)=>(s[a]=null,s),{}):i}let Xt=!0;function od(i){const s=jl(i),a=i.proxy,n=i.ctx;Xt=!1,s.beforeCreate&&we(s.beforeCreate,i,"bc");const{data:t,computed:l,methods:e,watch:k,provide:p,inject:r,created:d,beforeMount:c,mounted:o,beforeUpdate:B,updated:u,activated:v,deactivated:m,beforeDestroy:f,beforeUnmount:C,destroyed:A,unmounted:D,render:O,renderTracked:T,renderTriggered:V,errorCaptured:K,serverPrefetch:M,expose:P,inheritAttrs:z,components:R,directives:X,filters:yi}=s;if(r&&Bd(r,n,null),e)for(const ii in e){const J=e[ii];ni(J)&&(n[ii]=J.bind(a))}if(t){const ii=t.call(a,a);bi(ii)&&(i.data=En(ii))}if(Xt=!0,l)for(const ii in l){const J=l[ii],xi=ni(J)?J.bind(a,a):ni(J.get)?J.get.bind(a,a):es,vs=!ni(J)&&ni(J.set)?J.set.bind(a):es,ss=F({get:xi,set:vs});Object.defineProperty(n,ii,{enumerable:!0,configurable:!0,get:()=>ss.value,set:Li=>ss.value=Li})}if(k)for(const ii in k)gk(k[ii],n,a,ii);if(p){const ii=ni(p)?p.call(a):p;Reflect.ownKeys(ii).forEach(J=>{ys(J,ii[J])})}d&&we(d,i,"c");function U(ii,J){si(J)?J.forEach(xi=>ii(xi.bind(a))):J&&ii(J.bind(a))}if(U(ld,c),U(wi,o),U(ed,B),U(Bk,u),U(Ld,v),U(jd,m),U(rd,K),U(pd,T),U(kd,V),U(Ek,C),U(yn,D),U(hd,M),si(P))if(P.length){const ii=i.exposed||(i.exposed={});P.forEach(J=>{Object.defineProperty(ii,J,{get:()=>a[J],set:xi=>a[J]=xi})})}else i.exposed||(i.exposed={});O&&i.render===es&&(i.render=O),z!=null&&(i.inheritAttrs=z),R&&(i.components=R),X&&(i.directives=X)}function Bd(i,s,a=es){si(i)&&(i=Zt(i));for(const n in i){const t=i[n];let l;bi(t)?"default"in t?l=mi(t.from||n,t.default,!0):l=mi(t.from||n):l=mi(t),Vi(l)?Object.defineProperty(s,n,{enumerable:!0,configurable:!0,get:()=>l.value,set:e=>l.value=e}):s[n]=l}}function we(i,s,a){ks(si(i)?i.map(n=>n.bind(s.proxy)):i.bind(s.proxy),s,a)}function gk(i,s,a,n){const t=n.includes(".")?Sk(a,n):()=>a[n];if(Oi(i)){const l=s[i];ni(l)&&oi(t,l)}else if(ni(i))oi(t,i.bind(a));else if(bi(i))if(si(i))i.forEach(l=>gk(l,s,a,n));else{const l=ni(i.handler)?i.handler.bind(a):s[i.handler];ni(l)&&oi(t,l,i)}}function jl(i){const s=i.type,{mixins:a,extends:n}=s,{mixins:t,optionsCache:l,config:{optionMergeStrategies:e}}=i.appContext,k=l.get(s);let p;return k?p=k:!t.length&&!a&&!n?p=s:(p={},t.length&&t.forEach(r=>tt(p,r,e,!0)),tt(p,s,e)),bi(s)&&l.set(s,p),p}function tt(i,s,a,n=!1){const{mixins:t,extends:l}=s;l&&tt(i,l,a,!0),t&&t.forEach(e=>tt(i,e,a,!0));for(const e in s)if(!(n&&e==="expose")){const k=Ed[e]||a&&a[e];i[e]=k?k(i[e],s[e]):s[e]}return i}const Ed={data:xe,props:Se,emits:Se,methods:Na,computed:Na,beforeCreate:zi,created:zi,beforeMount:zi,mounted:zi,beforeUpdate:zi,updated:zi,beforeDestroy:zi,beforeUnmount:zi,destroyed:zi,unmounted:zi,activated:zi,deactivated:zi,errorCaptured:zi,serverPrefetch:zi,components:Na,directives:Na,watch:yd,provide:xe,inject:gd};function xe(i,s){return s?i?function(){return _i(ni(i)?i.call(this,this):i,ni(s)?s.call(this,this):s)}:s:i}function gd(i,s){return Na(Zt(i),Zt(s))}function Zt(i){if(si(i)){const s={};for(let a=0;a<i.length;a++)s[i[a]]=i[a];return s}return i}function zi(i,s){return i?[...new Set([].concat(i,s))]:s}function Na(i,s){return i?_i(Object.create(null),i,s):s}function Se(i,s){return i?si(i)&&si(s)?[...new Set([...i,...s])]:_i(Object.create(null),_e(i),_e(s??{})):s}function yd(i,s){if(!i)return s;if(!s)return i;const a=_i(Object.create(null),i);for(const n in s)a[n]=zi(i[n],s[n]);return a}function yk(){return{app:null,config:{isNativeTag:Xr,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ad=0;function ud(i,s){return function(n,t=null){ni(n)||(n=_i({},n)),t!=null&&!bi(t)&&(t=null);const l=yk(),e=new WeakSet;let k=!1;const p=l.app={_uid:Ad++,_component:n,_props:t,_container:null,_context:l,_instance:null,version:ic,get config(){return l.config},set config(r){},use(r,...d){return e.has(r)||(r&&ni(r.install)?(e.add(r),r.install(p,...d)):ni(r)&&(e.add(r),r(p,...d))),p},mixin(r){return l.mixins.includes(r)||l.mixins.push(r),p},component(r,d){return d?(l.components[r]=d,p):l.components[r]},directive(r,d){return d?(l.directives[r]=d,p):l.directives[r]},mount(r,d,c){if(!k){const o=Pi(n,t);return o.appContext=l,c===!0?c="svg":c===!1&&(c=void 0),d&&s?s(o,r):i(o,r,c),k=!0,p._container=r,r.__vue_app__=p,Hl(o.component)}},unmount(){k&&(i(null,p._container),delete p._container.__vue_app__)},provide(r,d){return l.provides[r]=d,p},runWithContext(r){const d=Ka;Ka=p;try{return r()}finally{Ka=d}}};return p}}let Ka=null;function ys(i,s){if(Ii){let a=Ii.provides;const n=Ii.parent&&Ii.parent.provides;n===a&&(a=Ii.provides=Object.create(n)),a[i]=s}}function mi(i,s,a=!1){const n=Ii||hs;if(n||Ka){const t=n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:Ka._context.provides;if(t&&i in t)return t[i];if(arguments.length>1)return a&&ni(s)?s.call(n&&n.proxy):s}}const Ak={},uk=()=>Object.create(Ak),vk=i=>Object.getPrototypeOf(i)===Ak;function vd(i,s,a,n=!1){const t={},l=uk();i.propsDefaults=Object.create(null),Fk(i,s,t,l);for(const e in i.propsOptions[0])e in t||(t[e]=void 0);a?i.props=n?t:sk(t):i.type.props?i.props=t:i.props=l,i.attrs=l}function Fd(i,s,a,n){const{props:t,attrs:l,vnode:{patchFlag:e}}=i,k=ri(t),[p]=i.propsOptions;let r=!1;if((n||e>0)&&!(e&16)){if(e&8){const d=i.vnode.dynamicProps;for(let c=0;c<d.length;c++){let o=d[c];if(Bt(i.emitsOptions,o))continue;const B=s[o];if(p)if(pi(l,o))B!==l[o]&&(l[o]=B,r=!0);else{const u=ds(o);t[u]=il(p,k,u,B,i,!1)}else B!==l[o]&&(l[o]=B,r=!0)}}}else{Fk(i,s,t,l)&&(r=!0);let d;for(const c in k)(!s||!pi(s,c)&&((d=Ia(c))===c||!pi(s,d)))&&(p?a&&(a[c]!==void 0||a[d]!==void 0)&&(t[c]=il(p,k,c,void 0,i,!0)):delete t[c]);if(l!==k)for(const c in l)(!s||!pi(s,c))&&(delete l[c],r=!0)}r&&Ls(i.attrs,"set","")}function Fk(i,s,a,n){const[t,l]=i.propsOptions;let e=!1,k;if(s)for(let p in s){if(ma(p))continue;const r=s[p];let d;t&&pi(t,d=ds(p))?!l||!l.includes(d)?a[d]=r:(k||(k={}))[d]=r:Bt(i.emitsOptions,p)||(!(p in n)||r!==n[p])&&(n[p]=r,e=!0)}if(l){const p=ri(a),r=k||fi;for(let d=0;d<l.length;d++){const c=l[d];a[c]=il(t,p,c,r[c],i,!pi(r,c))}}return e}function il(i,s,a,n,t,l){const e=i[a];if(e!=null){const k=pi(e,"default");if(k&&n===void 0){const p=e.default;if(e.type!==Function&&!e.skipFactory&&ni(p)){const{propsDefaults:r}=t;if(a in r)n=r[a];else{const d=vn(t);n=r[a]=p.call(null,s),d()}}else n=p}e[0]&&(l&&!k?n=!1:e[1]&&(n===""||n===Ia(a))&&(n=!0))}return n}function fk(i,s,a=!1){const n=s.propsCache,t=n.get(i);if(t)return t;const l=i.props,e={},k=[];let p=!1;if(!ni(i)){const d=c=>{p=!0;const[o,B]=fk(c,s,!0);_i(e,o),B&&k.push(...B)};!a&&s.mixins.length&&s.mixins.forEach(d),i.extends&&d(i.extends),i.mixins&&i.mixins.forEach(d)}if(!l&&!p)return bi(i)&&n.set(i,fa),fa;if(si(l))for(let d=0;d<l.length;d++){const c=ds(l[d]);Pe(c)&&(e[c]=fi)}else if(l)for(const d in l){const c=ds(d);if(Pe(c)){const o=l[d],B=e[c]=si(o)||ni(o)?{type:o}:_i({},o);if(B){const u=Le(Boolean,B.type),v=Le(String,B.type);B[0]=u>-1,B[1]=v<0||u<v,(u>-1||pi(B,"default"))&&k.push(c)}}}const r=[e,k];return bi(i)&&n.set(i,r),r}function Pe(i){return i[0]!=="$"&&!ma(i)}function Te(i){return i===null?"null":typeof i=="function"?i.name||"":typeof i=="object"&&i.constructor&&i.constructor.name||""}function Re(i,s){return Te(i)===Te(s)}function Le(i,s){return si(s)?s.findIndex(a=>Re(a,i)):ni(s)&&Re(s,i)?0:-1}const mk=i=>i[0]==="_"||i==="$stable",Il=i=>si(i)?i.map(Es):[Es(i)],fd=(i,s,a)=>{if(s._n)return s;const n=Q2((...t)=>Il(s(...t)),a);return n._c=!1,n},Ck=(i,s,a)=>{const n=i._ctx;for(const t in i){if(mk(t))continue;const l=i[t];if(ni(l))s[t]=fd(t,l,n);else if(l!=null){const e=Il(l);s[t]=()=>e}}},bk=(i,s)=>{const a=Il(s);i.slots.default=()=>a},md=(i,s)=>{const a=i.slots=uk();if(i.vnode.shapeFlag&32){const n=s._;n?(_i(a,s),Hh(a,"_",n,!0)):Ck(s,a)}else s&&bk(i,s)},Cd=(i,s,a)=>{const{vnode:n,slots:t}=i;let l=!0,e=fi;if(n.shapeFlag&32){const k=s._;k?a&&k===1?l=!1:(_i(t,s),!a&&k===1&&delete t._):(l=!s.$stable,Ck(s,t)),e=s}else s&&(bk(i,s),e={default:1});if(l)for(const k in t)!mk(k)&&e[k]==null&&delete t[k]};function lt(i,s,a,n,t=!1){if(si(i)){i.forEach((o,B)=>lt(o,s&&(si(s)?s[B]:s),a,n,t));return}if(Ja(n)&&!t)return;const l=n.shapeFlag&4?Hl(n.component):n.el,e=t?null:l,{i:k,r:p}=i,r=s&&s.r,d=k.refs===fi?k.refs={}:k.refs,c=k.setupState;if(r!=null&&r!==p&&(Oi(r)?(d[r]=null,pi(c,r)&&(c[r]=null)):Vi(r)&&(r.value=null)),ni(p))Js(p,k,12,[e,d]);else{const o=Oi(p),B=Vi(p);if(o||B){const u=()=>{if(i.f){const v=o?pi(c,p)?c[p]:d[p]:p.value;t?si(v)&&fl(v,l):si(v)?v.includes(l)||v.push(l):o?(d[p]=[l],pi(c,p)&&(c[p]=d[p])):(p.value=[l],i.k&&(d[i.k]=p.value))}else o?(d[p]=e,pi(c,p)&&(c[p]=e)):B&&(p.value=e,i.k&&(d[i.k]=e))};e?(u.id=-1,qi(u,a)):u()}}}let je=!1;const ua=()=>{je||(console.error("Hydration completed but contains mismatches."),je=!0)},bd=i=>i.namespaceURI.includes("svg")&&i.tagName!=="foreignObject",Dd=i=>i.namespaceURI.includes("MathML"),zn=i=>{if(bd(i))return"svg";if(Dd(i))return"mathml"},Wn=i=>i.nodeType===8;function _d(i){const{mt:s,p:a,o:{patchProp:n,createText:t,nextSibling:l,parentNode:e,remove:k,insert:p,createComment:r}}=i,d=(A,D)=>{if(!D.hasChildNodes()){a(null,A,D),at(),D._vnode=A;return}c(D.firstChild,A,null,null,null),at(),D._vnode=A},c=(A,D,O,T,V,K=!1)=>{K=K||!!D.dynamicChildren;const M=Wn(A)&&A.data==="[",P=()=>v(A,D,O,T,V,M),{type:z,ref:R,shapeFlag:X,patchFlag:yi}=D;let Ai=A.nodeType;D.el=A,yi===-2&&(K=!1,D.dynamicChildren=null);let U=null;switch(z){case xa:Ai!==3?D.children===""?(p(D.el=t(""),e(A),A),U=A):U=P():(A.data!==D.children&&(ua(),A.data=D.children),U=l(A));break;case ls:C(A)?(U=l(A),f(D.el=A.content.firstChild,A,O)):Ai!==8||M?U=P():U=l(A);break;case Ya:if(M&&(A=l(A),Ai=A.nodeType),Ai===1||Ai===3){U=A;const ii=!D.children.length;for(let J=0;J<D.staticCount;J++)ii&&(D.children+=U.nodeType===1?U.outerHTML:U.data),J===D.staticCount-1&&(D.anchor=U),U=l(U);return M?l(U):U}else P();break;case Zi:M?U=u(A,D,O,T,V,K):U=P();break;default:if(X&1)(Ai!==1||D.type.toLowerCase()!==A.tagName.toLowerCase())&&!C(A)?U=P():U=o(A,D,O,T,V,K);else if(X&6){D.slotScopeIds=V;const ii=e(A);if(M?U=m(A):Wn(A)&&A.data==="teleport start"?U=m(A,A.data,"teleport end"):U=l(A),s(D,ii,null,O,T,zn(ii),K),Ja(D)){let J;M?(J=Pi(Zi),J.anchor=U?U.previousSibling:ii.lastChild):J=A.nodeType===3?Vk(""):Pi("div"),J.el=A,D.component.subTree=J}}else X&64?Ai!==8?U=P():U=D.type.hydrate(A,D,O,T,V,K,i,B):X&128&&(U=D.type.hydrate(A,D,O,T,zn(e(A)),V,K,i,c))}return R!=null&&lt(R,null,T,D),U},o=(A,D,O,T,V,K)=>{K=K||!!D.dynamicChildren;const{type:M,props:P,patchFlag:z,shapeFlag:R,dirs:X,transition:yi}=D,Ai=M==="input"||M==="option";if(Ai||z!==-1){X&&ms(D,null,O,"created");let U=!1;if(C(A)){U=Dk(T,yi)&&O&&O.vnode.props&&O.vnode.props.appear;const J=A.content.firstChild;U&&yi.beforeEnter(J),f(J,A,O),D.el=A=J}if(R&16&&!(P&&(P.innerHTML||P.textContent))){let J=B(A.firstChild,D,A,O,T,V,K);for(;J;){ua();const xi=J;J=J.nextSibling,k(xi)}}else R&8&&A.textContent!==D.children&&(ua(),A.textContent=D.children);if(P)if(Ai||!K||z&48)for(const J in P)(Ai&&(J.endsWith("value")||J==="indeterminate")||on(J)&&!ma(J)||J[0]===".")&&n(A,J,null,P[J],void 0,void 0,O);else P.onClick&&n(A,"onClick",null,P.onClick,void 0,void 0,O);let ii;(ii=P&&P.onVnodeBeforeMount)&&ns(ii,O,D),X&&ms(D,null,O,"beforeMount"),((ii=P&&P.onVnodeMounted)||X||U)&&ok(()=>{ii&&ns(ii,O,D),U&&yi.enter(A),X&&ms(D,null,O,"mounted")},T)}return A.nextSibling},B=(A,D,O,T,V,K,M)=>{M=M||!!D.dynamicChildren;const P=D.children,z=P.length;for(let R=0;R<z;R++){const X=M?P[R]:P[R]=Es(P[R]);A?A=c(A,X,T,V,K,M):X.type===xa&&!X.children?p(X.el=t(""),O):(ua(),a(null,X,O,null,T,V,zn(O),K))}return A},u=(A,D,O,T,V,K)=>{const{slotScopeIds:M}=D;M&&(V=V?V.concat(M):M);const P=e(A),z=B(l(A),D,P,O,T,V,K);return z&&Wn(z)&&z.data==="]"?l(D.anchor=z):(ua(),p(D.anchor=r("]"),P,z),z)},v=(A,D,O,T,V,K)=>{if(ua(),D.el=null,K){const z=m(A);for(;;){const R=l(A);if(R&&R!==z)k(R);else break}}const M=l(A),P=e(A);return k(A),a(null,D,P,M,O,T,zn(P),V),M},m=(A,D="[",O="]")=>{let T=0;for(;A;)if(A=l(A),A&&Wn(A)&&(A.data===D&&T++,A.data===O)){if(T===0)return l(A);T--}return A},f=(A,D,O)=>{const T=D.parentNode;T&&T.replaceChild(A,D);let V=O;for(;V;)V.vnode.el===D&&(V.vnode.el=V.subTree.el=A),V=V.parent},C=A=>A.nodeType===1&&A.tagName.toLowerCase()==="template";return[d,c]}const qi=ok;function wd(i){return xd(i,_d)}function xd(i,s){const a=$h();a.__VUE__=!0;const{insert:n,remove:t,patchProp:l,createElement:e,createText:k,createComment:p,setText:r,setElementText:d,parentNode:c,nextSibling:o,setScopeId:B=es,insertStaticContent:u}=i,v=(E,g,b,x=null,w=null,j=null,$=void 0,L=null,I=!!g.dynamicChildren)=>{if(E===g)return;E&&!ka(E,g)&&(x=_(E),Li(E,w,j,!0),E=null),g.patchFlag===-2&&(I=!1,g.dynamicChildren=null);const{type:S,ref:q,shapeFlag:Q}=g;switch(S){case xa:m(E,g,b,x);break;case ls:f(E,g,b,x);break;case Ya:E==null&&C(g,b,x,$);break;case Zi:R(E,g,b,x,w,j,$,L,I);break;default:Q&1?O(E,g,b,x,w,j,$,L,I):Q&6?X(E,g,b,x,w,j,$,L,I):(Q&64||Q&128)&&S.process(E,g,b,x,w,j,$,L,I,G)}q!=null&&w&&lt(q,E&&E.ref,j,g||E,!g)},m=(E,g,b,x)=>{if(E==null)n(g.el=k(g.children),b,x);else{const w=g.el=E.el;g.children!==E.children&&r(w,g.children)}},f=(E,g,b,x)=>{E==null?n(g.el=p(g.children||""),b,x):g.el=E.el},C=(E,g,b,x)=>{[E.el,E.anchor]=u(E.children,g,b,x,E.el,E.anchor)},A=({el:E,anchor:g},b,x)=>{let w;for(;E&&E!==g;)w=o(E),n(E,b,x),E=w;n(g,b,x)},D=({el:E,anchor:g})=>{let b;for(;E&&E!==g;)b=o(E),t(E),E=b;t(g)},O=(E,g,b,x,w,j,$,L,I)=>{g.type==="svg"?$="svg":g.type==="math"&&($="mathml"),E==null?T(g,b,x,w,j,$,L,I):M(E,g,w,j,$,L,I)},T=(E,g,b,x,w,j,$,L)=>{let I,S;const{props:q,shapeFlag:Q,transition:Y,dirs:ai}=E;if(I=E.el=e(E.type,j,q&&q.is,q),Q&8?d(I,E.children):Q&16&&K(E.children,I,null,x,w,St(E,j),$,L),ai&&ms(E,null,x,"created"),V(I,E,E.scopeId,$,x),q){for(const vi in q)vi!=="value"&&!ma(vi)&&l(I,vi,null,q[vi],j,E.children,x,w,Si);"value"in q&&l(I,"value",null,q.value,j),(S=q.onVnodeBeforeMount)&&ns(S,x,E)}ai&&ms(E,null,x,"beforeMount");const li=Dk(w,Y);li&&Y.beforeEnter(I),n(I,g,b),((S=q&&q.onVnodeMounted)||li||ai)&&qi(()=>{S&&ns(S,x,E),li&&Y.enter(I),ai&&ms(E,null,x,"mounted")},w)},V=(E,g,b,x,w)=>{if(b&&B(E,b),x)for(let j=0;j<x.length;j++)B(E,x[j]);if(w){let j=w.subTree;if(g===j){const $=w.vnode;V(E,$,$.scopeId,$.slotScopeIds,w.parent)}}},K=(E,g,b,x,w,j,$,L,I=0)=>{for(let S=I;S<E.length;S++){const q=E[S]=L?Ws(E[S]):Es(E[S]);v(null,q,g,b,x,w,j,$,L)}},M=(E,g,b,x,w,j,$)=>{const L=g.el=E.el;let{patchFlag:I,dynamicChildren:S,dirs:q}=g;I|=E.patchFlag&16;const Q=E.props||fi,Y=g.props||fi;let ai;if(b&&na(b,!1),(ai=Y.onVnodeBeforeUpdate)&&ns(ai,b,g,E),q&&ms(g,E,b,"beforeUpdate"),b&&na(b,!0),S?P(E.dynamicChildren,S,L,b,x,St(g,w),j):$||J(E,g,L,null,b,x,St(g,w),j,!1),I>0){if(I&16)z(L,g,Q,Y,b,x,w);else if(I&2&&Q.class!==Y.class&&l(L,"class",null,Y.class,w),I&4&&l(L,"style",Q.style,Y.style,w),I&8){const li=g.dynamicProps;for(let vi=0;vi<li.length;vi++){const ci=li[vi],ji=Q[ci],os=Y[ci];(os!==ji||ci==="value")&&l(L,ci,ji,os,w,E.children,b,x,Si)}}I&1&&E.children!==g.children&&d(L,g.children)}else!$&&S==null&&z(L,g,Q,Y,b,x,w);((ai=Y.onVnodeUpdated)||q)&&qi(()=>{ai&&ns(ai,b,g,E),q&&ms(g,E,b,"updated")},x)},P=(E,g,b,x,w,j,$)=>{for(let L=0;L<g.length;L++){const I=E[L],S=g[L],q=I.el&&(I.type===Zi||!ka(I,S)||I.shapeFlag&70)?c(I.el):b;v(I,S,q,null,x,w,j,$,!0)}},z=(E,g,b,x,w,j,$)=>{if(b!==x){if(b!==fi)for(const L in b)!ma(L)&&!(L in x)&&l(E,L,b[L],null,$,g.children,w,j,Si);for(const L in x){if(ma(L))continue;const I=x[L],S=b[L];I!==S&&L!=="value"&&l(E,L,S,I,$,g.children,w,j,Si)}"value"in x&&l(E,"value",b.value,x.value,$)}},R=(E,g,b,x,w,j,$,L,I)=>{const S=g.el=E?E.el:k(""),q=g.anchor=E?E.anchor:k("");let{patchFlag:Q,dynamicChildren:Y,slotScopeIds:ai}=g;ai&&(L=L?L.concat(ai):ai),E==null?(n(S,b,x),n(q,b,x),K(g.children||[],b,q,w,j,$,L,I)):Q>0&&Q&64&&Y&&E.dynamicChildren?(P(E.dynamicChildren,Y,b,w,j,$,L),(g.key!=null||w&&g===w.subTree)&&_k(E,g,!0)):J(E,g,b,q,w,j,$,L,I)},X=(E,g,b,x,w,j,$,L,I)=>{g.slotScopeIds=L,E==null?g.shapeFlag&512?w.ctx.activate(g,b,x,$,I):yi(g,b,x,w,j,$,I):Ai(E,g,I)},yi=(E,g,b,x,w,j,$)=>{const L=E.component=Jd(E,x,w);if(An(E)&&(L.ctx.renderer=G),Gd(L),L.asyncDep){if(w&&w.registerDep(L,U,$),!E.el){const I=L.subTree=Pi(ls);f(null,I,g,b)}}else U(L,E,g,b,w,j,$)},Ai=(E,g,b)=>{const x=g.component=E.component;if(id(E,g,b))if(x.asyncDep&&!x.asyncResolved){ii(x,g,b);return}else x.next=g,J2(x.update),x.effect.dirty=!0,x.update();else g.el=E.el,x.vnode=g},U=(E,g,b,x,w,j,$)=>{const L=()=>{if(E.isMounted){let{next:q,bu:Q,u:Y,parent:ai,vnode:li}=E;{const Aa=wk(E);if(Aa){q&&(q.el=li.el,ii(E,q,$)),Aa.asyncDep.then(()=>{E.isUnmounted||L()});return}}let vi=q,ci;na(E,!1),q?(q.el=li.el,ii(E,q,$)):q=li,Q&&Dt(Q),(ci=q.props&&q.props.onVnodeBeforeUpdate)&&ns(ci,ai,q,li),na(E,!0);const ji=_t(E),os=E.subTree;E.subTree=ji,v(os,ji,c(os.el),_(os),E,w,j),q.el=ji.el,vi===null&&sd(E,ji.el),Y&&qi(Y,w),(ci=q.props&&q.props.onVnodeUpdated)&&qi(()=>ns(ci,ai,q,li),w)}else{let q;const{el:Q,props:Y}=g,{bm:ai,m:li,parent:vi}=E,ci=Ja(g);if(na(E,!1),ai&&Dt(ai),!ci&&(q=Y&&Y.onVnodeBeforeMount)&&ns(q,vi,g),na(E,!0),Q&&gi){const ji=()=>{E.subTree=_t(E),gi(Q,E.subTree,E,w,null)};ci?g.type.__asyncLoader().then(()=>!E.isUnmounted&&ji()):ji()}else{const ji=E.subTree=_t(E);v(null,ji,b,x,E,w,j),g.el=ji.el}if(li&&qi(li,w),!ci&&(q=Y&&Y.onVnodeMounted)){const ji=g;qi(()=>ns(q,vi,ji),w)}(g.shapeFlag&256||vi&&Ja(vi.vnode)&&vi.vnode.shapeFlag&256)&&E.a&&qi(E.a,w),E.isMounted=!0,g=b=x=null}},I=E.effect=new Dl(L,es,()=>ot(S),E.scope),S=E.update=()=>{I.dirty&&I.run()};S.id=E.uid,na(E,!0),S()},ii=(E,g,b)=>{g.component=E;const x=E.vnode.props;E.vnode=g,E.next=null,Fd(E,g.props,x,b),Cd(E,g.children,b),Xs(),Ce(E),js()},J=(E,g,b,x,w,j,$,L,I=!1)=>{const S=E&&E.children,q=E?E.shapeFlag:0,Q=g.children,{patchFlag:Y,shapeFlag:ai}=g;if(Y>0){if(Y&128){vs(S,Q,b,x,w,j,$,L,I);return}else if(Y&256){xi(S,Q,b,x,w,j,$,L,I);return}}ai&8?(q&16&&Si(S,w,j),Q!==S&&d(b,Q)):q&16?ai&16?vs(S,Q,b,x,w,j,$,L,I):Si(S,w,j,!0):(q&8&&d(b,""),ai&16&&K(Q,b,x,w,j,$,L,I))},xi=(E,g,b,x,w,j,$,L,I)=>{E=E||fa,g=g||fa;const S=E.length,q=g.length,Q=Math.min(S,q);let Y;for(Y=0;Y<Q;Y++){const ai=g[Y]=I?Ws(g[Y]):Es(g[Y]);v(E[Y],ai,b,null,w,j,$,L,I)}S>q?Si(E,w,j,!0,!1,Q):K(g,b,x,w,j,$,L,I,Q)},vs=(E,g,b,x,w,j,$,L,I)=>{let S=0;const q=g.length;let Q=E.length-1,Y=q-1;for(;S<=Q&&S<=Y;){const ai=E[S],li=g[S]=I?Ws(g[S]):Es(g[S]);if(ka(ai,li))v(ai,li,b,null,w,j,$,L,I);else break;S++}for(;S<=Q&&S<=Y;){const ai=E[Q],li=g[Y]=I?Ws(g[Y]):Es(g[Y]);if(ka(ai,li))v(ai,li,b,null,w,j,$,L,I);else break;Q--,Y--}if(S>Q){if(S<=Y){const ai=Y+1,li=ai<q?g[ai].el:x;for(;S<=Y;)v(null,g[S]=I?Ws(g[S]):Es(g[S]),b,li,w,j,$,L,I),S++}}else if(S>Y)for(;S<=Q;)Li(E[S],w,j,!0),S++;else{const ai=S,li=S,vi=new Map;for(S=li;S<=Y;S++){const Qi=g[S]=I?Ws(g[S]):Es(g[S]);Qi.key!=null&&vi.set(Qi.key,S)}let ci,ji=0;const os=Y-li+1;let Aa=!1,oe=0;const Va=new Array(os);for(S=0;S<os;S++)Va[S]=0;for(S=ai;S<=Q;S++){const Qi=E[S];if(ji>=os){Li(Qi,w,j,!0);continue}let fs;if(Qi.key!=null)fs=vi.get(Qi.key);else for(ci=li;ci<=Y;ci++)if(Va[ci-li]===0&&ka(Qi,g[ci])){fs=ci;break}fs===void 0?Li(Qi,w,j,!0):(Va[fs-li]=S+1,fs>=oe?oe=fs:Aa=!0,v(Qi,g[fs],b,null,w,j,$,L,I),ji++)}const Be=Aa?Sd(Va):fa;for(ci=Be.length-1,S=os-1;S>=0;S--){const Qi=li+S,fs=g[Qi],Ee=Qi+1<q?g[Qi+1].el:x;Va[S]===0?v(null,fs,b,Ee,w,j,$,L,I):Aa&&(ci<0||S!==Be[ci]?ss(fs,b,Ee,2):ci--)}}},ss=(E,g,b,x,w=null)=>{const{el:j,type:$,transition:L,children:I,shapeFlag:S}=E;if(S&6){ss(E.component.subTree,g,b,x);return}if(S&128){E.suspense.move(g,b,x);return}if(S&64){$.move(E,g,b,G);return}if($===Zi){n(j,g,b);for(let Q=0;Q<I.length;Q++)ss(I[Q],g,b,x);n(E.anchor,g,b);return}if($===Ya){A(E,g,b);return}if(x!==2&&S&1&&L)if(x===0)L.beforeEnter(j),n(j,g,b),qi(()=>L.enter(j),w);else{const{leave:Q,delayLeave:Y,afterLeave:ai}=L,li=()=>n(j,g,b),vi=()=>{Q(j,()=>{li(),ai&&ai()})};Y?Y(j,li,vi):vi()}else n(j,g,b)},Li=(E,g,b,x=!1,w=!1)=>{const{type:j,props:$,ref:L,children:I,dynamicChildren:S,shapeFlag:q,patchFlag:Q,dirs:Y,memoIndex:ai}=E;if(Q===-2&&(w=!1),L!=null&&lt(L,null,b,E,!0),ai!=null&&(g.renderCache[ai]=void 0),q&256){g.ctx.deactivate(E);return}const li=q&1&&Y,vi=!Ja(E);let ci;if(vi&&(ci=$&&$.onVnodeBeforeUnmount)&&ns(ci,g,E),q&6)Fs(E.component,b,x);else{if(q&128){E.suspense.unmount(b,x);return}li&&ms(E,null,g,"beforeUnmount"),q&64?E.type.remove(E,g,b,G,x):S&&(j!==Zi||Q>0&&Q&64)?Si(S,g,b,!1,!0):(j===Zi&&Q&384||!w&&q&16)&&Si(I,g,b),x&&Yi(E)}(vi&&(ci=$&&$.onVnodeUnmounted)||li)&&qi(()=>{ci&&ns(ci,g,E),li&&ms(E,null,g,"unmounted")},b)},Yi=E=>{const{type:g,el:b,anchor:x,transition:w}=E;if(g===Zi){ws(b,x);return}if(g===Ya){D(E);return}const j=()=>{t(b),w&&!w.persisted&&w.afterLeave&&w.afterLeave()};if(E.shapeFlag&1&&w&&!w.persisted){const{leave:$,delayLeave:L}=w,I=()=>$(b,j);L?L(E.el,j,I):I()}else j()},ws=(E,g)=>{let b;for(;E!==g;)b=o(E),t(E),E=b;t(g)},Fs=(E,g,b)=>{const{bum:x,scope:w,update:j,subTree:$,um:L,m:I,a:S}=E;Ie(I),Ie(S),x&&Dt(x),w.stop(),j&&(j.active=!1,Li($,E,g,b)),L&&qi(L,g),qi(()=>{E.isUnmounted=!0},g),g&&g.pendingBranch&&!g.isUnmounted&&E.asyncDep&&!E.asyncResolved&&E.suspenseId===g.pendingId&&(g.deps--,g.deps===0&&g.resolve())},Si=(E,g,b,x=!1,w=!1,j=0)=>{for(let $=j;$<E.length;$++)Li(E[$],g,b,x,w)},_=E=>E.shapeFlag&6?_(E.component.subTree):E.shapeFlag&128?E.suspense.next():o(E.anchor||E.el);let W=!1;const H=(E,g,b)=>{E==null?g._vnode&&Li(g._vnode,null,null,!0):v(g._vnode||null,E,g,null,null,null,b),W||(W=!0,Ce(),at(),W=!1),g._vnode=E},G={p:v,um:Li,m:ss,r:Yi,mt:yi,mc:K,pc:J,pbc:P,n:_,o:i};let hi,gi;return s&&([hi,gi]=s(G)),{render:H,hydrate:hi,createApp:ud(H,hi)}}function St({type:i,props:s},a){return a==="svg"&&i==="foreignObject"||a==="mathml"&&i==="annotation-xml"&&s&&s.encoding&&s.encoding.includes("html")?void 0:a}function na({effect:i,update:s},a){i.allowRecurse=s.allowRecurse=a}function Dk(i,s){return(!i||i&&!i.pendingBranch)&&s&&!s.persisted}function _k(i,s,a=!1){const n=i.children,t=s.children;if(si(n)&&si(t))for(let l=0;l<n.length;l++){const e=n[l];let k=t[l];k.shapeFlag&1&&!k.dynamicChildren&&((k.patchFlag<=0||k.patchFlag===32)&&(k=t[l]=Ws(t[l]),k.el=e.el),!a&&k.patchFlag!==-2&&_k(e,k)),k.type===xa&&(k.el=e.el)}}function Sd(i){const s=i.slice(),a=[0];let n,t,l,e,k;const p=i.length;for(n=0;n<p;n++){const r=i[n];if(r!==0){if(t=a[a.length-1],i[t]<r){s[n]=t,a.push(n);continue}for(l=0,e=a.length-1;l<e;)k=l+e>>1,i[a[k]]<r?l=k+1:e=k;r<i[a[l]]&&(l>0&&(s[n]=a[l-1]),a[l]=n)}}for(l=a.length,e=a[l-1];l-- >0;)a[l]=e,e=s[e];return a}function wk(i){const s=i.subTree.component;if(s)return s.asyncDep&&!s.asyncResolved?s:wk(s)}function Ie(i){if(i)for(let s=0;s<i.length;s++)i[s].active=!1}const Pd=Symbol.for("v-scx"),Td=()=>mi(Pd);function xk(i,s){return Ol(i,null,s)}const qn={};function oi(i,s,a){return Ol(i,s,a)}function Ol(i,s,{immediate:a,deep:n,flush:t,once:l,onTrack:e,onTrigger:k}=fi){if(s&&l){const T=s;s=(...V)=>{T(...V),O()}}const p=Ii,r=T=>n===!0?T:ha(T,n===!1?1:void 0);let d,c=!1,o=!1;if(Vi(i)?(d=()=>i.value,c=st(i)):qa(i)?(d=()=>r(i),c=!0):si(i)?(o=!0,c=i.some(T=>qa(T)||st(T)),d=()=>i.map(T=>{if(Vi(T))return T.value;if(qa(T))return r(T);if(ni(T))return Js(T,p,2)})):ni(i)?s?d=()=>Js(i,p,2):d=()=>(B&&B(),ks(i,p,3,[u])):d=es,s&&n){const T=d;d=()=>ha(T())}let B,u=T=>{B=A.onStop=()=>{Js(T,p,4),B=A.onStop=void 0}},v;if(Fn)if(u=es,s?a&&ks(s,p,3,[d(),o?[]:void 0,u]):d(),t==="sync"){const T=Td();v=T.__watcherHandles||(T.__watcherHandles=[])}else return es;let m=o?new Array(i.length).fill(qn):qn;const f=()=>{if(!(!A.active||!A.dirty))if(s){const T=A.run();(n||c||(o?T.some((V,K)=>Gs(V,m[K])):Gs(T,m)))&&(B&&B(),ks(s,p,3,[T,m===qn?void 0:o&&m[0]===qn?[]:m,u]),m=T)}else A.run()};f.allowRecurse=!!s;let C;t==="sync"?C=f:t==="post"?C=()=>qi(f,p&&p.suspense):(f.pre=!0,p&&(f.id=p.uid),C=()=>ot(f));const A=new Dl(d,es,C),D=zh(),O=()=>{A.stop(),D&&fl(D.effects,A)};return s?a?f():m=A.run():t==="post"?qi(A.run.bind(A),p&&p.suspense):A.run(),v&&v.push(O),O}function Rd(i,s,a){const n=this.proxy,t=Oi(i)?i.includes(".")?Sk(n,i):()=>n[i]:i.bind(n,n);let l;ni(s)?l=s:(l=s.handler,a=s);const e=vn(this),k=Ol(t,l.bind(n),a);return e(),k}function Sk(i,s){const a=s.split(".");return()=>{let n=i;for(let t=0;t<a.length&&n;t++)n=n[a[t]];return n}}function ha(i,s=1/0,a){if(s<=0||!bi(i)||i.__v_skip||(a=a||new Set,a.has(i)))return i;if(a.add(i),s--,Vi(i))ha(i.value,s,a);else if(si(i))for(let n=0;n<i.length;n++)ha(i[n],s,a);else if(i2(i)||Wa(i))i.forEach(n=>{ha(n,s,a)});else if(n2(i)){for(const n in i)ha(i[n],s,a);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&ha(i[n],s,a)}return i}const An=i=>i.type.__isKeepAlive;function Ld(i,s){Pk(i,"a",s)}function jd(i,s){Pk(i,"da",s)}function Pk(i,s,a=Ii){const n=i.__wdc||(i.__wdc=()=>{let t=a;for(;t;){if(t.isDeactivated)return;t=t.parent}return i()});if(Et(s,n,a),a){let t=a.parent;for(;t&&t.parent;)An(t.parent.vnode)&&Id(n,s,a,t),t=t.parent}}function Id(i,s,a,n){const t=Et(s,i,n,!0);yn(()=>{fl(n[s],t)},a)}const zs=Symbol("_leaveCb"),Un=Symbol("_enterCb");function Tk(){const i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return wi(()=>{i.isMounted=!0}),Ek(()=>{i.isUnmounting=!0}),i}const as=[Function,Array],Rk={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:as,onEnter:as,onAfterEnter:as,onEnterCancelled:as,onBeforeLeave:as,onLeave:as,onAfterLeave:as,onLeaveCancelled:as,onBeforeAppear:as,onAppear:as,onAfterAppear:as,onAppearCancelled:as},Lk=i=>{const s=i.subTree;return s.component?Lk(s.component):s},Od={name:"BaseTransition",props:Rk,setup(i,{slots:s}){const a=un(),n=Tk();return()=>{const t=s.default&&Vl(s.default(),!0);if(!t||!t.length)return;let l=t[0];if(t.length>1){for(const o of t)if(o.type!==ls){l=o;break}}const e=ri(i),{mode:k}=e;if(n.isLeaving)return Pt(l);const p=Oe(l);if(!p)return Pt(l);let r=en(p,e,n,a,o=>r=o);wa(p,r);const d=a.subTree,c=d&&Oe(d);if(c&&c.type!==ls&&!ka(p,c)&&Lk(a).type!==ls){const o=en(c,e,n,a);if(wa(c,o),k==="out-in"&&p.type!==ls)return n.isLeaving=!0,o.afterLeave=()=>{n.isLeaving=!1,a.update.active!==!1&&(a.effect.dirty=!0,a.update())},Pt(l);k==="in-out"&&p.type!==ls&&(o.delayLeave=(B,u,v)=>{const m=jk(n,c);m[String(c.key)]=c,B[zs]=()=>{u(),B[zs]=void 0,delete r.delayedLeave},r.delayedLeave=v})}return l}}},Vd=Od;function jk(i,s){const{leavingVNodes:a}=i;let n=a.get(s.type);return n||(n=Object.create(null),a.set(s.type,n)),n}function en(i,s,a,n,t){const{appear:l,mode:e,persisted:k=!1,onBeforeEnter:p,onEnter:r,onAfterEnter:d,onEnterCancelled:c,onBeforeLeave:o,onLeave:B,onAfterLeave:u,onLeaveCancelled:v,onBeforeAppear:m,onAppear:f,onAfterAppear:C,onAppearCancelled:A}=s,D=String(i.key),O=jk(a,i),T=(M,P)=>{M&&ks(M,n,9,P)},V=(M,P)=>{const z=P[1];T(M,P),si(M)?M.every(R=>R.length<=1)&&z():M.length<=1&&z()},K={mode:e,persisted:k,beforeEnter(M){let P=p;if(!a.isMounted)if(l)P=m||p;else return;M[zs]&&M[zs](!0);const z=O[D];z&&ka(i,z)&&z.el[zs]&&z.el[zs](),T(P,[M])},enter(M){let P=r,z=d,R=c;if(!a.isMounted)if(l)P=f||r,z=C||d,R=A||c;else return;let X=!1;const yi=M[Un]=Ai=>{X||(X=!0,Ai?T(R,[M]):T(z,[M]),K.delayedLeave&&K.delayedLeave(),M[Un]=void 0)};P?V(P,[M,yi]):yi()},leave(M,P){const z=String(i.key);if(M[Un]&&M[Un](!0),a.isUnmounting)return P();T(o,[M]);let R=!1;const X=M[zs]=yi=>{R||(R=!0,P(),yi?T(v,[M]):T(u,[M]),M[zs]=void 0,O[z]===i&&delete O[z])};O[z]=i,B?V(B,[M,X]):X()},clone(M){const P=en(M,s,a,n,t);return t&&t(P),P}};return K}function Pt(i){if(An(i))return i=Ks(i),i.children=null,i}function Oe(i){if(!An(i))return i;const{shapeFlag:s,children:a}=i;if(a){if(s&16)return a[0];if(s&32&&ni(a.default))return a.default()}}function wa(i,s){i.shapeFlag&6&&i.component?wa(i.component.subTree,s):i.shapeFlag&128?(i.ssContent.transition=s.clone(i.ssContent),i.ssFallback.transition=s.clone(i.ssFallback)):i.transition=s}function Vl(i,s=!1,a){let n=[],t=0;for(let l=0;l<i.length;l++){let e=i[l];const k=a==null?e.key:String(a)+String(e.key!=null?e.key:l);e.type===Zi?(e.patchFlag&128&&t++,n=n.concat(Vl(e.children,s,k))):(s||e.type!==ls)&&n.push(k!=null?Ks(e,{key:k}):e)}if(t>1)for(let l=0;l<n.length;l++)n[l].patchFlag=-2;return n}const Md=i=>i.__isTeleport,Zi=Symbol.for("v-fgt"),xa=Symbol.for("v-txt"),ls=Symbol.for("v-cmt"),Ya=Symbol.for("v-stc"),Qa=[];let gs=null;function P6(i=!1){Qa.push(gs=i?null:[])}function Hd(){Qa.pop(),gs=Qa[Qa.length-1]||null}let hn=1;function Ve(i){hn+=i}function $d(i){return i.dynamicChildren=hn>0?gs||fa:null,Hd(),hn>0&&gs&&gs.push(i),i}function T6(i,s,a,n,t,l){return $d(Ok(i,s,a,n,t,l,!0))}function sl(i){return i?i.__v_isVNode===!0:!1}function ka(i,s){return i.type===s.type&&i.key===s.key}const Ik=({key:i})=>i??null,Qn=({ref:i,ref_key:s,ref_for:a})=>(typeof i=="number"&&(i=""+i),i!=null?Oi(i)||Vi(i)||ni(i)?{i:hs,r:i,k:s,f:!!a}:i:null);function Ok(i,s=null,a=null,n=0,t=null,l=i===Zi?0:1,e=!1,k=!1){const p={__v_isVNode:!0,__v_skip:!0,type:i,props:s,key:s&&Ik(s),ref:s&&Qn(s),scopeId:dk,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:n,dynamicProps:t,dynamicChildren:null,appContext:null,ctx:hs};return k?(Ml(p,a),l&128&&i.normalize(p)):a&&(p.shapeFlag|=Oi(a)?8:16),hn>0&&!e&&gs&&(p.patchFlag>0||l&6)&&p.patchFlag!==32&&gs.push(p),p}const Pi=Nd;function Nd(i,s=null,a=null,n=0,t=null,l=!1){if((!i||i===ad)&&(i=ls),sl(i)){const k=Ks(i,s,!0);return a&&Ml(k,a),hn>0&&!l&&gs&&(k.shapeFlag&6?gs[gs.indexOf(i)]=k:gs.push(k)),k.patchFlag=-2,k}if(Zd(i)&&(i=i.__vccOpts),s){s=zd(s);let{class:k,style:p}=s;k&&!Oi(k)&&(s.class=bl(k)),bi(p)&&(ak(p)&&!si(p)&&(p=_i({},p)),s.style=Cl(p))}const e=Oi(i)?1:td(i)?128:Md(i)?64:bi(i)?4:ni(i)?2:0;return Ok(i,s,a,n,t,e,l,!0)}function zd(i){return i?ak(i)||vk(i)?_i({},i):i:null}function Ks(i,s,a=!1,n=!1){const{props:t,ref:l,patchFlag:e,children:k,transition:p}=i,r=s?Wd(t||{},s):t,d={__v_isVNode:!0,__v_skip:!0,type:i.type,props:r,key:r&&Ik(r),ref:s&&s.ref?a&&l?si(l)?l.concat(Qn(s)):[l,Qn(s)]:Qn(s):l,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:k,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:s&&i.type!==Zi?e===-1?16:e|16:e,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:p,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Ks(i.ssContent),ssFallback:i.ssFallback&&Ks(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return p&&n&&wa(d,p.clone(d)),d}function Vk(i=" ",s=0){return Pi(xa,null,i,s)}function R6(i,s){const a=Pi(Ya,null,i);return a.staticCount=s,a}function Es(i){return i==null||typeof i=="boolean"?Pi(ls):si(i)?Pi(Zi,null,i.slice()):typeof i=="object"?Ws(i):Pi(xa,null,String(i))}function Ws(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:Ks(i)}function Ml(i,s){let a=0;const{shapeFlag:n}=i;if(s==null)s=null;else if(si(s))a=16;else if(typeof s=="object")if(n&65){const t=s.default;t&&(t._c&&(t._d=!1),Ml(i,t()),t._c&&(t._d=!0));return}else{a=32;const t=s._;!t&&!vk(s)?s._ctx=hs:t===3&&hs&&(hs.slots._===1?s._=1:(s._=2,i.patchFlag|=1024))}else ni(s)?(s={default:s,_ctx:hs},a=32):(s=String(s),n&64?(a=16,s=[Vk(s)]):a=8);i.children=s,i.shapeFlag|=a}function Wd(...i){const s={};for(let a=0;a<i.length;a++){const n=i[a];for(const t in n)if(t==="class")s.class!==n.class&&(s.class=bl([s.class,n.class]));else if(t==="style")s.style=Cl([s.style,n.style]);else if(on(t)){const l=s[t],e=n[t];e&&l!==e&&!(si(l)&&l.includes(e))&&(s[t]=l?[].concat(l,e):e)}else t!==""&&(s[t]=n[t])}return s}function ns(i,s,a,n=null){ks(i,s,7,[a,n])}const qd=yk();let Ud=0;function Jd(i,s,a){const n=i.type,t=(s?s.appContext:i.appContext)||qd,l={uid:Ud++,vnode:i,type:n,parent:s,appContext:t,root:null,next:null,subTree:null,effect:null,update:null,scope:new B2(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(t.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:fk(n,t),emitsOptions:rk(n,t),emit:null,emitted:null,propsDefaults:fi,inheritAttrs:n.inheritAttrs,ctx:fi,data:fi,props:fi,attrs:fi,slots:fi,refs:fi,setupState:fi,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=s?s.root:l,l.emit=Y2.bind(null,l),i.ce&&i.ce(l),l}let Ii=null;const un=()=>Ii||hs;let et,al;{const i=$h(),s=(a,n)=>{let t;return(t=i[a])||(t=i[a]=[]),t.push(n),l=>{t.length>1?t.forEach(e=>e(l)):t[0](l)}};et=s("__VUE_INSTANCE_SETTERS__",a=>Ii=a),al=s("__VUE_SSR_SETTERS__",a=>Fn=a)}const vn=i=>{const s=Ii;return et(i),i.scope.on(),()=>{i.scope.off(),et(s)}},Me=()=>{Ii&&Ii.scope.off(),et(null)};function Mk(i){return i.vnode.shapeFlag&4}let Fn=!1;function Gd(i,s=!1){s&&al(s);const{props:a,children:n}=i.vnode,t=Mk(i);vd(i,a,t,s),md(i,n);const l=t?Kd(i,s):void 0;return s&&al(!1),l}function Kd(i,s){const a=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,cd);const{setup:n}=a;if(n){const t=i.setupContext=n.length>1?Qd(i):null,l=vn(i);Xs();const e=Js(n,i,0,[i.props,t]);if(js(),l(),Mh(e)){if(e.then(Me,Me),s)return e.then(k=>{He(i,k,s)}).catch(k=>{gn(k,i,0)});i.asyncDep=e}else He(i,e,s)}else Hk(i,s)}function He(i,s,a){ni(s)?i.type.__ssrInlineRender?i.ssrRender=s:i.render=s:bi(s)&&(i.setupState=lk(s)),Hk(i,a)}let $e;function Hk(i,s,a){const n=i.type;if(!i.render){if(!s&&$e&&!n.render){const t=n.template||jl(i).template;if(t){const{isCustomElement:l,compilerOptions:e}=i.appContext.config,{delimiters:k,compilerOptions:p}=n,r=_i(_i({isCustomElement:l,delimiters:k},e),p);n.render=$e(t,r)}}i.render=n.render||es}{const t=vn(i);Xs();try{od(i)}finally{js(),t()}}}const Yd={get(i,s){return Gi(i,"get",""),i[s]}};function Qd(i){const s=a=>{i.exposed=a||{}};return{attrs:new Proxy(i.attrs,Yd),slots:i.slots,emit:i.emit,expose:s}}function Hl(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(lk(O2(i.exposed)),{get(s,a){if(a in s)return s[a];if(a in Ga)return Ga[a](i)},has(s,a){return a in s||a in Ga}})):i.proxy}function Xd(i,s=!0){return ni(i)?i.displayName||i.name:i.name||s&&i.__name}function Zd(i){return ni(i)&&"__vccOpts"in i}const F=(i,s)=>V2(i,s,Fn);function h(i,s,a){const n=arguments.length;return n===2?bi(s)&&!si(s)?sl(s)?Pi(i,null,[s]):Pi(i,s):Pi(i,null,s):(n>3?a=Array.prototype.slice.call(arguments,2):n===3&&sl(a)&&(a=[a]),Pi(i,s,a))}const ic="3.4.30";/**
* @vue/runtime-dom v3.4.30
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const sc="http://www.w3.org/2000/svg",ac="http://www.w3.org/1998/Math/MathML",Ts=typeof document<"u"?document:null,Ne=Ts&&Ts.createElement("template"),nc={insert:(i,s,a)=>{s.insertBefore(i,a||null)},remove:i=>{const s=i.parentNode;s&&s.removeChild(i)},createElement:(i,s,a,n)=>{const t=s==="svg"?Ts.createElementNS(sc,i):s==="mathml"?Ts.createElementNS(ac,i):a?Ts.createElement(i,{is:a}):Ts.createElement(i);return i==="select"&&n&&n.multiple!=null&&t.setAttribute("multiple",n.multiple),t},createText:i=>Ts.createTextNode(i),createComment:i=>Ts.createComment(i),setText:(i,s)=>{i.nodeValue=s},setElementText:(i,s)=>{i.textContent=s},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>Ts.querySelector(i),setScopeId(i,s){i.setAttribute(s,"")},insertStaticContent(i,s,a,n,t,l){const e=a?a.previousSibling:s.lastChild;if(t&&(t===l||t.nextSibling))for(;s.insertBefore(t.cloneNode(!0),a),!(t===l||!(t=t.nextSibling)););else{Ne.innerHTML=n==="svg"?`<svg>${i}</svg>`:n==="mathml"?`<math>${i}</math>`:i;const k=Ne.content;if(n==="svg"||n==="mathml"){const p=k.firstChild;for(;p.firstChild;)k.appendChild(p.firstChild);k.removeChild(p)}s.insertBefore(k,a)}return[e?e.nextSibling:s.firstChild,a?a.previousSibling:s.lastChild]}},Ms="transition",Ma="animation",Sa=Symbol("_vtc"),Ys=(i,{slots:s})=>h(Vd,Nk(i),s);Ys.displayName="Transition";const $k={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},tc=Ys.props=_i({},Rk,$k),ta=(i,s=[])=>{si(i)?i.forEach(a=>a(...s)):i&&i(...s)},ze=i=>i?si(i)?i.some(s=>s.length>1):i.length>1:!1;function Nk(i){const s={};for(const R in i)R in $k||(s[R]=i[R]);if(i.css===!1)return s;const{name:a="v",type:n,duration:t,enterFromClass:l=`${a}-enter-from`,enterActiveClass:e=`${a}-enter-active`,enterToClass:k=`${a}-enter-to`,appearFromClass:p=l,appearActiveClass:r=e,appearToClass:d=k,leaveFromClass:c=`${a}-leave-from`,leaveActiveClass:o=`${a}-leave-active`,leaveToClass:B=`${a}-leave-to`}=i,u=lc(t),v=u&&u[0],m=u&&u[1],{onBeforeEnter:f,onEnter:C,onEnterCancelled:A,onLeave:D,onLeaveCancelled:O,onBeforeAppear:T=f,onAppear:V=C,onAppearCancelled:K=A}=s,M=(R,X,yi)=>{$s(R,X?d:k),$s(R,X?r:e),yi&&yi()},P=(R,X)=>{R._isLeaving=!1,$s(R,c),$s(R,B),$s(R,o),X&&X()},z=R=>(X,yi)=>{const Ai=R?V:C,U=()=>M(X,R,yi);ta(Ai,[X,U]),We(()=>{$s(X,R?p:l),Ss(X,R?d:k),ze(Ai)||qe(X,n,v,U)})};return _i(s,{onBeforeEnter(R){ta(f,[R]),Ss(R,l),Ss(R,e)},onBeforeAppear(R){ta(T,[R]),Ss(R,p),Ss(R,r)},onEnter:z(!1),onAppear:z(!0),onLeave(R,X){R._isLeaving=!0;const yi=()=>P(R,X);Ss(R,c),Ss(R,o),Wk(),We(()=>{R._isLeaving&&($s(R,c),Ss(R,B),ze(D)||qe(R,n,m,yi))}),ta(D,[R,yi])},onEnterCancelled(R){M(R,!1),ta(A,[R])},onAppearCancelled(R){M(R,!0),ta(K,[R])},onLeaveCancelled(R){P(R),ta(O,[R])}})}function lc(i){if(i==null)return null;if(bi(i))return[Tt(i.enter),Tt(i.leave)];{const s=Tt(i);return[s,s]}}function Tt(i){return h2(i)}function Ss(i,s){s.split(/\s+/).forEach(a=>a&&i.classList.add(a)),(i[Sa]||(i[Sa]=new Set)).add(s)}function $s(i,s){s.split(/\s+/).forEach(n=>n&&i.classList.remove(n));const a=i[Sa];a&&(a.delete(s),a.size||(i[Sa]=void 0))}function We(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}let ec=0;function qe(i,s,a,n){const t=i._endId=++ec,l=()=>{t===i._endId&&n()};if(a)return setTimeout(l,a);const{type:e,timeout:k,propCount:p}=zk(i,s);if(!e)return n();const r=e+"end";let d=0;const c=()=>{i.removeEventListener(r,o),l()},o=B=>{B.target===i&&++d>=p&&c()};setTimeout(()=>{d<p&&c()},k+1),i.addEventListener(r,o)}function zk(i,s){const a=window.getComputedStyle(i),n=u=>(a[u]||"").split(", "),t=n(`${Ms}Delay`),l=n(`${Ms}Duration`),e=Ue(t,l),k=n(`${Ma}Delay`),p=n(`${Ma}Duration`),r=Ue(k,p);let d=null,c=0,o=0;s===Ms?e>0&&(d=Ms,c=e,o=l.length):s===Ma?r>0&&(d=Ma,c=r,o=p.length):(c=Math.max(e,r),d=c>0?e>r?Ms:Ma:null,o=d?d===Ms?l.length:p.length:0);const B=d===Ms&&/\b(transform|all)(,|$)/.test(n(`${Ms}Property`).toString());return{type:d,timeout:c,propCount:o,hasTransform:B}}function Ue(i,s){for(;i.length<s.length;)i=i.concat(i);return Math.max(...s.map((a,n)=>Je(a)+Je(i[n])))}function Je(i){return i==="auto"?0:Number(i.slice(0,-1).replace(",","."))*1e3}function Wk(){return document.body.offsetHeight}function hc(i,s,a){const n=i[Sa];n&&(s=(s?[s,...n]:[...n]).join(" ")),s==null?i.removeAttribute("class"):a?i.setAttribute("class",s):i.className=s}const Ge=Symbol("_vod"),kc=Symbol("_vsh"),pc=Symbol(""),rc=/(^|;)\s*display\s*:/;function dc(i,s,a){const n=i.style,t=Oi(a);let l=!1;if(a&&!t){if(s)if(Oi(s))for(const e of s.split(";")){const k=e.slice(0,e.indexOf(":")).trim();a[k]==null&&Xn(n,k,"")}else for(const e in s)a[e]==null&&Xn(n,e,"");for(const e in a)e==="display"&&(l=!0),Xn(n,e,a[e])}else if(t){if(s!==a){const e=n[pc];e&&(a+=";"+e),n.cssText=a,l=rc.test(a)}}else s&&i.removeAttribute("style");Ge in i&&(i[Ge]=l?n.display:"",i[kc]&&(n.display="none"))}const Ke=/\s*!important$/;function Xn(i,s,a){if(si(a))a.forEach(n=>Xn(i,s,n));else if(a==null&&(a=""),s.startsWith("--"))i.setProperty(s,a);else{const n=cc(i,s);Ke.test(a)?i.setProperty(Ia(n),a.replace(Ke,""),"important"):i[n]=a}}const Ye=["Webkit","Moz","ms"],Rt={};function cc(i,s){const a=Rt[s];if(a)return a;let n=ds(s);if(n!=="filter"&&n in i)return Rt[s]=n;n=Bn(n);for(let t=0;t<Ye.length;t++){const l=Ye[t]+n;if(l in i)return Rt[s]=l}return s}const Qe="http://www.w3.org/1999/xlink";function Xe(i,s,a,n,t,l=o2(s)){n&&s.startsWith("xlink:")?a==null?i.removeAttributeNS(Qe,s.slice(6,s.length)):i.setAttributeNS(Qe,s,a):a==null||l&&!Nh(a)?i.removeAttribute(s):i.setAttribute(s,l?"":ja(a)?String(a):a)}function oc(i,s,a,n,t,l,e){if(s==="innerHTML"||s==="textContent"){n&&e(n,t,l),i[s]=a??"";return}const k=i.tagName;if(s==="value"&&k!=="PROGRESS"&&!k.includes("-")){const r=k==="OPTION"?i.getAttribute("value")||"":i.value,d=a==null?"":String(a);(r!==d||!("_value"in i))&&(i.value=d),a==null&&i.removeAttribute(s),i._value=a;return}let p=!1;if(a===""||a==null){const r=typeof i[s];r==="boolean"?a=Nh(a):a==null&&r==="string"?(a="",p=!0):r==="number"&&(a=0,p=!0)}try{i[s]=a}catch{}p&&i.removeAttribute(s)}function Bc(i,s,a,n){i.addEventListener(s,a,n)}function Ec(i,s,a,n){i.removeEventListener(s,a,n)}const Ze=Symbol("_vei");function gc(i,s,a,n,t=null){const l=i[Ze]||(i[Ze]={}),e=l[s];if(n&&e)e.value=n;else{const[k,p]=yc(s);if(n){const r=l[s]=vc(n,t);Bc(i,k,r,p)}else e&&(Ec(i,k,e,p),l[s]=void 0)}}const ih=/(?:Once|Passive|Capture)$/;function yc(i){let s;if(ih.test(i)){s={};let n;for(;n=i.match(ih);)i=i.slice(0,i.length-n[0].length),s[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):Ia(i.slice(2)),s]}let Lt=0;const Ac=Promise.resolve(),uc=()=>Lt||(Ac.then(()=>Lt=0),Lt=Date.now());function vc(i,s){const a=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=a.attached)return;ks(Fc(n,a.value),s,5,[n])};return a.value=i,a.attached=uc(),a}function Fc(i,s){if(si(s)){const a=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{a.call(i),i._stopped=!0},s.map(n=>t=>!t._stopped&&n&&n(t))}else return s}const sh=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,fc=(i,s,a,n,t,l,e,k,p)=>{const r=t==="svg";s==="class"?hc(i,n,r):s==="style"?dc(i,a,n):on(s)?Fl(s)||gc(i,s,a,n,e):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):mc(i,s,n,r))?(oc(i,s,n,l,e,k,p),!i.tagName.includes("-")&&(s==="value"||s==="checked"||s==="selected")&&Xe(i,s,n,r,e,s!=="value")):(s==="true-value"?i._trueValue=n:s==="false-value"&&(i._falseValue=n),Xe(i,s,n,r))};function mc(i,s,a,n){if(n)return!!(s==="innerHTML"||s==="textContent"||s in i&&sh(s)&&ni(a));if(s==="spellcheck"||s==="draggable"||s==="translate"||s==="form"||s==="list"&&i.tagName==="INPUT"||s==="type"&&i.tagName==="TEXTAREA")return!1;if(s==="width"||s==="height"){const t=i.tagName;if(t==="IMG"||t==="VIDEO"||t==="CANVAS"||t==="SOURCE")return!1}return sh(s)&&Oi(a)?!1:s in i}const qk=new WeakMap,Uk=new WeakMap,ht=Symbol("_moveCb"),ah=Symbol("_enterCb"),Jk={name:"TransitionGroup",props:_i({},tc,{tag:String,moveClass:String}),setup(i,{slots:s}){const a=un(),n=Tk();let t,l;return Bk(()=>{if(!t.length)return;const e=i.moveClass||`${i.name||"v"}-move`;if(!xc(t[0].el,a.vnode.el,e))return;t.forEach(Dc),t.forEach(_c);const k=t.filter(wc);Wk(),k.forEach(p=>{const r=p.el,d=r.style;Ss(r,e),d.transform=d.webkitTransform=d.transitionDuration="";const c=r[ht]=o=>{o&&o.target!==r||(!o||/transform$/.test(o.propertyName))&&(r.removeEventListener("transitionend",c),r[ht]=null,$s(r,e))};r.addEventListener("transitionend",c)})}),()=>{const e=ri(i),k=Nk(e);let p=e.tag||Zi;if(t=[],l)for(let r=0;r<l.length;r++){const d=l[r];d.el&&d.el instanceof Element&&(t.push(d),wa(d,en(d,k,n,a)),qk.set(d,d.el.getBoundingClientRect()))}l=s.default?Vl(s.default()):[];for(let r=0;r<l.length;r++){const d=l[r];d.key!=null&&wa(d,en(d,k,n,a))}return Pi(p,null,l)}}},Cc=i=>delete i.mode;Jk.props;const bc=Jk;function Dc(i){const s=i.el;s[ht]&&s[ht](),s[ah]&&s[ah]()}function _c(i){Uk.set(i,i.el.getBoundingClientRect())}function wc(i){const s=qk.get(i),a=Uk.get(i),n=s.left-a.left,t=s.top-a.top;if(n||t){const l=i.el.style;return l.transform=l.webkitTransform=`translate(${n}px,${t}px)`,l.transitionDuration="0s",i}}function xc(i,s,a){const n=i.cloneNode(),t=i[Sa];t&&t.forEach(k=>{k.split(/\s+/).forEach(p=>p&&n.classList.remove(p))}),a.split(/\s+/).forEach(k=>k&&n.classList.add(k)),n.style.display="none";const l=s.nodeType===1?s:s.parentNode;l.appendChild(n);const{hasTransform:e}=zk(n);return l.removeChild(n),e}const Sc=_i({patchProp:fc},nc);let jt,nh=!1;function Pc(){return jt=nh?jt:wd(Sc),nh=!0,jt}const Tc=(...i)=>{const s=Pc().createApp(...i),{mount:a}=s;return s.mount=n=>{const t=Lc(n);if(t)return a(t,!0,Rc(t))},s};function Rc(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function Lc(i){return Oi(i)?document.querySelector(i):i}var fn=i=>/^[a-z][a-z0-9+.-]*:/.test(i)||i.startsWith("//"),jc=/.md((\?|#).*)?$/,$l=(i,s="/")=>fn(i)||i.startsWith("/")&&!i.startsWith(s)&&!jc.test(i),oa=i=>/^(https?:)?\/\//.test(i),th=i=>{if(!i||i.endsWith("/"))return i;let s=i.replace(/(^|\/)README.md$/i,"$1index.html");return s.endsWith(".md")?s=s.substring(0,s.length-3)+".html":s.endsWith(".html")||(s=s+".html"),s.endsWith("/index.html")&&(s=s.substring(0,s.length-10)),s},Ic="http://.",Oc=(i,s)=>{if(!i.startsWith("/")&&s){const a=s.slice(0,s.lastIndexOf("/"));return th(new URL(`${a}/${i}`,Ic).pathname)}return th(i)},Vc=(i,s)=>{const a=Object.keys(i).sort((n,t)=>{const l=t.split("/").length-n.split("/").length;return l!==0?l:t.length-n.length});for(const n of a)if(s.startsWith(n))return n;return"/"},Mc=/(#|\?)/,Gk=i=>{const[s,...a]=i.split(Mc);return{pathname:s,hashAndQueries:a.join("")}},Hc=["link","meta","script","style","noscript","template"],$c=["title","base"],Nc=([i,s,a])=>$c.includes(i)?i:Hc.includes(i)?i==="meta"&&s.name?`${i}.${s.name}`:i==="template"&&s.id?`${i}.${s.id}`:JSON.stringify([i,Object.entries(s).map(([n,t])=>typeof t=="boolean"?t?[n,""]:null:[n,t]).filter(n=>n!=null).sort(([n],[t])=>n.localeCompare(t)),a]):null,zc=i=>{const s=new Set,a=[];return i.forEach(n=>{const t=Nc(n);t&&!s.has(t)&&(s.add(t),a.push(n))}),a},Wc=i=>i[0]==="/"?i:`/${i}`,Kk=i=>i[i.length-1]==="/"||i.endsWith(".html")?i:`${i}/`,Nl=i=>i[i.length-1]==="/"?i.slice(0,-1):i,Yk=i=>i[0]==="/"?i.slice(1):i,mn=i=>Object.prototype.toString.call(i)==="[object Object]",Ci=i=>typeof i=="string";const qc="modulepreload",Uc=function(i){return"/web-docs/"+i},lh={},y=function(s,a,n){let t=Promise.resolve();if(a&&a.length>0){document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),e=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));t=Promise.all(a.map(k=>{if(k=Uc(k),k in lh)return;lh[k]=!0;const p=k.endsWith(".css"),r=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${k}"]${r}`))return;const d=document.createElement("link");if(d.rel=p?"stylesheet":qc,p||(d.as="script",d.crossOrigin=""),d.href=k,e&&d.setAttribute("nonce",e),document.head.appendChild(d),p)return new Promise((c,o)=>{d.addEventListener("load",c),d.addEventListener("error",()=>o(new Error(`Unable to preload CSS for ${k}`)))})}))}return t.then(()=>s()).catch(l=>{const e=new Event("vite:preloadError",{cancelable:!0});if(e.payload=l,window.dispatchEvent(e),!e.defaultPrevented)throw l})},Jc=JSON.parse("{}"),Gc=Object.fromEntries([["/",{loader:()=>y(()=>import("./index.html-Bfs6A-07.js"),__vite__mapDeps([0,1])),meta:{t:"首页"}}],["/%E5%90%8E%E7%AB%AF/MySql/",{loader:()=>y(()=>import("./index.html-BakPGcVU.js"),__vite__mapDeps([2,1])),meta:{d:1720303462e3,e:`
<p>待补充</p>
`,r:{minutes:.01,words:4},t:"MySql",y:"a"}}],["/%E5%89%8D%E7%AB%AF/Browser/Http%E7%BC%93%E5%AD%98/",{loader:()=>y(()=>import("./index.html-DIjJ2cJB.js"),__vite__mapDeps([3,1])),meta:{d:1720303462e3,e:`
<p><strong>Http 缓存</strong> 是解决 <strong>Http1.1 协议</strong> 性能问题的一个主要手段。<strong>缓存</strong> 即有可能存在于浏览器中，也可能存在于服务器中。</p>
<p><strong>Http 缓存</strong> 是一种用于存储 <code>Web</code> 资源副本的机制。当浏览器向服务器请求某个资源时，服务器会返回该资源以及相关的缓存控制信息。</p>
<p>如果浏览器发现缓存中有该资源的有效副本，就可以直接使用，而无需再次向服务器发送请求。这样可以减少网络流量，提高加载速度，并降低服务器的处理压力。</p>`,r:{minutes:11.88,words:3563},t:"Http 缓存",y:"a"}}],["/%E5%89%8D%E7%AB%AF/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/",{loader:()=>y(()=>import("./index.html-C94jATm2.js"),__vite__mapDeps([4,1])),meta:{d:1720303462e3,e:`
<h3>一、浏览器的进程模型</h3>
<h4>1. 何为进程</h4>
<p><strong>程序运行需要有它自己专属的内存空间，可以把这块内存空间简单的理解为进程。</strong></p>
<p></p>
<p><strong>每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意。</strong></p>
<p>以上图例中的三个程序：QQ、微信、王者荣耀，他们内存都是相互独立的。有的多有的少，但是这无所谓。</p>
<p>主要能看到的是它们的内存相互之间是没有交叉的。因为如果交叉了，就会变成共享共用了，这会出现大问题的。</p>
<p>因为进程之所以这样设计，它的目的就是为了隔离。</p>`,r:{minutes:20.52,words:6155},t:"浏览器的事件循环机制",y:"a"}}],["/%E5%89%8D%E7%AB%AF/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/",{loader:()=>y(()=>import("./index.html-Ch_G-MKB.js"),__vite__mapDeps([5,1])),meta:{d:1720303462e3,e:`
<h3>渲染</h3>
<p>首先，第一个问题是：什么叫 <strong>渲染</strong>，渲染的单词是 <strong>render</strong>。这个单词在不同的场景中含义是不一样的，例如在前端框架 vue 和 react 中也有 render 渲染，但是这两个框架中的 render 表示的是得到一个虚拟 Dom。而现实中，比如我们看的动画中也有 render，但是这里的 render 指的是把一个动画的 3D 模型变成一帧一帧的画面，这个就叫渲染。</p>
<p>而 <strong>浏览器中的渲染原理</strong> 这一块，它的 <strong>渲染</strong> 指的是什么？就这么一件事：就是 <strong>把一个 HTML 字符串变成屏幕上的像素信息，整个过程称之为 "渲染"</strong>。</p>`,r:{minutes:33.38,words:10014},t:"浏览器渲染原理",y:"a"}}],["/%E5%89%8D%E7%AB%AF/Browser/%E8%B7%A8%E5%9F%9F/",{loader:()=>y(()=>import("./index.html---RfFWs6.js"),__vite__mapDeps([6,1])),meta:{d:1720891258e3,e:`
<h2>1. 浏览器的同源策略</h2>
<h3>1.1. 同源策略概述</h3>
<p>同源策略是 <strong>浏览器</strong> 为确保 <strong>资源安全</strong>，而遵循的一种策略，该策略对 <strong>访问资源</strong> 进行了一些限制。</p>
<p><strong>W3C 上对同源策略的说明</strong>：<a href="https://www.w3.org/Security/wiki/Same_Origin_Policy" target="_blank" rel="noopener noreferrer"><strong>Same origin policy</strong></a><strong>。</strong></p>`,r:{minutes:8.52,words:2556},t:"浏览器跨域",y:"a"}}],["/%E5%89%8D%E7%AB%AF/TypeScript/TS%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-n-czCrmd.js"),__vite__mapDeps([7,1])),meta:{d:1721929062e3,e:`
<h2>操作接口类型</h2>
<h3>Partial</h3>
<p><code>Partail</code> 的源码：</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> Partial</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> keyof</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">};</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.81,words:1444},t:"TS 内置工具类的使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/HTML/",{loader:()=>y(()=>import("./index.html-9_vE_KA5.js"),__vite__mapDeps([8,1])),meta:{d:1720303462e3,e:`
<p>待补充</p>
`,r:{minutes:.01,words:4},t:"HTML",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Monorepo/",{loader:()=>y(()=>import("./index.html-9E3reuQS.js"),__vite__mapDeps([9,1])),meta:{d:1722199808e3,e:`
<h2>介绍</h2>
<p><strong>Monorepo</strong> 是一种项目代码管理方式，指单个仓库中管理多个项目，有助于简化代码共享、版本控制、构建和部署等方面的复杂性，并提供更好的可重用性和协作性。</p>
<p>本文主要是通过 <code>pnpm</code> 的 <code>workspace</code> 工作空间来实现 Monorepo 管理 <code>vue3 + vite + ts</code> 的组件库。</p>
<h2>项目搭建</h2>
<ol>
<li>
<p>执行 <code>pnpm create vite</code>，创建 <code>vue + vite + ts</code> 项目。没有安装 <code>pnpm</code> 的需要先安装。执行 <code>npm i -g pnpm</code> 全局安装 <code>pnpm</code>。</p>
</li>
<li>
<p>修改 <strong>根目录</strong> 下的 <code>pakage.json</code> 文件：</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"simple-space"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 防止最外层的包被发布出去，设置为 true 以后发布时会提醒你</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "private"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 设置为私有，防止被发布</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "version"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"0.0.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "type"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"module"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 删除 scripts 属性中的默认脚本命令</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 新增 "preinstall": "npx only-allow pnpm" 表示只允许通过 pnpm 来开发</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // preinstall 是在 install 之前（首次）执行的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 还可以设置 postinstall，表示在 install 之后（首次）执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "scripts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "preinstall"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"npx only-allow pnpm"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "dependencies"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "vue"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^3.4.31"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "devDependencies"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "@vitejs/plugin-vue"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^5.0.5"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "typescript"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^5.2.2"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "vite"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^5.3.4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">    "vue-tsc"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"^2.0.24"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>项目根目录中新增 <code>pnpm-workspace.yaml</code> 文件，并编辑：</p>
<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"># 指定哪些目录作为独立的工作空间，这个工作空间可以理解为一个子模块或者 npm 包</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">packages</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 各种子包的项目目录，包括组件库和一些工具库</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'packages/*'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 文档项目，存放文档的目录，用于展示组件的使用方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'docs'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> # 用于测试组件库的项目</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'example'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>因为在上一步中，指定了 <code>packages</code> 目录，所以需要在项目根目录中，创建 <code>packages</code> 目录，用来存放各种子包。</p>
</li>
<li>
<p>进入 <code>packages</code> 目录，执行 <code>pnpm create vite bit-form</code>  创建 <code>bit-form</code> 组件库项目，用于编写将来我们要写的相关组件。并修改 <code>bit-form</code> 目录下的 <code>package.json</code>：</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"@simple-space/bit-form"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改包名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "private"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 设置非私人包</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "version"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"0.0.1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 省略其它...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>继续进入到 <code>packages</code> 目录，创建 <code>utils</code> 目录用于编写一些公共工具库，在 <code>utils</code> 目录下执行 <code>pnpm init</code> 初始化，并修改 <code>utils</code> 目录下的 <code>packge.json</code>：</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "name"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"@simple-space/utils"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改包名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "private"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 设置非私人包</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "version"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"0.0.1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 省略其它...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>分别修改 <code>packages/bit-form</code> 和 <code>packages/utils</code> 目录下的 <code>tsconfig.json</code>：</p>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // extends 表示当前目录下的 tsconfig.json 的配置全部都继承自根目录下的 tsconfig.json 文件。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "extends"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../../tsconfig.json"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 并且还能在当前目录下的 tsconfig.json 中重写或新增一些配置。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">  "include"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"src/**/*.ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"src/**/*.tsx"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"src/**/*.vue"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>修改根目录下的 <code>tsconfig.json</code> 文件，把 <code>include</code> 配置去掉，如果本来就没有配置就不用理会。</p>
</li>
<li>
<p>删除项目根目录中用不到的文件和目录，这里删除 <code>public</code> 目录、<code>src</code> 目录、<code>index.html</code> 文件。</p>
</li>
<li>
<p>删除 <code>packages/bit-form</code> 中用不到的文件和目录，这里要删除的目录和文件比较多，直接下面的目录结构。</p>
<p>最终整个项目的目录结构，目前如下，后续可能会根据组件或项目的迭代添加一些目录和文件：</p>
</li>
</ol>`,r:{minutes:22.69,words:6806},t:"Monorepo",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/REAEME.html",{loader:()=>y(()=>import("./REAEME.html-7DhZDNsn.js"),__vite__mapDeps([10,1])),meta:{d:1720303462e3,e:`
`,r:{minutes:0,words:1},t:"Vite",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Rollup/",{loader:()=>y(()=>import("./index.html-CLwdq7KC.js"),__vite__mapDeps([11,1])),meta:{d:1720303462e3,e:`
`,r:{minutes:0,words:1},t:"Rollup",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/",{loader:()=>y(()=>import("./index.html-FhVPz_go.js"),__vite__mapDeps([12,1])),meta:{d:1724532946e3,e:`
<h2>Timing</h2>
<p>页面运行的 <strong>时间栈</strong>（统计了浏览器从网址开始导航到 <code>window.onload</code> 事件触发的一系列关键的时间点），如下图所示：</p>
<p></p>
<ol>
<li>
<p>第一个流程 <code>Prompt of unload</code>：可以认为要加载新的页面，是浏览器里的事件，我们也不太能在这里做一些性能优化。但是往往会有一些事件。</p>
<ul>
<li><code>startTime</code>：可以认为是你输入 <code>url</code> 地址点击回车那一瞬间的时间。</li>
<li><code>unloadEventStart</code> 和 <code>unloadEventEnd</code>：相当于是这个阶段开始和结束对应的时刻。</li>
<li>可以不用关注这一部分，重要的是黄色部分到后面。</li>
</ul>
</li>
<li>
<p><code>Redirect</code>：一般来说，我们输入一些 <code>url</code> 的时候，它有可能会存在一些 <code>301</code> 或 <code>302</code> 的重定向。一般用于这个网页的地址发生了变化，但是由于外链正在访问这个地址，那么它就需要一个 <code>Redirect</code>。还有一个就是 <code>https</code>，如果用户输入的是 <code>http</code>，就需要把用户输入的地址 <code>Redirect</code> 到 <code>https</code> 对应的地址。</p>
</li>
<li>
<p><code>AppCache</code>：我们在做 <code>http</code> 请求的时候，它会允许我们的资源缓存在浏览器中，这也是一个很关键的性能优化。</p>
</li>
<li>
<p><code>NDS</code>：假如说现在有一个流程，之前并没有保存过，浏览器中并没有对应的资源缓存，我们就需要去发起网络请求。在发起网络请求之前，我们知道 <code>http</code> 是一个高层协议（网络的通信模型，一般是 <code>5</code> 层架构，<code>http</code> 属于 <strong>应用层</strong>，也就是最顶层的协议），对于整个网络通信的模型来说，想要通过 <code>http</code> 协议和服务端进行交互，去加载一些资源。首先就要进行 <code>DNS</code>。<code>DNS</code> 就是一个 <strong>域名</strong> 到 <code>IP</code> 地址的映射。</p>
<ul>
<li>比如说，我们输入 <code>www.baidu.com</code>，输入的这个叫域名，浏览器最后实际上是发出请求的时候，必须要发到一个 <code>IP</code> 地址上。</li>
<li>从前端的角度来说 <code>DNS</code> 也是不太好优化的。</li>
</ul>
</li>
<li>
<p><code>TCP</code>：指的是 <code>TCP</code> 的 <strong>三次握手</strong> 的过程。</p>
</li>
<li>
<p><code>Request</code>：浏览器发起的请求时间。</p>
</li>
<li>
<p><code>Response</code>：服务端的响应时间。</p>
</li>
<li>
<p><code>Processing</code>：浏览器处理服务器返回的数据的时间。</p>
</li>
<li>
<p><code>Load</code>：页面加载的时间。</p>
</li>
</ol>`,r:{minutes:16.78,words:5033},t:"网页性能指标及影响因素",y:"a"}}],["/%E5%90%8E%E7%AB%AF/NodeJS/JWT/",{loader:()=>y(()=>import("./index.html-BvdW_I9V.js"),__vite__mapDeps([13,1])),meta:{d:1724532946e3,e:`
<p>我们要认识一个东西，都先要知道这个东西到底解决了什么样的问题，它为什么会出现。同样的道理，我们要认识 <strong>JWT</strong> 就要先知道没有 <strong>JWT</strong> 的时候到底有什么样的问题。</p>
<h3>一、没有 JWT 的情况</h3>
<p>我们先看下图：</p>
<p></p>
<p>有的时候，服务器会发送一些信息给浏览器，比方说登录成功之后有些身份信息会让浏览器去保存。给了浏览器之后，浏览器就会把这个信息保存下来，具体的保存位置可以是 <code>cookie</code>、可以是 <code>localStorage</code>、可以是任何东西。到了接下来某一个时刻，如果浏览器要请求服务器的时候，它会把这个保存的信息读取出来，然后通过 http 协议发送给服务器。服务器就会知道了，浏览器有这个身份信息，于是表明它是有登录过的。</p>`,r:{minutes:7.06,words:2118},t:"JWT",y:"a"}}],["/%E5%90%8E%E7%AB%AF/NodeJS/%E8%B7%AF%E5%BE%84%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-CnzrVmxb.js"),__vite__mapDeps([14,1])),meta:{d:1724532946e3,e:`
<h3>一、相对路径 和 绝对路径</h3>
<p>fs 模块对资源进行操作时，路径的写法有两种：</p>
<ul>
<li>相对路径
<ul>
<li><code>./index.txt</code> 当前目录下的 <code>index.txt</code> 文件。</li>
<li><code>index.js</code> 和上面的写法等效。</li>
<li><code>../index.js</code> 当前目录的上一级目录的 <code>index.txt</code> 文件。</li>
</ul>
</li>
<li>绝对路径
<ul>
<li><code>C:/index.txt</code> window 系统下的绝对路径，表示 <code>C盘根目录</code>下 的 <code>index.txt</code> 文件。</li>
<li><code>/user/bin</code> Linux 系统下的绝对路径。</li>
</ul>
</li>
</ul>`,r:{minutes:6.73,words:2019},t:"NodeJS 的路径",y:"a"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/JavaScript/",{loader:()=>y(()=>import("./index.html-BpM1fr0F.js"),__vite__mapDeps([15,1])),meta:{d:1720734508e3,e:`
`,r:{minutes:.01,words:4},t:"JavaScript 面试题",y:"a"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/TypeScript/",{loader:()=>y(()=>import("./index.html-D7QiQymA.js"),__vite__mapDeps([16,1])),meta:{d:1720734508e3,e:`
<h2>说说你对 TypeScript 的理解？与 JavaScript 的区别？</h2>
<p>TypeScript 是 JavaScript 的类型的超集，⽀持 ES6 语法，⽀持⾯向对象编程的概念，如类、接⼝、继承、泛型等。</p>
<h2>说说 typescript 的数据类型有哪些？</h2>
<p>和 <code>javascript</code> 基本⼀致，也分成：</p>
<ul>
<li>基本类型</li>
<li>引⽤类型</li>
</ul>
<p>在基础类型上，<code>typescript</code> 增添了 <code>void</code>、 <code>any</code>、 <code>emum</code> 等原始类型。</p>`,r:{minutes:1.38,words:415},t:"TypeScript 面试题",y:"a"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/%E5%85%AB%E8%82%A1%E6%96%87/",{loader:()=>y(()=>import("./index.html-DDRXfa_w.js"),__vite__mapDeps([17,1])),meta:{d:1720891258e3,e:`
<h2>HTTP 和 HTTPS</h2>
<h3>http 和 https 的基本概念</h3>
<ul>
<li>
<p><code>http</code>：是⼀个客⼾端和服务器端请求和应答的标准（TCP），⽤于从 WWW 服务器传输超⽂本到本地浏览器的 <strong>超文本传输协议</strong>。</p>
</li>
<li>
<p><code>https</code>：是以安全为⽬标的 HTTP 通道，即 HTTP 下 加⼊ SSL 层进⾏加密。其作⽤是：建⽴⼀个信息安全通道，来确保数据的传输，确保网站的真实性。</p>
</li>
</ul>
<h3>http 和 https 的区别及优缺点？</h3>`,r:{minutes:1.79,words:537},t:"前端面试八股文",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/BFC/",{loader:()=>y(()=>import("./index.html-7-Akrco3.js"),__vite__mapDeps([18,1])),meta:{d:1720303462e3,e:`
<h3>前言</h3>
<p>在学习 BFC 之前，先回顾一下两个概念：一个是 <strong>行元素</strong>、一个是 <strong>块元素</strong>。通常开发中，这两个元素什么时候用的多一点呢？通常 <strong>行元素</strong> 都是为了<strong>展示一些文字或者图片的，都是一些内容</strong>。比如说 span 标签、a 标签、img 标签等，而这些内容展示在哪里？我们通常是做一个整体的规划和布局，所以，<strong>块元素</strong> 通常用来<strong>做整体的规划和布局的</strong>。</p>
<p>所以，我们去研究 <strong>BFC</strong>，要搞清楚研究的是什么，<strong>研究的是普通文档留下的 块元素 的排布规则</strong>。因为 <strong>行元素</strong> 是内容，这个内容的展示其实得先有一个整体的布局规划，才能让内容展示出来。然后这个普通的 <strong>行元素</strong> 有哪些排布的问题？这个问题该如何解决？才引出了所谓的 <strong>BFC</strong>。</p>`,r:{minutes:9.77,words:2931},t:"BFC",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E5%8D%A1%E7%89%87%E4%BA%BA%E7%89%A93D%E7%AB%8B%E4%BD%93%E6%95%88%E6%9E%9C/",{loader:()=>y(()=>import("./index.html-CQKZsg5a.js"),__vite__mapDeps([19,1])),meta:{d:1724447679e3,e:`
<p>具体效果如下所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;卡片人物3D立体效果&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"card"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 封面 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"card-cover"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../assets/card-cover.jpg"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">img</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 文字 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"card-text"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../assets/card-text.png"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">img</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 立体图形 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"card-hero"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../assets/card-hero.webp"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#E06C75;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">img</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.32,words:397},t:"卡片人物 3D 立体效果",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E5%BC%A7%E5%BD%A2%E8%BE%B9%E6%A1%86/",{loader:()=>y(()=>import("./index.html-3-ozuwGR.js"),__vite__mapDeps([20,1])),meta:{d:1721585898e3,e:`
<p>当我们在开发页面的时候，有时候可能会遇到弧形边框的场景，比如一些 tabbar 选项卡，或者一些侧边栏的选中样式，如下：</p>
<p></p>
<p>首先我们准备一个元素，这个元素的左上角和右上角设置为圆角，如下所示：</p>
<p></p>
<p>假设该元素标签的 <code>class</code> 为 <code>tab-item</code>， 则对应的样式如下：</p>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">.tab-item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">center</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">center</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">150</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">#007BFF</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.49,words:748},t:"弧形边框",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E6%96%87%E5%AD%97%E4%B8%8B%E5%88%92%E7%BA%BF%E5%8A%A8%E7%94%BB/",{loader:()=>y(()=>import("./index.html-DZ9ou3ll.js"),__vite__mapDeps([21,1])),meta:{d:1724689566e3,e:`
<p>有以下的下划线动画效果：</p>
<p></p>
<p>这个下划线随着鼠标的移入和移出会有一个动画，这个下划线是随着文字来进行移动的，它是贴着文字来进行移动。这里我们需要怎么做呢？</p>
<p>我们要思考的第一个问题是，这个下划线是随着文字的方向来进行移动的，那么在样式中什么东西会随着文字来进行呢？就是文字到哪，下划线就到哪。</p>
<p>好像就一个东西符合，就是背景并且是 <strong>行盒的背景</strong>，块盒不行。</p>
<p>如下图所示，我们给一个行盒 <code>span</code> 设置了背景颜色：</p>
<p></p>
<p><code>index.html</code>：</p>`,r:{minutes:3.25,words:976},t:"文字下划线动画",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/FLIP%E5%8A%A8%E7%94%BB/",{loader:()=>y(()=>import("./index.html-knVELFtY.js"),__vite__mapDeps([22,1])),meta:{d:1724259201e3,e:`
<h3>前言</h3>
<p>如果用 <code>height</code>，<code>width</code>，<code>top</code>，<code>left</code>等 CSS 属性来做动画，性能要远远差于用 <code>transform</code> 或 <code>opacity</code> 属性的动画。动画元素多的话，前者会带来页面卡顿。</p>
<p>这是因为不同的动画，涉及浏览器的不同阶段：Layout  ➠ Pain  ➠ Composite。如果单独触发 Composite，那么浏览器的负担就很小，动画会很丝滑。</p>
<p>触发布局的属性一旦发生变化,浏览器就会非常忙碌.它需要递归的计算其它元素的布局是否会发生变动.</p>`,r:{minutes:3.62,words:1087},t:"FLIP 动画",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/SSE/",{loader:()=>y(()=>import("./index.html-CikLvi_7.js"),__vite__mapDeps([23,1])),meta:{d:1720303462e3,e:`
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Server-sent_events/Using_server-sent_events" target="_blank" rel="noopener noreferrer">Server-Sent Events（SSE）</a> 是 <strong>HTML5</strong> 提供的一种用于实现 **服务器向客户端推送数据 **的 <code>Web</code> 技术。</p>
<p>其本质是 <code>http</code> 长连接，发送的不是一次性数据包，而是数据流。服务器在发现有新消息时，能实时推送给客户端。</p>`,r:{minutes:12.05,words:3614},t:"Server Sent Events",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/",{loader:()=>y(()=>import("./index.html-CcRZODEL.js"),__vite__mapDeps([24,1])),meta:{d:1720303462e3,e:`
`,r:{minutes:.01,words:2},t:"Web Socket",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/",{loader:()=>y(()=>import("./index.html-DYu5jYne.js"),__vite__mapDeps([25,1])),meta:{d:1723840831e3,e:`
`,r:{minutes:.02,words:5},t:"图片懒加载",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%94%BE%E5%A4%A7%E9%95%9C%E6%95%88%E6%9E%9C/",{loader:()=>y(()=>import("./index.html-DRj8aGCy.js"),__vite__mapDeps([26,1])),meta:{d:1724447679e3,e:`
<p>具体效果如下所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"X-UA-Compatible"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"IE=edge"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;放大镜&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;放大镜&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"zoom"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 显示某张轮播的大图 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"image"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../assets/001.jpeg"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 触发鼠标移动事件的盒子 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"move"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 跟随鼠标移动的盒子 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"move-box"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 放大镜预览 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"preview"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"preivew-image"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../assets/001.jpeg"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.52,words:457},t:"放大镜效果",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%B8%90%E8%BF%9B%E5%BC%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/",{loader:()=>y(()=>import("./index.html--T1p7_5Z.js"),__vite__mapDeps([27,1])),meta:{d:1724434404e3,e:`
<p>渐进式图片就是一开始图片是模糊的，然后逐渐变得清晰。这不仅仅是一个动画效果，它是有实际作用的。有的时候，页面上会有一些大图，如果直接把大图渲染出来的话，它的传输时间比较长，用户会长时间陷入白屏。</p>
<p>那么，这个时候我们可以：</p>
<ol>
<li>先给它展示一个小图。因为小图的尺寸小，所以说它能快速的显示出来。</li>
<li>然后再逐步地给它传输大图。大图传输完成之后再显示大图。</li>
</ol>
<p>效果如下图所示：</p>
<p></p>
<p>可以看到，图片一开始是模糊的，然后逐渐变清晰，这就是渐进式图片。</p>
<p>那么这个渐进式图片具体怎么实现呢？有两种方案：</p>`,r:{minutes:2.33,words:699},t:"渐进式图片",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/",{loader:()=>y(()=>import("./index.html-1WfNnBi5.js"),__vite__mapDeps([28,1])),meta:{d:1721594313e3,e:`
<p>先看页面效果：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;瀑布流布局&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.76,words:1128},t:"瀑布流布局",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E7%9B%91%E5%90%AC%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6/",{loader:()=>y(()=>import("./index.html-BztlChkc.js"),__vite__mapDeps([29,1])),meta:{d:1723408158e3,e:`
`,r:{minutes:.03,words:8},t:"监听网页加载进度",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%AB%98%E5%BA%A6%E8%87%AA%E5%8A%A8%E8%BF%87%E6%B8%A1/",{loader:()=>y(()=>import("./index.html-BfqJk7y9.js"),__vite__mapDeps([30,1])),meta:{d:1721594313e3,e:`
<p>我们先来看一下以下的下拉的过渡效果：</p>
<p>这个下拉效果应该是我们每个前端小伙伴都会遇到的，这里我们来实现一下这个功能。</p>
<p>我们先来搭建一下页面结构：</p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;高度自动过渡&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"select-btn"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;hover me&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"select-popup"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"content"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.79,words:2038},t:"高度的自动过渡",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%AB%98%E9%87%8F%E7%BA%A7%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96/",{loader:()=>y(()=>import("./index.html-JA_RsDbE.js"),__vite__mapDeps([31,1])),meta:{d:1724434404e3,e:`
<h2>需求和页面绘制</h2>
<p>假设我们有以下页面：</p>
<p></p>
<p>我们的目标需求：是点击按钮后，同时执行 1000 个耗时任务，同时不能让页面产生卡顿现象。</p>
<p>我们先来简单绘制一下页面：</p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;高量级任务执行优化&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"view-box"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;点击按钮后，会同时执行 1000 个耗时任务&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;要尽快完成任务，同时不要让页面产生卡顿。&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;开始执行任务&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"finished"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">br</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">br</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ball"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:15.21,words:4564},t:"高量级任务执行优化",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E4%BB%8B%E7%BB%8D.html",{loader:()=>y(()=>import("./介绍.html-nVkiwiSA.js"),__vite__mapDeps([32,1])),meta:{d:172060934e4,e:`
<h2>前言</h2>
<p><code>Canvas</code> 是 <code>Html5</code> 标准中提供的一个标签，顾名思义就是定义在 <strong>浏览器</strong> 上的画布，通过强大的绘图接口，我们可以实现各种各样的图形、炫酷的动画，甚至可以利用它来开发小游戏。包括市面上流行的数据可视化框架底层都用了 <code>Canvas</code>。</p>
<h2>基础</h2>
<p><code>&lt;Canvas&gt;&lt;/Canvas&gt;</code> 是一个 <code>HTML</code> 元素，我们可以将它简答理解为一个画板，通过 <code>Canvas</code> 提供的绘制 <code>API</code> 我们就可以绘制出各种图形。</p>`,r:{minutes:1.57,words:472},t:"介绍 Canvas",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2.html",{loader:()=>y(()=>import("./绘制图形.html-0avymuh5.js"),__vite__mapDeps([33,1])),meta:{d:172060934e4,e:`
<h2>绘制线条</h2>
<p>在 <code>Canvas</code> 中绘制线条可以用到以下 <code>API</code>：</p>
<ul>
<li>绘制：<code>moveTo</code>、<code>lineTo</code>、<code>stroke</code>。
<ul>
<li><code>moveTo</code>：表示把 <strong>画笔</strong> 移动到某个位置。</li>
<li><code>lineTo</code>：表示用 <strong>画笔</strong> 画到某个位置。相当于把我们设置的 <strong>点</strong> 通过 <strong>线条</strong> 连接起来。</li>
<li>例如我们有起始点和终点，通过 <code>moveTo</code> 和 <code>lineTo</code> 那么就可以画一条线了。</li>
<li><code>stroke</code>：<code>moveTo</code> 和 <code>lineTo</code> 只是绘制命令或者说是描绘怎么样的绘制信息，真正要绘制的时候需要调用 <code>stroke</code>。</li>
</ul>
</li>
<li>设置样式：<code>lineWidth</code>、<code>strokeStyle</code>。
<ul>
<li><code>lineWidth</code>：设置线条的宽度。</li>
<li><code>strokeStyle</code>：设置画笔颜色。</li>
</ul>
</li>
<li>路径：<code>beginPath</code>、<code>closePath</code>。</li>
</ul>`,r:{minutes:12.47,words:3740},t:"绘制图形",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E5%9B%BE%E7%89%87.html",{loader:()=>y(()=>import("./绘制图片.html-BM-KZcx-.js"),__vite__mapDeps([34,1])),meta:{d:172060934e4,e:`
<p>在 <code>Canvas</code> 中，可以通过 <code>drawImage</code> 来绘制图片，<code>drawImage</code> 可以有以下⽤法：</p>
<ul>
<li><code>drawImage(image, dx, dy)</code>：表示指定位置绘制图片。 <code>image</code> 表示绘制到上下文的元素，允许任何的画布图像源。</li>
<li><code>drawImage(image, dx, dy, dWidth, dHeight)</code>：表示在指定位置绘制指定宽高的图片。</li>
<li><code>drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)</code>。
<ul>
<li><code>sx, sy, sWidth, sHeight</code>：对传入的 <code>image</code>，在指定的 <code>sx, sy</code> 的位置进行指定 <code>sWidth * sHeight</code> 宽高的裁剪。</li>
<li><code>dx, dy, dWidth, dHeight</code>：表示对裁剪后的图片放到 <code>dx, dy</code> 的位置，并且在该位置显示 <code>dWidth * dHeight</code> 的大小。</li>
</ul>
</li>
</ul>`,r:{minutes:1.12,words:336},t:"绘制图片",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E6%96%87%E6%9C%AC.html",{loader:()=>y(()=>import("./绘制文本.html-CYvEb235.js"),__vite__mapDeps([35,1])),meta:{d:172060934e4,e:`
<p>绘制方式：</p>
<ul>
<li><code>strokeText(text, x, y [, maxWidth])</code>：绘制一个轮廓文本。
<ul>
<li><code>text</code>：文本内容，</li>
<li><code>x</code>, <code>y</code>：坐标位置。</li>
<li><code>maxWidth</code>：需要绘制的最大宽度。</li>
</ul>
</li>
<li><code>fillText()</code>：绘制一个填充文本。如果指定了值，并且经过计算字符串的宽度比最大宽度还要宽，字体为了适应会使用一个水平缩小的字体（如果通过水平缩放当前的字体，可以进行有效的或者合理可读的处理）或者小号的字体。</li>
</ul>`,r:{minutes:1.34,words:402},t:"绘制文本",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%9B%BE%E6%A0%B7%E5%BC%8F.html",{loader:()=>y(()=>import("./绘图样式.html-CMwqeR3N.js"),__vite__mapDeps([36,1])),meta:{d:172060934e4,e:`
<h2>线条样式</h2>
<ul>
<li>
<p><code>lineWidth</code>：设置线条的宽度。</p>
</li>
<li>
<p><code>lineCap</code>：设置线条两端的形状。</p>
<p></p>
</li>
<li>
<p><code>setLineDash</code>：设置线条为虚线。</p>
</li>
</ul>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;Canvas&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Canvas"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"800"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"600"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"background-color: #c1c1c1;"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'Canvas'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> ctx</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">getContext</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'2d'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 绘制线条</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">beginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">lineWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 15</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 线宽</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">lineCap</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'round'</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 线条两端的样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">300</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 绘制虚线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">beginPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">moveTo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">300</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">lineWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // setLineDash 接收一个数组表示</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 表示虚线的线段和空隙的长度在 20 40 60 不断重复</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 一般情况下，数组只要两个数就足够了，分别表示线段和空隙的长度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setLineDash</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stroke</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.85,words:854},t:"绘图样式",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E8%BF%9B%E9%98%B6.html",{loader:()=>y(()=>import("./进阶.html-CHQxsNxJ.js"),__vite__mapDeps([37,1])),meta:{d:172060934e4,e:`
<h2>变形</h2>
<p>变形有三种变形方式：</p>
<ul>
<li><code>translate</code>：平移。</li>
</ul>
<p></p>
<p>例如上图中，坐标系的原点默认是在 <code>(0, 0)</code> 的位置，如果想要改变坐标系的位置，就需要进行平移的操作。</p>
<p>在图中，坐标系横向平移了 <code>x</code> 的单位距离，纵向移动了 <code>y</code> 的单位距离。红色的坐标系就是平移后的位置。</p>
<ul>
<li><code>rotate</code>：旋转。</li>
</ul>
<p></p>
<p>旋转就是对整个坐标系进行旋转某个角度。</p>`,r:{minutes:8.05,words:2416},t:"进阶",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/%E6%8F%8F%E8%BE%B9%E5%8A%A8%E7%94%BB/",{loader:()=>y(()=>import("./index.html-BV3F9R3T.js"),__vite__mapDeps([38,1])),meta:{d:172470666e4,e:`
<h2>两个重要属性</h2>
<p>我们先编写一段简单的 SVG 元素：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;SVG描边动画&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">svg</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"icon"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"200"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"200"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"p"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> x1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"0"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> y1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"50%"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> x2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"100%"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> y2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"50%"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">svg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.27,words:1281},t:"SVG 的描边动画",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack4/",{loader:()=>y(()=>import("./index.html-BaCjKyyq.js"),__vite__mapDeps([39,1])),meta:{d:1720303462e3,e:`
`,r:{minutes:0,words:1},t:"Webpack4",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E5%9F%BA%E7%A1%80.html",{loader:()=>y(()=>import("./Webpack5_基础.html-CRM6I9Og.js"),__vite__mapDeps([40,1])),meta:{d:1720303462e3,e:`
<blockquote>
<p>提示：本文档对应的代码在 <code>webpack5/代码/01_webpack_base</code> 中。</p>
</blockquote>
<h2>前言</h2>
<h3>为什么需要打包工具？</h3>
<p>开发时，我们会使用框架（<code>React</code>、<code>Vue</code>），<code>ES6</code> 模块化语法，<code>Less</code>/<code>Sass</code> 等 <code>css</code> 预处理器等语法进行开发。</p>
<p>这样的代码要想在浏览器运行 <strong>必须经过编译成浏览器能识别的 JS、Css 等语法</strong>，才能运行。所以我们需要打包工具帮我们做完这些事。</p>`,r:{minutes:63.99,words:19196},t:"webpack5 基础",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E6%90%AD%E5%BB%BA%E8%84%9A%E6%89%8B%E6%9E%B6.html",{loader:()=>y(()=>import("./Webpack5_搭建脚手架.html-UbxIoPzh.js"),__vite__mapDeps([41,1])),meta:{d:1720303462e3,e:`
<h1>介绍</h1>
<p>我们将使用前面所学的知识来从零开始搭建 <code>Vue-cli</code> 和 <code>React-Cli</code> 。</p>
<h1>开发模式配置</h1>
`,r:{minutes:.13,words:40},t:"webpack搭建 vue-cli 脚手架",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E9%AB%98%E7%BA%A7.html",{loader:()=>y(()=>import("./Webpack5_高级.html-DxdxHXzq.js"),__vite__mapDeps([42,1])),meta:{d:1720303462e3,e:`
<blockquote>
<p>提示：本文档对应的代码在 <code>webpack5/代码/02_webpack-senior</code> 中。</p>
</blockquote>
<h1>介绍</h1>
<p>本章节主要介绍 <code>Webpack</code> 高级配置。</p>
<p>所谓 <strong>高级配置</strong> 其实就是进行 <code>Webpack</code> 优化，让我们代码在编译/运行时性能更好。</p>
<p>我们会从以下角度来进行优化：</p>
<ol>
<li>提升开发体验。</li>
<li>提升打包构建速度。</li>
<li>减少代码体积。</li>
<li>优化代码运行性能。</li>
</ol>`,r:{minutes:54.46,words:16337},t:"webpack5 高级",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React16/",{loader:()=>y(()=>import("./index.html-D7y2kanx.js"),__vite__mapDeps([43,1])),meta:{d:1720303462e3,e:`
<p>待补充</p>
`,r:{minutes:.01,words:4},t:"React16",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/ReactNative/READEME.html",{loader:()=>y(()=>import("./READEME.html-hP783urv.js"),__vite__mapDeps([44,1])),meta:{d:1723840831e3,e:`
`,r:{minutes:.01,words:2},t:"React native",y:"a"}}],["/%E5%90%8E%E7%AB%AF/NodeJS/EggJS/%E7%94%9F%E6%88%90Token/",{loader:()=>y(()=>import("./index.html-MQlwW22Z.js"),__vite__mapDeps([45,1])),meta:{d:1724672656e3,e:`
<h2>安装配置 jwt</h2>
<ol>
<li>
<p>安装 <code>egg-jwt</code> 插件：<code>npm i egg-jwt --save</code></p>
</li>
<li>
<p>在 <code>config/plugin.js</code> 中引入插件：</p>
</li>
</ol>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75">jwt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75">  enable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  package</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'egg-jwt'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.92,words:275},t:"生成 Token",y:"a"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/MVVM%E5%92%8CMVC/",{loader:()=>y(()=>import("./index.html-DzZ_nEvP.js"),__vite__mapDeps([46,1])),meta:{d:1724532946e3,e:`
<h3>数据驱动思想</h3>
<ul>
<li>我们不会直接操作 DOM。</li>
<li>我们操作的是数据【当我们修改了数据，框架会按照相关的数据，让页面重新渲染】。</li>
<li>框架底层实现视图的渲染，也是基于操作 DOM 完成的
<ul>
<li>构建了一套 虚拟DOM -&gt; 真实DOM 的渲染体系。</li>
<li>有效避免了 DOM 的 重排/重绘。</li>
</ul>
</li>
<li>开发效率更高，最后的性能也相对较好。</li>
</ul>
<p><strong>Vue 框架采用的是 MVVM 体系，React 框架采用的是 MVC 体系</strong>。</p>`,r:{minutes:2.26,words:677},t:"MVVM 和 MVC 体系",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/Flex%E5%B8%83%E5%B1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/",{loader:()=>y(()=>import("./index.html-CwmidCsW.js"),__vite__mapDeps([47,1])),meta:{d:172444994e4,e:`
<p>效果如下图所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;响应式布局&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;缩放浏览器窗口大小，观看布局变化&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-wrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item2"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item3"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.56,words:168},t:"flex 响应式布局",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/Flex%E5%B8%83%E5%B1%80/%E7%BB%93%E5%90%88%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/",{loader:()=>y(()=>import("./index.html-CP23k0zA.js"),__vite__mapDeps([48,1])),meta:{d:172444994e4,e:`
<p>效果如下所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;Flex和媒体查询响应式布局&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-wrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item2"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item3"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item5"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;5&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item6"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;6&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item7"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;7&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;8&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item9"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;9&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"flex-item flex-item10"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;10&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.23,words:370},t:"flex 结合媒体查询响应式布局",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/SCSS/%E7%AE%80%E5%8C%96%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/",{loader:()=>y(()=>import("./index.html-Tu_Q2ot-.js"),__vite__mapDeps([49,1])),meta:{d:172485606e4,e:`
<h2>前言</h2>
<p>我们看来一下以下的 <strong>媒体查询</strong> 代码：</p>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">.header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">%</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">320</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">and</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">480</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">  .header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">481</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">and</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">768</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">  .header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">769</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">and</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1024</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">  .header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1025</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">and</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1200</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">  .header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">min-width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1201</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">  .header</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#ABB2BF">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.35,words:1904},t:"用 SCSS 简化媒体查询",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%B9%B6%E5%8F%91%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/",{loader:()=>y(()=>import("./index.html-CVhzCJ_p.js"),__vite__mapDeps([50,1])),meta:{d:1721772515e3,e:`
<h2>前言</h2>
<p>我们在日常开发中，如果遇到有大量的任务需要同时进行时，就可以使用 <strong>并发任务控制</strong> 来控制任务的并发执行。</p>
<h2>拟定并发任务实现</h2>
<p>首先，我们拟定一个构造函数，用来实现 <strong>并发任务控制</strong>：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 构造函数，异步任务的调度器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 这是一个通用型的函数。像并发请求之类的东西，都可以使用它进行完成。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> SuperTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // ...待实现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 这里创建了一个 SuperTask 的构造函数的实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> superTask</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> SuperTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:11.43,words:3430},t:"并发任务控制",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82/",{loader:()=>y(()=>import("./index.html-CwkzCe8z.js"),__vite__mapDeps([51,1])),meta:{d:1721772515e3,e:`
<h2>前言</h2>
<p><strong>并发请求</strong> 在我们日常开发中可以作为一个请求优化的方案，也是一道 <strong>高频的面试题</strong>。</p>
<p>在有些时候，我们的站点上有一些请求可能会产生很多，比方说大文件上传中的切片上传，会把很多切块进行多次上传请求。或者说是做一些数据的抓取时，都会产生大量的请求。</p>
<p>当请求很多的时候，如果说我们等一个请求完成之后再进行下一个请求，那么这个效率就比较低了。</p>
<p>所以，我们可能会同时发出多个请求，但是又不能发的太多。因为我们的网络信道也是有资源限制的。</p>
<p>因此，我们就需要去控制这个同时发出请求的数量，也就是 <strong>并发数</strong>。</p>`,r:{minutes:9.08,words:2725},t:"并发请求",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%89%81%E5%B9%B3%E5%8C%96%E5%88%97%E8%A1%A8%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/",{loader:()=>y(()=>import("./index.html-DwI92bAm.js"),__vite__mapDeps([52,1])),meta:{d:1720303462e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 源数据，扁平化列表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'用户管理'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'角色管理'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'菜单管理'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'用户删除'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'用户角色'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'用户添加'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'用户更新'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'角色添加'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'角色更新'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'菜单添加'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'菜单更新'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 建立整棵树的索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 创建存放树的数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> tree</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 循环遍历生成树</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 根据Pid检索对象是否存在</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> parent</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">pid</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 如果存在就加入到父节点中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 是否存在孩子数组  有就添加没有就创建</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">      parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    parent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">children</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 如果不存在，那么这就是根节点，直接加入到数组中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    tree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 打印效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">tree</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.82,words:245},t:"扁平化列表转树形结构",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%95%B0%E5%AD%97%E6%A0%BC%E5%BC%8F%E5%8C%96/",{loader:()=>y(()=>import("./index.html-BZrwNRla.js"),__vite__mapDeps([53,1])),meta:{d:1724447679e3,e:`
<p>如果我们想要给数字在对应的位数添加逗号，比如：<code>10000000000</code> -&gt; <code>10,000,000,000</code>，我们可以进行以下的操作：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 给你一个数字字符串：'10000000000'</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 把它转换成如下格式：10,000,000,000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '10000000000'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 方式一：纯正则表达式，一行代码实现</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那么使用纯正则表达式应该怎么做呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 首先我们来分析一下这道题：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * '10000000000' ---&gt; '10,000,000,000'</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 无非就是每 3 位的位置添加一个逗号的进行分割，那么</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 这些位置有什么样的特点呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 首先看最右边最后一个逗号，它后面有 1组 3位 数字，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 再看右边倒数第二个逗号，它后面有 2组 3位 数字，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 最后左侧第一个逗号，它后面有 3组 3位 数字。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 这就让我们想到了正则表达式。那么怎么写这个正则表达式呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// \\d{3} 表示数字出现 3 次</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// (\\d{3})+ 表示数字出现 3 次的情况有一次或多次</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 但是这样匹配的是 10 后面所有的数字了。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 我们要匹配的不是数字的本身，而是每三位数字前面的位置，这就要用到前瞻。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// const reg = /(\\d{3})+$/g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 把上面的正则中的 (\\d{3})+$ 放到 (?= ) 里面，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 那什么是前瞻呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 就是符合正则表达的所处的前面的位置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> reg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75"> /(?=(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">\\d</span><span style="--shiki-light:#D73A49;--shiki-dark:#D19A66">{3}</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D19A66">+</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">)/</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 然后把这些位置全部替换成逗号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> newStr</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">','</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">newStr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 10,000,000,000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 但是光上面的正则还是有点 bug</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 如果我们的数字字符串在加一个零：'100000000000'，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 这时，就会有问题，会发现 100 前面会多了一个逗号。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> str1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '100000000000'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> newStr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> str1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">','</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">newStr1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// ,100,000,000,000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 这时候就需要修改正则表达式，匹配非单词边界，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 因为 '100000000000' 里面的 1 前面的位置就是单词的边界，最后一个 0 的后面也是单词的边界。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 这里的 \\B 就表示匹配的是非单词边界</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> reg1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75"> /(?=</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">\\B</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">\\d</span><span style="--shiki-light:#D73A49;--shiki-dark:#D19A66">{3}</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#D19A66">+</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">$</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75">)/</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 然后把这些位置全部替换成逗号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> newStr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> str1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reg1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">','</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">newStr2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 100,000,000,000</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.93,words:579},t:"数字格式化",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%95%B0%E5%AD%97%E8%BD%AC%E4%B8%AD%E6%96%87/",{loader:()=>y(()=>import("./index.html-BSJBPQPE.js"),__vite__mapDeps([54,1])),meta:{d:1724447679e3,e:`
<h2>实现目标</h2>
<p>首先看下效果：</p>
<p></p>
<p>当我们点击转换的时候，可以把对应的数字转换成对应的中文，并且显示正确的读法。</p>
<h2>代码实现</h2>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;数字转中文&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;转换&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;原数字：&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"number"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;000000001234&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;转换后：&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"chineseNum"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.52,words:1655},t:"数字转中文",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%97%B6%E9%97%B4%E5%88%87%E7%89%87/",{loader:()=>y(()=>import("./index.html-GJFrL8zs.js"),__vite__mapDeps([55,1])),meta:{d:1720303462e3,e:`
<h2>概念</h2>
<p><code>JavaScript</code> <strong>时间切片</strong>（<code>Time Slicing</code>）是一种 <strong>优化技术</strong>，<strong>用于将一个长时间运行的任务拆分为多个小任务，以避免阻塞主线程</strong>，提高页面的响应性和性能。本文将详细解释 <code>JavaScript</code> 时间分片的原理、应用场景，并通过代码示例帮助读者更好地理解和应用该技术。</p>
<h2>原理</h2>
<p>时间分片的原理是基于 <code>JavaScript</code> 的 <strong>事件循环机制</strong>。在传统的事件循环中，当 <code>JavaScript</code> 引擎执行一个任务时，会一直占用主线程，直到任务执行完成。这可能导致长时间运行的任务阻塞主线程，影响页面的响应性。</p>`,r:{minutes:4.04,words:1212},t:"时间切片",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%B7%B1%E6%8B%B7%E8%B4%9D/",{loader:()=>y(()=>import("./index.html-DZYwPkGj.js"),__vite__mapDeps([56,1])),meta:{d:1723376304e3,e:`
<h2>简易版深拷贝</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 深拷贝</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> {any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> value</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 任意类型的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> deepClone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 数据类型是数组的情况</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Array</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isArray</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 注意！不能直接赋值，应该不确定数组中的每一项是否是一个基本数据类型，还是又是一个数组或对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 所以需要在进行一次深拷贝再赋值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      clone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> deepClone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> clone</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 数据类型是对象的情况</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'object'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 注意！不能直接赋值，应该不确定数组中的每一项是否是一个基本数据类型，还是又是一个数组或对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 所以需要在进行一次深拷贝再赋值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      clone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> deepClone</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> clone</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 如果是基本数据类型，直接返回</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.75,words:224},t:"深拷贝",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E9%AB%98%E9%87%8F%E7%BA%A7%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96/",{loader:()=>y(()=>import("./index.html-9u5Fdrko.js"),__vite__mapDeps([57,1])),meta:{d:1723404065e3,e:`
`,r:{minutes:.03,words:9},t:"高量级任务执行优化",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Apply_Bind_Call/",{loader:()=>y(()=>import("./index.html-pPTjFfeG.js"),__vite__mapDeps([58,1])),meta:{d:1720303462e3,e:`
<h3>一、改变 this</h3>
<p>Javascript 中还允许指定函数中 this 的指向，有 3 个方法可以动态指定普通函数中 this 的指向：</p>
<ul>
<li>call()</li>
<li>apply()</li>
<li>bind()</li>
</ul>
<h3>二、call（了解）</h3>
<p>使用 <strong>call 方法调用函数，同时指定被调函数中 this 的值</strong>。</p>
<p>语法：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">fun</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">call</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">thisArg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">arg1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">arg2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:3.36,words:1008},t:"apply、bind、call 方法 改变 this 指向",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Reflect/",{loader:()=>y(()=>import("./index.html-57QHuF_R.js"),__vite__mapDeps([59,1])),meta:{d:1720303462e3,e:`
<h3>前言</h3>
<p>很多人在学习 ES6 的时候，都会产生一个疑问，就是这个 Reflect 到底是什么，它到底起了一个什么样的作用。其实要回答它的作用只需要一句话：就是 <strong>调用对象的基本方法</strong>（或者叫 <strong>基本操作</strong> 或者叫 <strong>内部方法</strong>，都是一个意思）。</p>
<h3>对象的内部方法</h3>
<p>剩下的事情就是要解释一下什么是基本操作，什么叫内部方法。内部方法也好，基本操作也好，他们都是指向同一个意思，这一点在 ES6 的 <a href="https://ecma-international.org/publications-and-standards/standards/ecma-262/" target="_blank" rel="noopener noreferrer">官方文档</a> 里描述的非常清楚。</p>`,r:{minutes:7.43,words:2230},t:"Reflect",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/This%20%E6%8C%87%E5%90%91/",{loader:()=>y(()=>import("./index.html-CPy6CXEm.js"),__vite__mapDeps([60,1])),meta:{d:1720303462e3,e:`
<h2>环境对象</h2>
<p><strong>环境对象</strong>：指的是 <strong>函数内部特殊的变量 <code>this</code></strong> ，<strong>它代表着当前函数运行时所处的环境</strong>。</p>
<p><strong>作用</strong>：弄清楚 <code>this</code> 的指向，可以让我们代码更简洁。</p>
<ol>
<li>函数的调用方式不同，<code>this</code> 指代的对象也不同。</li>
<li>【谁调用， <code>this</code> 就是谁】 是判断 <code>this</code> 指向的 <strong>粗略规则</strong>。</li>
<li><strong>直接调用函数</strong>，其实相当于通过  <code>window.函数()</code> 的形式调用，所以 <code>this</code> 指代 <code>window</code>。</li>
</ol>`,r:{minutes:4.81,words:1443},t:"this 指向",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/",{loader:()=>y(()=>import("./index.html-DJJ21Bq0.js"),__vite__mapDeps([61,1])),meta:{d:1720303462e3,e:`
<h2>垃圾回收</h2>
<p>要聊清楚 <strong>垃圾回收</strong>，首先得知道 <strong>什么叫垃圾</strong>，这个概念一直以来没有一个明确的定义，不过形成的共识就是：<strong>不再需要的内存，这里内存里面的数据就是垃圾</strong>。</p>
<p>那么，什么又是不再需要呢？这个不再需要是由谁来决定的呢？其实由人决定的？我们说它需要就需要，说它不需要就不需要。</p>
<p>所以，这件事就有的时候看着比较明确，有的时候就没那么明确。因为认为的因素太多了。</p>
<p>比方说一下例子：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createIncrease</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> doms</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">item</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">i</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> dom</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    dom</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> dom</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> increase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    doms</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">dom</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">      dom</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Number</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">dom</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> i</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> increase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> increase</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> createIncrease</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> btn</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'button'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">btn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'click'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">increase</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.76,words:2927},t:"垃圾回收 和 内存泄露 和 闭包",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%8B%96%E6%8B%BDAPI/",{loader:()=>y(()=>import("./index.html-DU8qL0VC.js"),__vite__mapDeps([62,1])),meta:{d:1724447679e3,e:`
<p>实现元素的拖拽有两种方式：</p>
<ol>
<li>使用 H5 的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FHTML_Drag_and_Drop_API" target="_blank" rel="noopener noreferrer">drag and drop api</a>。</li>
<li>原生 JS 鼠标点击事件。</li>
</ol>
<h3>一、H5 拖放事件</h3>
<p>拖放是由 <strong>拖动</strong> 与 <strong>释放</strong> 两部分组成，拖放事件也分为 <strong>被拖动元素的相关事件</strong> 和<strong>容器（目标元素）的相关事件</strong>。</p>`,r:{minutes:1.75,words:525},t:"拖拽",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E7%B1%BB%E5%92%8C%E5%8E%9F%E5%9E%8B/",{loader:()=>y(()=>import("./index.html-BAfLVbmG.js"),__vite__mapDeps([63,1])),meta:{d:1720303462e3,e:`
<h3>一、构造函数</h3>
<h4>1. 构造函数是什么？</h4>
<p>在典型的 OOP 的语言中（如 Java），都存在类的概念。<strong>类就是对象的模板，对象就是类的实例</strong>。但是，在 ES6 之前，JS 中并没有引入类的概念。</p>
<p>在 ES6 之前，对象不是基于类创建的，而是一种称为 <strong>构造函数</strong> 的特殊函数来定义对象和它们的特征。</p>
<p><strong><u>构造函数是一种特殊的函数，主要用来初始化对象。</u></strong></p>
<h4>2. 使用场景</h4>
<p>常规的 <code>const obj = {}</code> 语法允许创建一个对象。</p>`,r:{minutes:47.96,words:14389},t:"构造函数、原型、类",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%92%8C%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/",{loader:()=>y(()=>import("./index.html-3GecsPRC.js"),__vite__mapDeps([64,1])),meta:{d:1724532946e3,e:`
<p>当我们要去谈论一个路径，首先要清楚我们是在一个什么样的环境里边去谈论。比方说：在 <strong>操作系统</strong> 里边的路径 跟 <strong>网络环境</strong> 里边的路径，它的含义是不一样的。</p>
<p>而对于前端开发来说，绝大部分时候打交道的路径都是 <strong>网络</strong> 当中的 路径。</p>
<p>例如：</p>
<ul>
<li>img 标签的 src 属性。</li>
<li>a 标签。</li>
<li>link 标签。</li>
<li>ajax 里边的请求地址。</li>
<li>....等等。</li>
</ul>
<p>写这个路径的目的是为了完成请求。而我们或多或少都了解过 http，我们知道要发送一个请求，必须要得到一个完整的 url 地址。既然它发送请求需要完整的 url 地址，那么我们写 <strong>绝对路径</strong> 和 <strong>相对路径</strong> 是为了干嘛呢？直接写一个完整的 url 地址不就完了吗？</p>`,r:{minutes:7,words:2100},t:"绝对路径和相对路径",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E9%97%AD%E5%8C%85/",{loader:()=>y(()=>import("./index.html-Bfo1SYxv.js"),__vite__mapDeps([65,1])),meta:{d:1720303462e3,e:`
<p>闭包有哪些容易引起歧义的地方？</p>
<ul>
<li>闭包一定有 <code>return</code> 吗？（答案是不一定）</li>
<li>闭包一定会内存泄露吗？（答案是不一定）</li>
</ul>
<h2>闭包的概念</h2>
<p>概念：<strong>闭包</strong>（closure）是一个函数以及其捆绑的周边环境状态（<strong>lexical environment</strong>，<strong>词法环境</strong>）的引用的组合。换而言之，闭包让开发者可以从内部函数访问外部函数的作用域。在 <code>JavaScript</code> 中，闭包会随着函数的创建而被同时创建。</p>`,r:{minutes:2.82,words:846},t:"闭包（Closure）",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/Excel/WebWoker%E4%BC%98%E5%8C%96%E5%AF%BC%E5%87%BA%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE/",{loader:()=>y(()=>import("./index.html-CxQmug64.js"),__vite__mapDeps([66,1])),meta:{d:1723408158e3,e:`
<h2>前言</h2>
<p>在前端列表数据导出为 <code>excel</code> 进行下载，列表数据可到百万以上，因此在主线程内对大量数据进行 <code>excel</code> 导出时不可避免的会对主线程进行阻塞，而主线程阻塞对于用户感知来说就是 <strong>页面卡顿</strong>。</p>
<p>显然，这种业务是一种典型的 <code>CPU</code> 密集型任务，如果可以放在主线程以外的线程进行执行那么就可以有效的避免对主线程的阻塞了；<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Worker" target="_blank" rel="noopener noreferrer">Worker</a> 正是为此而生，通过创建 <code>worker</code> 来新建线程，就可以有效的分担主线程的压力。</p>`,r:{minutes:7.27,words:2180},t:"Web Worker 优化导出大量数据",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/Excel/%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BAExcel/",{loader:()=>y(()=>import("./index.html-BZxGJS5a.js"),__vite__mapDeps([67,1])),meta:{d:1723408158e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;前端导出Excel&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"export-btn"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;导出&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"import-btn"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;导入&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"table"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  &lt;!-- 库文件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../lib/xlsx-0.20.1/package/dist/xlsx.full.min.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  &lt;!-- 封装导出方法的文件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../scripts/export.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  &lt;!-- 封装导入方法的文件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"../scripts/import.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  &lt;!-- 当前页面的 js 文件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.45,words:734},t:"导入和导出 Excel",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/PDF/PDF%E9%A2%84%E8%A7%88/",{loader:()=>y(()=>import("./index.html-DtNAB48z.js"),__vite__mapDeps([68,1])),meta:{d:1720303462e3,e:`
<h2>前言</h2>
<p>在开发过程中，我们应该都会遇到过预览 <code>PDF</code> 文件的需求。</p>
<p>预览 <code>PDF</code> 文件的常规方式一般会有以下：</p>
<ul>
<li>如果是在 <code>PC</code> 端预览，会有如下方式：
<ul>
<li>通过 <code>window.open(url)</code> 打开一个浏览器新窗口，<code>url</code> 就是 <code>PDF</code> 文件的地址。</li>
<li>通过 <code>iframe</code> 标签预览，<code>iframe</code> 的 <code>src</code> 属性就是 <code>PDF</code> 文件的下载地址。</li>
<li>使用 <a href="https://github.com/mozilla/pdf.js#online-demo" target="_blank" rel="noopener noreferrer"><code>pdf.js</code></a> 插件预览。</li>
</ul>
</li>
<li>如果是在 <code>H5</code> 端预览
<ul>
<li>一般会通过 <code>iframe</code> 标签进行预览。</li>
<li>或者使用 <a href="https://github.com/gjTool/pdfh5" target="_blank" rel="noopener noreferrer"><code>pdfh5</code></a> 插件。</li>
</ul>
</li>
</ul>`,r:{minutes:19.44,words:5833},t:"PDF 分片加载预览 / 懒加载预览",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/AnimationAPI/",{loader:()=>y(()=>import("./index.html-BCAAv2Jm.js"),__vite__mapDeps([69,1])),meta:{d:1724518125e3,e:`
<h2>前言</h2>
<p>在前端开发中，我们如果要做动画，一般有两种思路：</p>
<ul>
<li>第一种就是使用 <code>css</code> 来实现。</li>
<li>第二种就是使用 <code>js</code> 来实现。</li>
</ul>
<p><code>css</code> 的实现动画比较简单，效率也很高。但是它不灵活，因为如果说它出现一些跟交互关联非常强的动画 <code>css</code> 就很难实现了。</p>
<p>对于 <code>js</code> 动画，官方又没有给我们提供相应的 <code>api</code>，我们得自己写，或者是使用一些第三方库。自己写比较麻烦，用第三方库又会导致要引入更多的 <code>js</code> 文件，在效率上也不是很合适。</p>`,r:{minutes:4.95,words:1485},t:"Web Animation API",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/IntersectionObserver/",{loader:()=>y(()=>import("./index.html-B6PY3Gh1.js"),__vite__mapDeps([70,1])),meta:{d:172444994e4,e:`
<h2>前言</h2>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IntersectionObserver" target="_blank" rel="noopener noreferrer">IntersectionObserver</a> 提供了一种异步观察目标元素与其祖先元素或顶级文档<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Viewport" target="_blank" rel="noopener noreferrer">视口</a>（viewport）交叉状态的方法。我们可以通过观察目标元素与视口是否有交叉的情况来编写图片懒加载的效果。</p>`,r:{minutes:3.38,words:1013},t:"IntersectionObserver",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-Cw4qjsIR.js"),__vite__mapDeps([71,1])),meta:{d:1724960736e3,e:`
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket" target="_blank" rel="noopener noreferrer">WebSocket</a> 是一种网络通信协议，它提供了在单个 TCP 连接上进行 <strong>全双工通讯</strong> 的通道。这意味着 <strong>服务器和客户端之间可以相互发送信息</strong>，而不需要客户端像传统 HTTP 请求那样不断地向服务器发送请求来等待响应。<strong>WebSocket</strong> 非常适合需要实时数据通信的应用，如在线游戏、聊天应用、实时通知系统等。</p>`,r:{minutes:2.13,words:638},t:"WebSocket 的基本使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/%E7%9B%91%E6%8E%A7%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/",{loader:()=>y(()=>import("./index.html-Cg88VhxV.js"),__vite__mapDeps([72,1])),meta:{d:1724518125e3,e:`
`,r:{minutes:.02,words:6},t:"监控网络状态",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6/",{loader:()=>y(()=>import("./index.html-fMfF2mcd.js"),__vite__mapDeps([73,1])),meta:{d:1724960736e3,e:`
<p>心跳机制主要是用来检测服务端和客户端是否建立了 WebSocket 的连接，是否保持着这个连接的关系。</p>
<p>为什么叫心跳呢？顾名思义就是每隔一段时间去看看服务端和客户端的连接关系。如果说客户端和服务端没有这连接的关系，那么就要尝试重连。</p>
<h2>前端实现</h2>
<p>我们通过类来继承并进一步封装 <code>WebSocket</code>：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// socket.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> WS_MODE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  MESSAGE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'MESSAGE'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  HEART_BEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'HEART_BEAT'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 我们可以写一个类继承 WebSocket 对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> WS</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> WebSocket</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    super</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 定义两个连接状态，一个是连接状态，一个是未连接的状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // false 未连接，true 已连接</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 当我们重连的时候也是需要用到 url 的，所以我们定义一个变量来存储 url</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">wsUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> url</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 心跳检测的定时器</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reconnectTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 重新连接的定时器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 初始化方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  init</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bindEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 绑定的一些方法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  bindEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 这里的 this 就是 websocket 的实例对象</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onopen</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">openHandler</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onmessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">messageHandler</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onclose</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">closeHandler</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onerror</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">errorHandler</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  openHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- 客户端已连接 --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 连接成功后，将连接状态改为 true</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">startHeartBeat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 连接成功后，开启心跳检测</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  messageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- 客户端接收到数据 --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    switch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      case</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> WS_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">MESSAGE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- MESSAGE --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      case</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> WS_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">HEART_BEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- HEART_BEAT --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 收到心跳消息后，将连接状态改为 true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      default</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        break</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  closeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- 连接已关闭 --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 断开连接后，将连接状态改为 false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 在 startHeartBeat 函数中，会进行 setInterval 定时器，所以需要清除</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      clearInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reconnectTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      clearTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reconnectTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reconnectTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">reconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 当连接断开的时候，重新连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  errorHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'-- 连接出错 --'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 连接出错后，将连接状态改为 false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">reconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 当连接出错的时候，重新连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 开启心跳检测</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  startHeartBeat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 隔一段时间发送一次心跳消息</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 如果是连接中的状态才发送消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 发送心跳消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> msg</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">          mode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">WS_MODE</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75">HEART_BEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">          msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'心跳检测'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        clearInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">heartBeatTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 模拟关闭</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">waitForResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 重新连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  reconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 一段时间后，重新连接</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reconnectTimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> WS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">wsUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 模拟关闭</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  waitForResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">connectedStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> WS</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.45,words:1035},t:"WebSocket 的心跳机制",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/",{loader:()=>y(()=>import("./index.html-BxWr6PvM.js"),__vite__mapDeps([74,1])),meta:{d:1721772515e3,c:["JavaScript","Javascript 综合案例","文件上传"],e:`
<h2>前言</h2>
<p>在日常开发中，<strong>文件上传</strong> 是最常见的操作之一。文件上传技术使得用户可以方便地将本地文件上传到 <code>web</code> 服务器上，这在许多场景下都是必须的。比如：网盘上传、头像上传等。</p>
<p>但是，当我们需要上传比较大的文件的时候，容易碰到以下问题：</p>
<ol>
<li>上传时间长。</li>
<li>中间一旦出错就需要重新上传。</li>
<li>一般服务器端会对文件大小进行限制。</li>
</ol>
<p>这几个问题会导致上传的时候用户体验不好，针对存在的这些问题，我们可以通过 <strong>分片上传</strong> 来解决。</p>`,r:{minutes:1.72,words:515},t:"大文件上传实现原理",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87%E4%B8%8A%E4%BC%A0/",{loader:()=>y(()=>import("./index.html-CGsLtC1Y.js"),__vite__mapDeps([75,1])),meta:{d:1721772515e3,c:["JavaScript","Javascript 综合案例","文件上传"],e:`
<p>参考教程：</p>
<ul>
<li><a href="https://www.bilibili.com/video/BV1qu4y1p7fB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=6332e1bb31856e14def5553edbed6aa1" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1qu4y1p7fB/?spm_id_from=333.337.search-card.all.click&amp;vd_source=6332e1bb31856e14def5553edbed6aa1</a></li>
<li><a href="https://www.bilibili.com/video/BV1q8411R7Cb/?spm_id_from=333.999.0.0&amp;vd_source=6332e1bb31856e14def5553edbed6aa1" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1q8411R7Cb/?spm_id_from=333.999.0.0&amp;vd_source=6332e1bb31856e14def5553edbed6aa1</a></li>
</ul>`,r:{minutes:18.39,words:5517},t:"文件分片上传",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E7%A7%92%E4%BC%A0%E5%92%8C%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/",{loader:()=>y(()=>import("./index.html-b3zvX1BT.js"),__vite__mapDeps([76,1])),meta:{d:1721772515e3,c:["JavaScript","Javascript 综合案例","文件上传"],e:`
<h2>前端实现</h2>
<h3>秒传</h3>
<p>前端在之前 <code>hash</code> 值计算中也已经提到了，如果内容相同的文件进行 <code>hash</code> 计算时，对应的 <code>hash</code> 值应该是一样的，而且我们在服务器给上传的文件命名的时候就是用对应的 <code>hash</code> 值命名的。</p>
<p>所以在上传之前是不是可以加一个判断，如果有对应的文件就不用再重复上传了，直接告诉用户上传成功，给用户的感觉就像是实现了秒传。</p>
<p>我们只需要在 <code>index.js</code> 添加一个请求方法，向后端请求该文件是否上传过就行了：</p>`,r:{minutes:4.22,words:1267},t:"秒传和断点续传",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E4%B8%8D%E5%AE%9A%E9%AB%98%E5%BA%A6/",{loader:()=>y(()=>import("./index.html-BXCtZ22c.js"),__vite__mapDeps([77,1])),meta:{d:1723404065e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;不定高度&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 模拟滚动条 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于撑开 container 容器，使 container 容器可以滚动 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-bar 盒子的高度：列表的总数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-bar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于渲染真实显示数量的列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度：真实渲染的列表项数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度 必然小于 container 的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./scripts/mock.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.91,words:1772},t:"虚拟列表 - 不定高度",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%A7%86%E9%A2%91%E7%9B%B8%E5%85%B3/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E6%B5%81%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91/",{loader:()=>y(()=>import("./index.html-DA5gMICj.js"),__vite__mapDeps([78,1])),meta:{d:1720303462e3,e:`
<h2>后端实现</h2>
<p>后端通过 <code>express</code> 编写一段简单的返回 视频流 的接口：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 引入Express框架</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> express</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"express"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 引入文件系统模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"fs"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> path</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 创建一个Express应用实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> express</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 设置服务器监听的端口</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> port</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 3000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 定义一个路由，处理对视频文件的请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"/api/getVideo"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">req</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 视频文件的路径（请替换为实际的视频文件路径）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> videoPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">__dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./media/video.mp4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 使用 fs.statSync 同步方法获取视频文件的状态信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> stat</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">statSync</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">videoPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 获取文件大小（以字节为单位）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> fileSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> stat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 设置响应头信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> head</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 指明发送给接受方的消息主体的大小。Content-Length 如果存在并且有效地话，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 则必须和消息内容的传输长度完全一致。否则就会导致异常 (特别地, HTTP1.0 中这个字段可有可无)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">    "Content-Length"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">fileSize</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">    "Content-Type"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"video/mp4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 设置内容类型为视频格式</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">    "Access-Control-Allow-Origin"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"*"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">    "Access-Control-Allow-Headers"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"*"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379">    "Access-Control-Allow-Methods"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"*"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 设置HTTP状态码为200（成功）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">writeHead</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 创建一个只读流并管道到响应对象中，开始发送数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  fs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createReadStream</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">videoPath</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">pipe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 启动服务器，监听指定的端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">app</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">listen</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">port</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">\`Server is running on port </span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">port</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">});</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.04,words:613},t:"获取视频流播放视频",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%A7%86%E9%A2%91%E7%9B%B8%E5%85%B3/%E8%AF%BB%E5%8F%96%E8%A7%86%E9%A2%91%E5%85%B3%E9%94%AE%E5%B8%A7%E7%94%BB%E9%9D%A2/",{loader:()=>y(()=>import("./index.html-DLk1dmBA.js"),__vite__mapDeps([79,1])),meta:{d:1723391374e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;视屏文件读取关键帧画面&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"FileInput"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"file"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;视频封面：&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">""</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./createVideoKeyframe.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.75,words:1425},t:"读取视频关键帧画面",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%BD%AE%E6%92%AD%E5%9B%BE/%E7%A7%BB%E5%8A%A8%E7%AB%AF/",{loader:()=>y(()=>import("./index.html-nqOELZIJ.js"),__vite__mapDeps([80,1])),meta:{d:1724447679e3,e:`
`,r:{minutes:.02,words:6},t:"移动端轮播图",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%BD%AE%E6%92%AD%E5%9B%BE/%E7%BD%91%E9%A1%B5%E7%AB%AF/",{loader:()=>y(()=>import("./index.html-TKo3jOWx.js"),__vite__mapDeps([81,1])),meta:{d:1724447679e3,c:["JavaScript","Javascript 综合案例"],e:`
<p>具体效果如下所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;网页端轮播图&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-container"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 轮播列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-item item-1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-item item-2"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-item item-3"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-item item-4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 左右箭头 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-arrow carousel-arrow-left"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FFFFFF;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"carousel-arrow carousel-arrow-right"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 指示点 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"indicator"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"active"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.12,words:1237},t:"网页端轮播图",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%A1%B5%E9%9D%A2%E9%80%82%E9%85%8D/%E5%A4%A7%E5%B1%8F%E9%80%82%E9%85%8D/",{loader:()=>y(()=>import("./index.html-DOT1-zJd.js"),__vite__mapDeps([82,1])),meta:{d:1724447679e3,e:`
<p>大屏适配的核心：</p>
<ol>
<li>设计尺寸建议按照输出分辨率设计。</li>
<li>拼接后像素在 <code>4K</code> 左右直接按照总和设计就行。</li>
<li>特殊尺寸不要考虑适配电脑屏幕又适配拼接屏，因为完全没有必要，也不可能一稿即适配电脑也是配各种尺寸的大屏。</li>
<li>优先考虑目标屏幕的适配，要针对性设计，而在小屏幕根据等比缩放显示。</li>
</ol>
<p>常见的大屏适配方案：</p>
<ol>
<li>百分比设置。</li>
<li><code>rem</code> 单位 + 动态设置 <code>html</code> 的 <code>font-size</code>。</li>
<li><code>vw</code> 单位。</li>
<li><code>flex</code> 弹性布局。</li>
<li><code>scale</code> 等比缩放（推荐）。</li>
</ol>`,r:{minutes:6.14,words:1843},t:"大屏适配",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%A1%B5%E9%9D%A2%E9%80%82%E9%85%8D/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/",{loader:()=>y(()=>import("./index.html-CtWDBC4x.js"),__vite__mapDeps([83,1])),meta:{d:1724447679e3,e:`
<h2>一、rem 适配的原理</h2>
<ul>
<li>
<p><code>rem（font size of the root element）</code> 是一个相对单位，是相对于 <strong>根标签（html）</strong> 中的 <code>font-size</code> 为 <strong>基准</strong> 的。</p>
</li>
<li>
<p>当页面大小发生变化时，同步修改 <strong>根 <code>html</code></strong> 元素 的 <code>font-size</code> 大小，这样凡是属于 <code>rem</code> 单位的实际 <code>px</code> 也会跟着适配改变。</p>
</li>
<li>
<p><strong>1 <code>rem</code></strong> = <strong><code>html</code> 的 <code>font-size</code> 大小</strong>（<code>px</code>）。</p>
</li>
</ul>`,r:{minutes:7.83,words:2350},t:"REM 适配",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E5%88%AE%E5%88%AE%E4%B9%90/",{loader:()=>y(()=>import("./index.html-e17v6Uz9.js"),__vite__mapDeps([84,1])),meta:{d:1720609945e3,e:`
<p>技术点：<strong>图像合成</strong>。</p>
<p>具体流程：</p>
<ol>
<li>我们先通过绘制一个矩形区域作为待刮的区域，</li>
<li>当鼠标按下的时候记录当前点位，作为 <code>moveTo()</code> 的起点位置。</li>
<li>然后再鼠标按下的过程中进行移动时，不断地 <code>lineTo()</code> 移动到对应的鼠标位置形成线条。</li>
<li>并且矩形区域和线条重叠的部分用 <strong>图像合成</strong> 直的<code>destination-out</code> 模式效果，把重叠的部分镂空。</li>
</ol>`,r:{minutes:2.51,words:753},t:"Canvas 实现放刮刮乐效果",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E6%88%AA%E5%9B%BE/",{loader:()=>y(()=>import("./index.html-CifEOysp.js"),__vite__mapDeps([85,1])),meta:{d:1720609945e3,e:`
`,r:{minutes:.02,words:5},t:"Canvas 实现截图",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E6%94%BE%E5%A4%A7%E9%95%9C/",{loader:()=>y(()=>import("./index.html-jHYzqWMV.js"),__vite__mapDeps([86,1])),meta:{d:1720609945e3,e:`
<p>我们在逛一些商城网站的时候，应该都有注意到，在商品页面中会有一个放大的效果，可以查看商品放大后的细节，如下图所示：</p>
<p></p>
<p>其实这种效果除了用传统的 <code>js</code> 和 <code>css</code> 来实现外，还可以用 <code>Canvas</code> 来实现。</p>
<p>技术点：<strong>离屏渲染</strong>。</p>
<p>将一个 <code>Canvas</code> 对象绘制到另一个 <code>Canvas</code> 对象上（离开用户可视范围内进行渲染）。</p>
<p></p>
<p>我们可以创建两个 <code>canvas</code> 图片，一个是 <strong>放大的图</strong>，是一个 <strong>原图</strong>，如上图中的左边和中间的图片。</p>`,r:{minutes:3.48,words:1045},t:"Canvas 实现放大镜",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/SVG%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E4%BB%8B%E7%BB%8D/",{loader:()=>y(()=>import("./index.html-DOcgCnUG.js"),__vite__mapDeps([87,1])),meta:{d:172060934e4,e:`
<p>待补充</p>
`,r:{minutes:.03,words:9},t:"SVG 的基本使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D/",{loader:()=>y(()=>import("./index.html-bq8aWtGj.js"),__vite__mapDeps([88,1])),meta:{d:1724787996e3,e:`
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;电子签名&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"canvas-container"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"canvas-box"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"1000"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"562"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"reset"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;重置&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"submit"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;提交&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.5,words:449},t:"电子签名",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/",{loader:()=>y(()=>import("./index.html-uMyba6nu.js"),__vite__mapDeps([89,1])),meta:{d:1723376304e3,e:`
`,r:{minutes:.01,words:4},t:"微信支付",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/",{loader:()=>y(()=>import("./index.html-DOqtz6dD.js"),__vite__mapDeps([90,1])),meta:{d:1723376304e3,e:`
<h2>流程概述</h2>
<p>微信小程序登录涉及到前端和后端的交互，主要流程如下：</p>
<ol>
<li><strong>前端</strong> 调用 <code>wx.login()</code> ，获取临时登录凭证 <code>code</code>。</li>
<li><strong>前端</strong> 当用户点击授权登录按钮时，获取用户信息或者手机号码，同时发送请求把 <code>code</code> 以及获取的用户加密信息发送给我们自己的 <strong>后端</strong> 服务器。</li>
<li><strong>后端</strong> 服务器调用 <code>code2Session</code>：使用 <code>code</code> 向微信服务器请求 <code>session_key</code> 和 <code>openid</code>。</li>
<li><strong>后端</strong> 服务器解密用户信息或手机号：使用 <code>session_key</code> 解密用户信息或手机号。</li>
</ol>`,r:{minutes:3.33,words:999},t:"授权登录流程",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/UniApp/%E8%87%AA%E5%AE%9A%E4%B9%89Tabbar/",{loader:()=>y(()=>import("./index.html-C0v5zXoG.js"),__vite__mapDeps([91,1])),meta:{d:1721512247e3,e:`
`,r:{minutes:.03,words:9},t:"项目的两种创建方式",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/UniApp/%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F/",{loader:()=>y(()=>import("./index.html-DhZc-f9C.js"),__vite__mapDeps([92,1])),meta:{d:1721512247e3,e:`
<p><strong>uni-app</strong> 支持两种方式创建项目：</p>
<ol>
<li>通过 <strong>HBuilderX</strong> 创建。</li>
<li>通过 <strong>命令行</strong> 创建（不必依赖 <strong>HBuilderX</strong>）。</li>
</ol>
<h2>HBuilderX 创建</h2>
<p>通过 <strong>HbuilderX</strong> 创建 <strong>uni-app</strong> 的 <strong>vue3</strong> 项目：</p>
<p></p>
<p><strong>vue2</strong> 同理，<strong>vue2</strong> 只需在上图中的第三步中，选择 <strong>vue2</strong> 版本即可。</p>`,r:{minutes:4.11,words:1232},t:"项目的两种创建方式",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/01-%E5%9F%BA%E6%9C%AC%E6%9E%84%E9%80%A0.html",{loader:()=>y(()=>import("./01-基本构造.html-BgYYa7kH.js"),__vite__mapDeps([93,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 按照我们使用 ES6 中的 Promise API 可以发现，我们是需要给 Promise 传递参数，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这个参数是一个函数，这个函数表示的是这个任务的执行过程。它描述了这个任务一开始</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 要做什么，然后再做什么。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 这个执行器也是需要传参的，我们在使用 Promise 时，会传递两个参数：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 分别是 resolve 函数 和 reject 函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 立即执行该执行器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 在原型上定义这两个 resolve 和 reject 函数并且我不希望用户调用这两个函数，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 所以前面加上下划线，表示是这个类私有的东西。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 当实例化对象并调用 resolve 方法时，调用的实际上是当前的 _resolve() 方法，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 然后当前的 _resolve() 方法中用到了 this，那么 this 的指向是指向谁呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * this 的指向取决于如何调用当前函数，那么当前函数是如何被调用的呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 当前函数是在实例化时，在传入的回调用直接被调用的，如下所示：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * new MyPromise((resolve, reject) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     *    resolve(123)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 直接调用该函数，那么当前函数的 this 应当指向 window 全局变量，但是 ES6 的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * class 采用的是严格模式，严格模式下这里的 this 指向的是 undefined。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 我们希望的是该函数的 this 指向的是当前的 Promise 实例化对象，所以应该在</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * executor() 传参时，绑定并改变 this 的指向。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * _reject() 函数同理。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // console.log(this) // 直接被调用时，默认指向 undefined</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> reason</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 当我们调用 resolve 函数时，在 MyPromise 中，其实调用的是 _resolve()，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 然后传递了一个成功时的数据 123，在 _resolve(data) 中接收了这个数据。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // resolve(123)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">456</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.28,words:684},t:"手写 Promise 的基本构造",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/02-%E6%8A%BD%E7%A6%BB-%E5%B0%81%E8%A3%85-%E4%BC%98%E5%8C%96.html",{loader:()=>y(()=>import("./02-抽离-封装-优化.html-la_GHW-L.js"),__vite__mapDeps([94,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 优化1. 记录 Promise 的三种状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> REJECTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 优化4. 捕获 executor 执行过程的报错</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 如果我们的 Promise 在执行过程中报错了，比方说我在 Promise 的回调中手动</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 抛出一个错误 throw 123，我们应该需要处理这个错误，把我们的 Promise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 自动改为 rejected。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 我们应该怎么处理这件事情呢？我们只需要在调用 executor() 执行器的时候，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 进行错误的捕获即可。如果有错误，直接手动调用 reject()。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 立即执行该执行器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // Promise 执行过程中，如果报错，手动调用 reject() 函数。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 优化2. 抽离改变状态的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 因为不管是 resolve 还是 reject 都有在改变状态和记录改变后的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 所以，可以这把部分的代码抽离出来进行封装。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newState</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newValue</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态得到的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 优化3. 在 Promise 中，只要状态一旦发生变化，当前状态就不能再次被修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 说明状态已经被改了</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newState</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newValue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // resolve(123)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // reject(456)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  throw</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 123</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.81,words:543},t:"抽离、封装、优化 Promise",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/03-%E5%B0%81%E8%A3%85%E6%93%8D%E4%BD%9C%E5%BE%AE%E9%98%9F%E5%88%97%E5%87%BD%E6%95%B0.html",{loader:()=>y(()=>import("./03-封装操作微队列函数.html-DNu2VNQ-.js"),__vite__mapDeps([95,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 优化1. 记录 Promise 的三种状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> REJECTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 运行一个微队列任务，把传递的函数放到微队列中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> callback</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 需要添加到微队列执行的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 那么应该如何添加到微队列中呢？这里需要区分两个环境。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 一个是 node 环境，另一个是 浏览器 环境。因为 Promise 这个东西</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 是 ES6 的官方标准，所以它在各种环境里面都能支持。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // node 环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // node 环境中有一个对象 process，并且这个对象有个一个 nextTick 属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // process.nextTick 就是 node 环境里面的微队列。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'undefined'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">nextTick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 把回调函数放到微队列里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境有一个对象 MutationObserver，它是一个构造函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 创建并返回一个新的 MutationObserver 实例，在实例化对象时，需要传递一个回调函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这个函数是放到微队列里面执行的，它会在指定的 DOM 发生变化时被调用。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动创建一个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 创建一个 MutationObserver 观察器实例，并传递一个回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 通过观察器的 observe 方法，监听 div 元素</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 第二个参数表示描述了 DOM 的哪些变化时，会去触发传入的 callback。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    observer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      childList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 观察该元素内容的变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动去改变这个 div 元素的内部内容，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 相当于手动触发了 MutationObserver() 传入的 callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '1'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 其他情况，可能是一些低版本浏览器，也可能是一些低版本 node 环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这种情况下只能通过 setTimeout 来模拟微队列，即使它不是微队列。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 立即执行该执行器并捕获 executor 执行过程的报错</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // Promise 执行过程中，如果报错，手动调用 reject() 函数。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 改变状态的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newState</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newValue</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态得到的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 在 Promise 中，只要状态一旦发生变化，当前状态就不能再次被修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newState</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newValue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们写的添加微队列的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 运行结果是 3 2 1，说明 runMicroTask 能成功帮助我们添加到微队列</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/********************* ES6 的 Promise 的 then 使用参考 ******************************** */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 实例化 ES6 的 Promise 构造函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> _p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'aaa'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 我们可以观察 ES6 提供的 Promise 构造函数的 then 方法，看它到底要做什么。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 我们都知道 Promise 的 then 方法中有两个参数，分别对应的是 Promise 执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 成功后的要执行的函数 和 Promise 执行失败后要执行的函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那么对应状态的应该要执行的函数是马上就要执行吗？那不一定，这仅仅是表示</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 注册了一个 成功的回调函数 以及 失败的回调函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 因此它这些事情并不是马上就执行的，这是第一个点。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 第二点是我们知道就算它马上就要去执行，一定是要把它放到微队列里面的。所以</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 就算马上执行也仅仅是把这个函数放到微队列中执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那么应该如何产生一个微队列呢？我们可以写一个辅助函数 runMicroTask，来把</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 传递的任务添加到微队列中。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 当我们的 Promise 执行成功后，会执行成功的函数。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 当我们的 Promise 执行失败后，会执行失败的函数。</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  reason</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.94,words:1183},t:"封装操作微队列函数",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/04-then%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0.html",{loader:()=>y(()=>import("./04-then函数的实现.html-Coqirbep.js"),__vite__mapDeps([96,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 优化1. 记录 Promise 的三种状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> REJECTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 运行一个微队列任务，把传递的函数放到微队列中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> callback</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 需要添加到微队列执行的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // node 环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'undefined'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">nextTick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 把回调函数放到微队列里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动创建一个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 创建一个 MutationObserver 观察器实例，并传递一个回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 通过观察器的 observe 方法，监听 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    observer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      childList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 观察该元素内容的变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动去改变这个 div 元素的内部内容，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 相当于手动触发了 MutationObserver() 传入的 callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '1'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 其他情况</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 创建一个队列数组</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 立即执行该执行器并捕获 executor 执行过程的报错</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // Promise 执行过程中，如果报错，手动调用 reject() 函数。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 改变状态的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newState</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newValue</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态得到的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 在 Promise 中，只要状态一旦发生变化，当前状态就不能再次被修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newState</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newValue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 添加函数到队列中的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 每次添加的都是某一次 then 的参数中的成功回调和失败回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> then 需要执行的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> state</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> Promise 的状态，不同的状态下，then 需要执行不同的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> resolve</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 resolve，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 reject，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 往队列中添加一个对象，对象中包含了 then 的回调 和 执行回调时的 Promise 状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// then 方法要执行的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// Promise 为什么状态时，执行函数 executor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 成功时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 失败时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * Promise A+ 规范的 then 函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Funtion }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onFulfilled</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 成功后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onRejected</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 失败后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // then 函数内一定是返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 我们都知道 then 需要返回 Promise，那么这个返回的 Promise 什么时候</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 才能改变状态呢？即什么时候才调用 resolve 或 reject？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 我们应该要等待将来队列中去执行了 onFulfilled 或者 onRejected 时才能调用。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 因为我只有等待 onFulfilled 或者 onRejected 执行了才能知道这个 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 是成功的还是失败。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 那么又有问题了？队列中的 resolve 和 reject 从哪里获取呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 其实我们可以在添加队列时，把对应的 resolve 和 reject 也一起添加到队列中。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 把 then 成功和失败的回调都添加到队列中</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有成功才执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有失败才执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'pppp'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 执行了两次 then 后，我们可以发现 setTimeout() 中打印的 p 实例对象中，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// _handers 队列中有 4 个函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 所以，目前来说 then 方法的基本构造已经实现了，但是没还有没有实现执行队列中的方法。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {},</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  reason</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {},</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  reason</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/*************** 观察 ES6 中 Promise 的 then 的调用 ****************** */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> _p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 我们可以发现：then 函数可以多次调用，那么每一次调用呢是传入了一个函数进去。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那么现在第一个问题是：传入的这个函数是不是立即执行的？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 你可能会说：不是，它应该放到微队列中执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那是不是立即放到微队列中呢？其实也不是。为什么呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 如果说这些函数是立即放到微队列中，那一定是传入的这个函数先执行，它凭什么</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 要执行呢？因为它必须要等 new Promise() 中传入的回调函数执行成功后，它才</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 能执行。但是，观察这里的 new Promise() 中传入的回调函数，回调函数中是等</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 了 1s 之后才执行成功的。那现在再想想，这些 then 函数是马上执行的吗？甚至</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 都不会马上放到微队列中。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 我们认为 then 函数并不是马上执行，也不是马上把它的回调放到微队列。而是</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 等待状态确定了之后再去做这件事。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 那么 then 函数到底要做什么事？它做的事情其实就是把我们的函数放到一个队列，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 但是并不执行。每调用一次 then 就放一个函数到微队列中。等待将来状态确定了</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 之后，我们再一次去执行这个队列中的回调函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.99,words:1498},t:"Promise 的 then 函数",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/05-%E6%89%A7%E8%A1%8C%E9%98%9F%E5%88%97%E5%87%BD%E6%95%B0.html",{loader:()=>y(()=>import("./05-执行队列函数.html-D47zZa2f.js"),__vite__mapDeps([97,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 优化1. 记录 Promise 的三种状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> REJECTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 运行一个微队列任务，把传递的函数放到微队列中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> callback</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 需要添加到微队列执行的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // node 环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'undefined'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">nextTick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 把回调函数放到微队列里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动创建一个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 创建一个 MutationObserver 观察器实例，并传递一个回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 通过观察器的 observe 方法，监听 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    observer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      childList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 观察该元素内容的变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动去改变这个 div 元素的内部内容，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 相当于手动触发了 MutationObserver() 传入的 callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '1'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 其他情况</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 创建一个队列数组</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 立即执行该执行器并捕获 executor 执行过程的报错</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // Promise 执行过程中，如果报错，手动调用 reject() 函数。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 改变状态的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newState</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newValue</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态得到的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 在 Promise 中，只要状态一旦发生变化，当前状态就不能再次被修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newState</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newValue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 当改变了状态的时候，无论是成功还是失败，都得运行队列里的函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 添加函数到队列中的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 每次添加的都是某一次 then 的参数中的成功回调和失败回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> then 需要执行的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> state</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> Promise 的状态，不同的状态下，then 需要执行不同的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> resolve</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 resolve，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 reject，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 往队列中添加一个对象，对象中包含了 then 的回调 和 执行回调时的 Promise 状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// then 方法要执行的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// Promise 为什么状态时，执行函数 executor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 成功时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 失败时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 根据实际情况，执行队列里的每一个函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 那么什么时候去执行该方法呢？应该在 _stateChange() 里改变状态的时候执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 并且 then 方法中也需要执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 如果目前的状态仍然是 pending，说明任务仍在挂起，这种情况下无论如何</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 都不可能去执行队列的函数的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 因为要执行队列的函数，必须等待 Promise 的状态确定，才能知道要执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 哪种状态的回调函数。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 循环获取队列里的每一个函数，每次都拿第一项，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 其实在每一次的状态发生变化后，执行的 _runHandlers() 都会循环两次。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 因为添加队列时，是需要添加成功和失败的回调，也就是要添加两个元素到队列中，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 而每次遍历执行队列的函数，遍历的是那一次的状态发生变化时的成功和失败回调。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 而每次状态变化时，队列也只有两个函数，就是这一次变化时的成功和失败的回调。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 因为，一旦遍历完队列中某一次状态发生变化后的成功和失败的方法后，都会删除。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 队列会清空，提供给下一个 then 方法进行添加到队列中。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 每次执行第一项</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runOneHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 每判断处理一次队列的第一项函数，就把它删掉</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">shift</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 执行队列中的其中一个函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Object }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> handler</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 要处理的函数对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _runOneHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">handler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * Promise A+ 规范的 then 函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Funtion }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onFulfilled</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 成功后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onRejected</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 失败后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // then 函数内一定是返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 把 then 成功和失败的回调都添加到队列中</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有成功才执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有失败才执行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 在 then 方法内，不仅是要添加任务到队列里。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 还需要运行 _runHanlders() 去看看队列中有没有需要执行的任务，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 因为有可能 Promise 在调用 then 的时候，状态就已经发生变化了。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 比如说，这里的测试 Promise 代码中，不再用 setTimeout 改变状态，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 而是，直接通过 resolve() 去改变状态，那么当我们调用 then 的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 时候，状态就已经发生变化了。此时我们应该需要执行队列里的方法。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 就算此时状态没有改变，我们在此调用 _runHandlers() 也没有关系，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 因为 _runHandlers() 内部做了判断，状态没有发生变化是不会做任何操作的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // setTimeout(() =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  //   resolve('pppp')</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // }, 500)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'ppp'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {},</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  reason</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {},</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  reason</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.08,words:1525},t:"实现 Promise 的执行队列函数",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/06-%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81.html",{loader:()=>y(()=>import("./06-核心代码.html-CNXSV_bm.js"),__vite__mapDeps([98,1])),meta:{d:1724447679e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 优化1. 记录 Promise 的三种状态</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'pending'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'fulfilled'</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> REJECTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'rejected'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 运行一个微队列任务，把传递的函数放到微队列中</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> callback</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 需要添加到微队列执行的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // node 环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'undefined'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">nextTick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 把回调函数放到微队列里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动创建一个 div 元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'div'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 创建一个 MutationObserver 观察器实例，并传递一个回调</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 通过观察器的 observe 方法，监听 div 元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    observer</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      childList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 观察该元素内容的变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 手动去改变这个 div 元素的内部内容，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 相当于手动触发了 MutationObserver() 传入的 callback</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '1'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 其他情况</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 判断是否为 Promise 函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isPromiseLike</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这里不能简单地通过 instanceof 来判断 Promise，因为 Promise 的范畴是很广的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 在 ES6 里面它使用了一个构造函数来帮你构造建一个 Promise。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * ES6 之前也是有 Promise 的，它的时间顺序是这样的，先出来的是一套规范，叫做 Promise/A+ 规范，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这是一个社区标准。它告诉我们如何来处理异步场景。那时候 ES6 还没出来。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 它的意思就是说你只要满足这套标准，你就是一个 Promise，并且你们之间还可以进行互操作。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 而我们的 ES6 里面的那个构造函数，无非就是去实现了这个标准而已。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 因此我们这里要判断它是不是一个 Promise，就意味着要判断的目标并不是说要判断它是否为 ES6 的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * Promise 构造函数，而是它满不满足 Promise/A+ 规范。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 那么该如何判断是否满足该规范呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这个 Promise 可以是一个对象，也可以是一个函数，只要它带有一个属性 then 方法，并且这个属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * then 是一个方法。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // return value instanceof Promise</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这里 !! 的作用是让最终返回的结果是一个 Boolean 类型，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 因为 value 的值是 unfined 或者 0 等为 false 的值时，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 会直接返回 value 本身，这不是我们想要的。我们想要的是 Boolean。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !!</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">then</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 创建一个 Promise 实例对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 执行器，实例化这个类时，这个函数会立即执行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的初始化状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> undefined</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // Promise 的数据（保存的是成功或失败状态的数据）</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 创建一个队列数组</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     * 立即执行该执行器并捕获 executor 执行过程的报错</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">bind</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // Promise 执行过程中，如果报错，手动调用 reject() 函数。</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 改变状态的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newState</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> newValue</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 新的状态得到的数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 在 Promise 中，只要状态一旦发生变化，当前状态就不能再次被修改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newState</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> newValue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 当改变了状态的时候，无论是成功还是失败，都得运行队列里的函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务完成的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> data</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务完成时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 标记当前任务失败的函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 无论是完成还是失败，resolve 和 reject 方法实际上要做的是改变 Promise 的状态。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { any }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reason</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 表示任务失败时的相关数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 改变状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_changeState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reason</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 添加函数到队列中的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> then 需要执行的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { String }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> state</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> Promise 的状态，不同的状态下，then 需要执行不同的回调函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> resolve</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 resolve，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 让 then 函数返回的 Promise 调用 reject，改变 Pormise 状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 往队列中添加一个对象，对象中包含了 then 的回调 和 执行回调时的 Promise 状态</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// then 方法要执行的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// Promise 为什么状态时，执行函数 executor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 成功时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      reject</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> // 失败时要执行的改变状态函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 根据实际情况，执行队列里的每一个函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 状态发生变化 和 then 方法中都需要调用。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 循环获取队列里的每一个函数，每次都拿第一项</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 每次执行第一项</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runOneHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 每判断处理一次队列的第一项函数，就把它删掉</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">_handlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">shift</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 执行队列中的其中一个函数（核心代码）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Object }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> handler</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 要处理的函数对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  _runOneHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 把队列中的某一个函数，放到微队列中执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 如果当前 Promise 的状态 不等于 handler 所需要执行时的状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 不做任何处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">return</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 如果当前 Promise 的状态 等于 handler 所需要执行时的状态，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 但是在调用 then() 的时候没有传递对应的回调，也就是 hanlder 为 undefined。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 获取传递了参数，但是该参数不是一个函数，这些都是无效的传递。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 在这种情况下，需要进行 “状态穿透”。什么意思呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 如果说我们的 Promise 状态发生变化了，但是在 then 方法中没有传递对应的处理，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 或者说传递的是无效的处理，那么 then 方法返回的新 Promise 的状态和当前一致，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 并且新的 Promise 得到的数据也和当前的一致。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       */</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 判断当前状态，改变 then() 返回的 Promise 的状态和数据</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_state</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> FULFILLED</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">          ?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">          :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 剩下的就是正常的情况，也就是传递的是正常的函数，并且状态也发生了变化。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 这种情况下，当我们状态和 handler 里的状态一致时，就要执行对应状态的函数，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 并且 then() 返回的新 Promise 的状态取决于 then() 接收的回调的执行结果。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 如果 then() 接收的函数在执行过程中没有报错，那么这个回调就是成功的，回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 的数据就是通过函数内部 return 返回的结果。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       * 如果执行过程中报错了，那么它就是失败的，它的数据就是报错的原因。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">       */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">      try</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 执行 then 函数中接收的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * ！！注意：！！</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 如果是通过 handler.executor() 调用，那么会导致 executor 函数内部的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * this 指向 handler，这是不合适的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 如果我们通过在 _runOneHandler() 接收参数时，就把 handler 进行解构。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 这样，直接调用 executor() 时，this 就不会发生变化。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 并且，调用 executor() 时，是需要传参的，因为 then 函数接收的回调不管</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 是 onFulfilled 还是 onRejected 处理函数都有一个参数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 这个参数是什么呢？其实就是当前 Promise 改变状态后的数据。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 并且，executor 函数执行成功后，需要 return 成功后的数据给新的 Promise。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 所以，执行成功后，需要拿到返回的结果。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> executor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 如果是 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * ！！注意：！！</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 如果拿到的结果又是一个 Promise，那么我们 then 返回的新的 Promise 对象的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         * 状态和数据要和 res 的状态和数据要完全保持一致。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">isPromiseLike</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 如果返回的是 Promise，那么它一定有 then 方法，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 那么如果说返回的这个 Promise 执行成功了，就运行一下 then 函数要返回的 Promise 的 resolve 方法。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 如果说返回的这个 Promise 执行失败了，就运行一下 then 函数要返回的 Promise 的 reject 方法。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 这样就能保证获取到的 Promise 和 then 返回要返回的 Promise 状态和数据保持一致。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">          res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 如果调用过程成功，改变 Promise 的状态，并且拿到 executor 的返回结果，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          // 作为新的 Promise 的状态改变后的数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">          resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 如果调用过程中报错，改变 Promise 的状态，拿到错误的原因，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        // 作为新的 Promise 的状态改变后的数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * Promise A+ 规范的 then 函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Funtion }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onFulfilled</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 成功后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> { Function }</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onRejected</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 失败后的回调</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> 返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // then 函数内一定是返回一个新的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 把 then 成功和失败的回调都添加到队列中</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onFulfilled</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">FULFILLED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有成功才执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_pushHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">onRejected</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">REJECTED</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 表示这个函数只有失败才执行</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 执行队列的函数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">_runHandlers</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 测试我们的 Promise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'pppp'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> _p</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 如果函数执行成功，是需要返回一个数据给新的 Promise 的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // return 123</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 如果在回调中又返回一个 Promise 对象，这种情况下，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // _p 对象和 这里返回的 Promise 对象的状态和数据要保持一致。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MyPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // resolve('aaa')</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    reject</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'bbb'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">_p</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1500</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.85,words:2355},t:"完成封装 Promise 的核心代码",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BAPromise/",{loader:()=>y(()=>import("./index.html-5Q6hO-OQ.js"),__vite__mapDeps([99,1])),meta:{d:1723404065e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 判断是否为 Promise</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> isPromiseLike</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这里不能简单地通过 instanceof 来判断 Promise，因为 Promise 的范畴是很广的。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 在 ES6 里面它使用了一个构造函数来帮你构造建一个 Promise。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * ES6 之前也是有 Promise 的，它的时间顺序是这样的，先出来的是一套规范，叫做 Promise/A+ 规范，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这是一个社区标准。它告诉我们如何来处理异步场景。那时候 ES6 还没出来。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 它的意思就是说你只要满足这套标准，你就是一个 Promise，并且你们之间还可以进行互操作。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 而我们的 ES6 里面的那个构造函数，无非就是去实现了这个标准而已。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 因此我们这里要判断它是不是一个 Promise，就意味着要判断的目标并不是说要判断它是否为 ES6 的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * Promise 构造函数，而是它满不满足 Promise/A+ 规范。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 那么该如何判断是否满足该规范呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这个 Promise 可以是一个对象，也可以是一个函数，只要它带有一个属性 then 方法，并且这个属性</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * then 是一个方法。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // return value instanceof Promise</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这里 !! 的作用是让最终返回的结果是一个 Boolean 类型，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 因为 value 的值是 unfined 或者 0 等为 false 的值时，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 会直接返回 value 本身，这不是我们想要的。我们想要的是 Boolean。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !!</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">then</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.26,words:377},t:"判断是否为 Promise - PromiseLike",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%A8%A1%E6%8B%9F%E5%BE%AE%E9%98%9F%E5%88%97/",{loader:()=>y(()=>import("./index.html-z8Gxe_YD.js"),__vite__mapDeps([100,1])),meta:{d:1723404065e3,e:`
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 模拟添加到微队列</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> * 传入一个函数，如何把这个函数放到微队列中执行。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> runMicroTask</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 当然这里不可以这么简单的通过判断有无 Promise，Promise.resolve 添加到微队列，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 还要通过后续的判断。因为微队列跟环境无关，node 环境 和 浏览器环境都会用到。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">    Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">then</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 那么除了 Promise 之外还有什么方法能把函数添加到微队列中执行呢？</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 这里需要考虑两个环境：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 1. node 环境</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   *    node 环境中可以通过 Process.nextTick(fn) 模拟微队列</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   * 2. 浏览器环境 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   *    浏览器环境中可以通过 MutationObserver(fn) 模拟微队列</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> process</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'undefined'</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">nextTick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// node 环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 浏览器环境至少要有 MutationObserver 才能模拟微队列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> MutationObserver</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'function'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // MutationObserver 是一个观察器，可以通过它创建一个观察器对象。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 当被观察的某个东西发生改变的时候，就会运行传递的回调函数。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 并且这个回调函数是放到微队列中去执行的。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> ob</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> MutationObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 那么剩下事情就是要告诉这个观察器你要观察的是谁，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 你可以观察任何一个元素或者节点。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 比方说我们这里创建一个文本节点，文本节点的值传递一个 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> textNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">createTextNode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'1'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 观察这个文本节点</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    ob</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">textNode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      // 观察文本节点字符的变化，只要字符一变化就执行回调 fn</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">      characterData</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 接下来只要手动改变这个字符的内容就行了，这样就相当于我们手动触发了回调，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // 并把这个回调添加到了微队列中执行。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">    textNode</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '2'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 但是，也有可能前面两种情况都不通过，那就只能是浏览器版本很低 或者 node 版本很低。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这种情况情况也就无法支持微队列了，就只能通过 setTimeout 来模拟微队列了（尽管这不是微队列）。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.81,words:543},t:"模拟微队列",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3/%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/",{loader:()=>y(()=>import("./index.html-BnwCMvEY.js"),__vite__mapDeps([101,1])),meta:{d:1724447679e3,e:`
`,r:{minutes:.04,words:11},t:"各种文件对象类型的区别",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E6%8B%96%E6%8B%BDAPI%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E5%88%97%E8%A1%A8%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/",{loader:()=>y(()=>import("./index.html-CvKallFi.js"),__vite__mapDeps([102,1])),meta:{d:1724447679e3,e:`
<p>实现效果如下图所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;列表拖拽排序&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list-item"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list-item"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;2&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list-item"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;3&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list-item"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;4&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"list-item"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;5&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  &lt;!-- 引入自定义的封装的 flip 排序动画 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./SortFlip.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.96,words:1188},t:"列表拖拽排序",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E6%8B%96%E6%8B%BDAPI%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%96%E6%8B%BD/",{loader:()=>y(()=>import("./index.html-CNZ9CQM7.js"),__vite__mapDeps([103,1])),meta:{d:1724447679e3,e:`
<p>实现效果如下图所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"X-UA-Compatible"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"IE=edge"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;课程表拖拽&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"school-timetable-wrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 左侧学科列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 设置自定义属性 data-drop，表示该元素能够接收被拖拽元素。 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 这里设置为 move，表示这个元素只支持拖动时，鼠标状态为 move 的元素。 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"move"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"subject"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      &lt;!-- 元素设置 draggable 属性为 copy，让元素可以拖动 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">      &lt;!-- data-effect 设置自定义属性 effect，目的是为了在拖拽时，让鼠标显示对应的状态。这里默认是 copy --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color1 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;语文&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color2 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;数学&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color3 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;物理&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color4 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;生物&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color5 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;化学&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> draggable</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"true"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-effect</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"color6 subject-item"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;外语&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 右侧课程表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"school-timetable"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">thead</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> style</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"background-color: transparent; border: none;"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;星期一&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;星期二&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;星期三&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;星期四&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;星期五&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">th</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">thead</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tbody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rowspan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"4"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"time"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;上午&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          &lt;!-- 给每个 td 元素设置自定义属性 data-drop，表示该元素能够接收被拖拽元素。 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">          &lt;!-- 这里设置为 copy，表示这个 td 元素只支持拖动时，鼠标状态为 copy 的元素。 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tbody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tbody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rowspan</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"4"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"time"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;下午&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> data-drop</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"copy"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">td</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">tbody</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">table</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.92,words:2077},t:"课程表拖拽",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8B%96%E6%8B%BD/",{loader:()=>y(()=>import("./index.html-SvkNQKWe.js"),__vite__mapDeps([104,1])),meta:{d:1724447679e3,e:`
<p>拖拽效果如下所示：</p>
<p></p>
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> http-equiv</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"X-UA-Compatible"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"IE=edge"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;拖拽&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"box-wrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"box1"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"box"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;box1 - 可以拖拽&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"box2"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"box"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;box2 - 不可拖拽&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.08,words:624},t:"简单的拖拽",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E5%9F%BA%E7%A1%80%E5%81%9A%E6%B3%95/",{loader:()=>y(()=>import("./index.html-BK_SIKHz.js"),__vite__mapDeps([105,1])),meta:{d:1720303462e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;虚拟列表&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> onscroll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">handleScroll</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">()"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 模拟滚动条 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于撑开 container 容器，使 container 容器可以滚动 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-bar 盒子的高度：列表的总数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-bar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于渲染真实显示数量的列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度：真实渲染的列表项数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度 必然小于 container 的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.24,words:972},t:"虚拟列表 - 固定高度",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E6%B7%BB%E5%8A%A0%E4%B8%8A%E4%B8%8B%E7%BC%93%E5%86%B2%E5%8C%BA/",{loader:()=>y(()=>import("./index.html-DMpvzY2n.js"),__vite__mapDeps([106,1])),meta:{d:1720303462e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;虚拟列表（优化：添加上下缓冲区）&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> onscroll</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">handleScroll</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">()"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 模拟滚动条 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于撑开 container 容器，使 container 容器可以滚动 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-bar 盒子的高度：列表的总数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-bar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于渲染真实显示数量的列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度：真实渲染的列表项数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度 必然小于 container 的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.64,words:1091},t:"固定高度优化 - 添加上下缓冲区",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E6%B7%BB%E5%8A%A0%E8%8A%82%E6%B5%81/",{loader:()=>y(()=>import("./index.html-Bt14ShU7.js"),__vite__mapDeps([107,1])),meta:{d:1720303462e3,e:`
<p><code>index.html</code>：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"en"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"UTF-8"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"viewport"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"width=device-width, initial-scale=1.0"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;虚拟列表（优化：添加节流）&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"stylesheet"</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.css"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"container"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 模拟滚动条 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于撑开 container 容器，使 container 容器可以滚动 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-bar 盒子的高度：列表的总数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-bar"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 用于渲染真实显示数量的列表 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度：真实渲染的列表项数量 * 每个列表项的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- scroll-list 盒子的高度 必然小于 container 的高度 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"scroll-list"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"./index.js"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.81,words:1144},t:"固定高度优化 - 添加节流",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/API/forwardRef/",{loader:()=>y(()=>import("./index.html-DIdha7Ft.js"),__vite__mapDeps([108,1])),meta:{d:172522028e4,e:`
`,r:{minutes:0,words:1},t:"React.forwardRef",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/API/memo/",{loader:()=>y(()=>import("./index.html-CLk-hAN4.js"),__vite__mapDeps([109,1])),meta:{d:172522028e4,e:`
<p>作用：允许组件在 <code>props</code> 没有改变的情况下跳过重新渲染，也是常用来做 <strong>性能优化</strong> 的 API。</p>
<h2>React 组件默认的渲染机制</h2>
<p></p>
<blockquote>
<p>默认机制：<strong>顶层组件发生重新渲染，这个组件树的子级组件都会被重新渲染</strong>。</p>
<p>思考：如果 Son 组件本身并不需要重新渲染更新，是否存在浪费？</p>
</blockquote>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// memo</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 作用：允许组件在props没有改变的情况下跳过重新渲染</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">useState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'react'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Son</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'子组件被重新渲染了'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;this is son&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">forceUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'父组件重新渲染了'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Son</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> forceUpdate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">random</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">())</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;update&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> App</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.03,words:1209},t:"React.memo",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/Hook%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-CnN_9Z2G.js"),__vite__mapDeps([110,1])),meta:{d:1725652725e3,e:`
<h2>自定义 Hook 实现</h2>
<blockquote>
<p>概念：自定义 <strong>Hook</strong> 是以 <strong>use 开头的函数</strong>，通过自定义 <strong>Hook函数</strong> 可以用来 <strong>实现逻辑的封装和复用</strong>。</p>
</blockquote>
<p></p>
<p>按照上图所示，实现以下需求：</p>
<ol>
<li>左侧的图显示的是一个组件，组件内有一个盒子和一个按钮，当点击 <code>toggle</code> 按钮的时候，控制 <code>this is div</code> 盒子的显示和隐藏。</li>
<li>我们分别使用 <strong>不封装实现</strong>、<strong>封装自定义 Hook 实现</strong> 以及 <strong>抽离实现的通用逻辑</strong>。</li>
</ol>`,r:{minutes:2.35,words:704},t:"Hook 的基本使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useCallback/",{loader:()=>y(()=>import("./index.html-CsWJ0L4N.js"),__vite__mapDeps([111,1])),meta:{d:172522028e4,e:`
<blockquote>
<p>作用：<strong>在组件多次重新渲染的时候缓存函数</strong>，这也是一个常用来做 <strong>性能优化</strong> 的 Hook。</p>
</blockquote>
<h2>看个场景</h2>
<p>当父组件给子组件传递一个 <strong>引用类型 <code>prop</code></strong> 的时候，即使我们使用了 <strong><code>React.memo</code></strong> 函数依旧无法阻止 <strong>子组件</strong> 的渲染，其实传递 <code>prop</code> 的时候，往往传递一个回调函数更为常见，比如实现子传父，此时如果想要避免子组件渲染，可以使用 <code>useCallback</code> <strong>缓存</strong> <strong>回调函数</strong>。</p>`,r:{minutes:1.93,words:578},t:"useCallback",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useImperativeHandle/",{loader:()=>y(()=>import("./index.html-a33Mlv8q.js"),__vite__mapDeps([112,1])),meta:{d:1725051523e3,e:`
<p><a href="https://zh-hans.react.dev/reference/react/useImperativeHandle" target="_blank" rel="noopener noreferrer">useImperativeHandle</a> 是 React 中的一个 Hook，它能让你自定义由 <a href="https://zh-hans.react.dev/learn/manipulating-the-dom-with-refs" target="_blank" rel="noopener noreferrer">ref</a> 暴露出来的句柄。</p>`,r:{minutes:1.35,words:405},t:"useImperativeHandle",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useMemo/",{loader:()=>y(()=>import("./index.html-cAQxgMBK.js"),__vite__mapDeps([113,1])),meta:{d:172522028e4,e:`
<blockquote>
<p>作用：<a href="https://zh-hans.react.dev/reference/react/useMemo" target="_blank" rel="noopener noreferrer">useMemo</a> 是可以用来做 <strong>性能优化</strong> 的 Hook，它在每次重新渲染的时候能够缓存计算的结果。</p>
</blockquote>
<h2>看个场景</h2>
<p></p>
<p>上图中，我们本来的用意是想 <strong>基于 <code>count1</code> 的变化计算斐波那契数列之和</strong>，但是当我们修改 <strong><code>count2</code></strong> 状态的时候，斐波那契求和函数也会被执行，显然是一种浪费。</p>`,r:{minutes:1.61,words:483},t:"useMemo",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useReducer/",{loader:()=>y(()=>import("./index.html-CibSDjbq.js"),__vite__mapDeps([114,1])),meta:{d:1725652725e3,e:`
<p>作用：<a href="https://zh-hans.react.dev/reference/react/useReducer" target="_blank" rel="noopener noreferrer">useReducer</a> 和 <code>useState</code> 的作用类似，用来管理 <strong>相对复杂</strong> 的状态数据。</p>
<h2>基础使用</h2>
<ol>
<li>定义一个 <code>reducer</code> 函数（根据不同的 <code>action</code> 返回不同的新状态）。</li>
<li>在组件中调用 <code>useReducer</code>，并传入 <code>reducer</code> 函数和 <strong>状态的初始值</strong>。</li>
<li>事件发生时，通过 <code>dispatch</code> 函数分派一个 <code>action</code> 对象（通知 <code>reducer</code> 要返回哪个新状态并渲染UI）</li>
</ol>`,r:{minutes:1.37,words:411},t:"useReducer",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Redux/react-redux/",{loader:()=>y(()=>import("./index.html-CCHRmGcj.js"),__vite__mapDeps([115,1])),meta:{d:1723220393e3,e:`
<h2>Redux 与 React - 环境准备</h2>
<blockquote>
<p><code>Redux</code> 虽然是一个框架无关可以独立运行的插件，但是社区通常还是把它与 <code>React</code> 绑定在一起使用，以一个计数器案例体验一下 <code>Redux</code> + <code>React</code> 的基础使用。</p>
</blockquote>
<h3>1. 配套工具</h3>
<blockquote>
<p>在 React 中使用 redux，官方要求安装俩个其他插件 - Redux Toolkit 和 react-redux</p>
</blockquote>`,r:{minutes:6.13,words:1839},t:"react-redux",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Redux/redux/",{loader:()=>y(()=>import("./index.html-B3BjA8Tn.js"),__vite__mapDeps([116,1])),meta:{d:172522028e4,e:`
<h2>Redux 介绍</h2>
<blockquote>
<p><code>Redux</code> 是 <code>React</code> 最常用的集中状态管理工具，类似于 <code>Vue</code> 中的 <code>Pinia（Vuex）</code>，可以独立于框架运行。
作用：<strong>通过集中管理的方式管理应用的状态</strong>。</p>
</blockquote>
<p>
<strong>为什么要使用 Redux？</strong></p>
<ol>
<li>独立于组件，无视组件之间的层级关系，简化通信问题。</li>
<li>单项数据流清晰，易于定位 bug。</li>
<li>调试工具配套良好，方便调试。</li>
</ol>`,r:{minutes:2.86,words:858},t:"Redux 的使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%89%93%E5%8C%85%E5%90%8E%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E8%B7%AF%E5%BE%84%E5%92%8C%E8%B7%AF%E7%94%B1%E7%9A%84%E5%89%8D%E7%BC%80/",{loader:()=>y(()=>import("./index.html-CKFQz_U4.js"),__vite__mapDeps([117,1])),meta:{d:1720303462e3,e:`
<p>在 <code>vue2</code> 中，路由配置中的 <code>base</code> 和 <code>vue.config.js</code> 中的 <code>publicPath</code> 是特别容易混淆误解的。一旦没有搞清楚的话，就很容易出现本地开发的好好的，一旦更新到线上就各种访问不到。</p>
<p><code>/src/router/index.js</code>：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> routes</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [ </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 省略.... ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> VueRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  routes</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  base</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.65,words:2595},t:"vue 打包后资源加载路径和路由的前缀",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/React%E5%92%8CTypeScript/",{loader:()=>y(()=>import("./index.html-DuKvEOZC.js"),__vite__mapDeps([118,1])),meta:{d:172522028e4,e:`
<h2>useState 自动推导</h2>
<h3>简单场景</h3>
<blockquote>
<p>通常 <code>React</code> 会根据传入的 <code>useState</code> 的默认值来自动推导 <code>TS</code> 类型，不需要显式标注类型。</p>
<p>使用场景：一般适用于 <strong>明确的初始值</strong>。</p>
</blockquote>
<div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" data-title="tsx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">useState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "react"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // val 会被自动推断为布尔类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // setVal 方法调用时只能传入布尔类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">val</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">setVal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  setVal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 调用时就只能传入 boolean 类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // setVal(100) // 报错</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // list 会被自动推导为 number[] 类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">list</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">setList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">  setList</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 调用时，只能传入 number[] 类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // setList(['1', '2', '3']) // 报错</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;APP&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> App</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.08,words:1224},t:"React 和 TypeScript",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/React-Redux%E5%B0%8F%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-DwNoqJtm.js"),__vite__mapDeps([119,1])),meta:{d:1723220393e3,e:`
<h2>1. 案例演示</h2>
<p></p>
<blockquote>
<p>基本开发思路：使用 **RTK（Redux Toolkit）**来管理应用状态, 组件负责 数据渲染 和 <strong>dispatch action</strong>。</p>
</blockquote>
<h2>2. 准备并熟悉环境</h2>
<ol>
<li>克隆项目到本地（内置了基础静态组件和模版）- <strong>页面基础模板</strong> 在 <code>template</code> 分支，<strong>已完成的案例</strong> 在 <code>master</code> 分支。</li>
</ol>`,r:{minutes:13.38,words:4013},t:"# React-Redux 小案例",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-iV2XhLEz.js"),__vite__mapDeps([120,1])),meta:{d:172522028e4,e:`
<h2>React 介绍</h2>
<p>React 由 Meta 公司开发，是一个用于 构建 Web 和 原生交互界面的库</p>
<p></p>
<h2>React 的优势</h2>
<p>相较于传统基于 DOM 开发的优势</p>
<ol>
<li>组件化的开发方式</li>
<li>不错的性能</li>
</ol>
<p>相较于其它前端框架的优势</p>
<ol>
<li>丰富的生态</li>
<li>跨平台支持</li>
</ol>
<h2>React 的市场情况</h2>
<p>全球最流行，大厂必备</p>
<p></p>
<h2>开发环境创建</h2>
<p><code>create-react-app</code> 是一个快速创建 <code>React</code> 开发环境的工具，底层由 <code>Webpack</code> 构件，封装了配置细节，开箱即用
执行命令：</p>`,r:{minutes:15.24,words:4573},t:"React - 函数式组件基本使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/",{loader:()=>y(()=>import("./index.html-DsGPk4pW.js"),__vite__mapDeps([121,1])),meta:{d:172522028e4,e:`
<h2>组件是什么</h2>
<p>概念：一个组件就是一个用户界面的一部分，它可以有自己的逻辑和外观，组件之间可以互相嵌套，也可以多次复用。</p>
<p></p>
<h2>组件基础使用</h2>
<blockquote>
<p>在 React中，一个组件就是 <strong>首字母大写的函数</strong>，<strong>内部存放了 组件的逻辑 和 视图UI</strong>, 渲染组件只需要把组件当成标签书写即可</p>
</blockquote>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 1. 定义组件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;click me&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 2. 使用组件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">      {</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/* 自闭和 */</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">      {</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/* 成对标签 */</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.74,words:2622},t:"组件基础",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/",{loader:()=>y(()=>import("./index.html-Da-_87x2.js"),__vite__mapDeps([122,1])),meta:{d:172522028e4,e:`
<blockquote>
<p>概念：组件通信就是 <code>组件之间的数据传递</code>，根据组件嵌套关系的不同，有不同的通信手段和方法。</p>
<p>下图中，左侧是一个完整的 web 页面，右侧就是把左侧的 web 页面中各功能模块拆分成的一个个的组件。</p>
</blockquote>
<p></p>
<ol>
<li>A - B 父子通信</li>
<li>B - C 兄弟通信</li>
<li>A - E 跨层通信</li>
</ol>
<h2>父子通信 - 父传子</h2>
<p></p>
<blockquote>
<p>上图中，最外层有一个 App 组件，我们把它称之为 <strong>父组件</strong>，内容有一个 Son 组件，我们把它称之为 <strong>子组件</strong>。现在在 <strong>父组件</strong> 中有一个 name 变量，<strong>父组件</strong> 想要把这个 name 的数据传到 <strong>子组件</strong> 中，这就是一个 <strong>父子通信</strong>。</p>
</blockquote>`,r:{minutes:4.78,words:1433},t:"组件通信",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E5%8A%A8%E6%80%81%E8%8F%9C%E5%8D%95/",{loader:()=>y(()=>import("./index.html-BXluEdnV.js"),__vite__mapDeps([123,1])),meta:{d:172522028e4,e:`
<p>所谓的动态菜单就是根据当前登录的用户具有哪些有权限访问的路由页面，动态地在菜单中显示对应的菜单项。</p>
<p>例如 <strong>管理员</strong> 显示所有的菜单选项：</p>
<p></p>
<p>当我们切换到 <strong>游客</strong> 时，只有少量有权限的菜单选项：</p>
<p></p>
<h2>声明路由列表</h2>
<p>我们先在 <code>src/router/route.tsx</code> 中预先声明路由列表，这里的路由列表包含了所有的路由：</p>
<div class="language-tsx line-numbers-mode" data-highlighter="shiki" data-ext="tsx" data-title="tsx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'react'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> Loading</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '@/components/Loading'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75"> AuthRoute</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> '@/components/AuthRoute'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">Navigate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'react-router-dom'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 布局容器组件，所有路由页面均在布局组件内显示</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Layout</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/Layout'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Home</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/Home'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> NotFound</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/404'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path1</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path1'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path2</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path2'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path3</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path3'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path4</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path4'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path5</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path5'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> Path6</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'@/pages/path6'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> routes</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // 这个路由是用来作路由重定向的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">        {</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">/* 路由重定向 */</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Navigate</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> to</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/home'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Navigate</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/home'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">''</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'首页'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        index</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Home</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/path1'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">''</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面1'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path1'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        index</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path1"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/path2'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">''</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面2'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path2'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        index</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path2"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'/multiple-path'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'多路由页面'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Layout</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    children</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path3'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面3'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path3'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path4'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面4'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path4'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path4"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path5'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面5'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path5'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path5"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path6'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">        meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">title</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'路由页面6'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'path6'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> auth</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"path6"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Path6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">          &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">AuthRoute</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'*'</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 404 页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">hidden</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">    element</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> fallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Loading</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">NotFound</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.01,words:1502},t:"动态菜单",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-DZJoAUQm.js"),__vite__mapDeps([124,1])),meta:{d:172522028e4,e:`
<h2>路由快速上手</h2>
<h3>1. 什么是前端路由</h3>
<p>一个路径 <code>path</code> 对应一个 <strong>组件 <code>component</code></strong> 当我们在浏览器中访问一个 <code>path</code> 的时候，<code>path</code> 对应的 <strong>组件</strong> 会 <strong>在页面中进行渲染</strong>，如下图所示：</p>
<p></p>
<p>上图中，<strong><code>routes</code></strong> 表示一个路由列表，里边有两个路由，分别是 <code>/about</code> 和 <code>/article</code>，这两个路由对应的 <strong>组件</strong> 分别是 <code>About</code> 和 <code>Article</code>。</p>`,r:{minutes:6.53,words:1959},t:"路由",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E8%B7%AF%E7%94%B1%E6%9D%83%E9%99%90/",{loader:()=>y(()=>import("./index.html-B7M9AqQq.js"),__vite__mapDeps([125,1])),meta:{d:172522028e4,e:`
<p>路由权限在各种后台管理系统是是很常见的，路由权限的控制在 <code>Vue</code> 的项目中可以通过路由导航守卫来进行控制，那在 <code>React</code> 中应该怎么呢？<code>React</code> 可没有 <code>Vue</code> 那样的导航守卫，在 <code>React</code> 的函数式组件中，我们可以通过封装一个自定义的 <strong>高阶组件</strong>（HOC Component）来控制路由的跳转。</p>
<h2>封装高阶组件</h2>
<p>首先，新建 <code>/src/components/AuthRoute/index.tsx</code>，封装一个 <strong>高阶组件</strong>，用来控制路由组件的跳转，通过该组件可以在跳转路由页面前进行路由权限的判断：</p>`,r:{minutes:4.18,words:1255},t:"路由权限",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue.nextTick/",{loader:()=>y(()=>import("./index.html-Ct4vPS4V.js"),__vite__mapDeps([126,1])),meta:{d:1720980787e3,e:`
<p>我们可以先看下一 <a href="https://v2.cn.vuejs.org/v2/api/#vm-nextTick" target="_blank" rel="noopener noreferrer">官网</a> 对 <code>$nextTick</code> 的介绍和使用。</p>
<p><code>$nextTick</code> <strong>主要用于将回调延迟到下次 <code>DOM</code> 更新循环之后执行</strong>。在修改数据之后立即使用它，然后等待 <code>DOM</code> 更新。</p>
<p>它跟全局方法 <code>Vue.nextTick</code> 一样，不同的是回调的 <code>this</code> 自动绑定到调用它的实例上。</p>`,r:{minutes:2.5,words:749},t:"Vue.nextTick / vm.$nextTick 的使用",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue.set/",{loader:()=>y(()=>import("./index.html-cOcTLy-B.js"),__vite__mapDeps([127,1])),meta:{d:1722103122e3,e:`
<h2><a class="header-anchor" href="#vue-set-的基本使用"><span></span></a><a href="https://v2.cn.vuejs.org/v2/api/#Vue-set" target="_blank" rel="noopener noreferrer">Vue.set</a> 的基本使用</h2>
<p>语法：<code>Vue.set( target, propertyName/index, value )</code></p>
<ul>
<li>
<p><strong>参数</strong>：</p>
<ul>
<li><code>{Object | Array} target</code></li>
<li><code>{string | number} propertyName/index</code></li>
<li><code>{any} value</code></li>
</ul>
</li>
<li>
<p><strong>返回值</strong>：设置的值。</p>
</li>
<li>
<p><strong>作用</strong>：</p>
<p>由于在 <code>vue2</code> 中使用的 <strong>响应式</strong> <code>api</code> 采用的是 <code>defineProperty</code>，而这个 <code>api</code> 是有一定的缺陷的，它监听不到新增的对象属性，也监听不到数组长度的变化。</p>
<p>所以，这个 <code>set</code> 的作用就是：向响应式对象中添加一个 <code>property</code>，并确保这个新 <code>property</code> 同样是 <strong>响应式</strong> 的，且 <strong>触发视图更新</strong>。它必须用于向响应式对象上添加新 <code>property</code>，因为 <code>Vue</code> 无法探测普通的新增 <code>property</code>。</p>
</li>
<li>
<p><strong>用法</strong>：</p>
<p>修改对象的使用：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">obj</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改 obj 对象上的 key 属性，修改的值为 value</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><p>修改数组的使用：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B">Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">index</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">// 修改 arr 数组中 index 项的值为 value</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:3.02,words:905},t:"Vue.set / vm.$set 的使用和原理",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/",{loader:()=>y(()=>import("./index.html-CBW6TYgh.js"),__vite__mapDeps([128,1])),meta:{d:1720303462e3,e:`
<h3>前言</h3>
<blockquote>
<p>我们经常会见到这样的说法：<code>vue3</code> 的 <code>proxy</code> 的效率远远高于 <code>vue2</code> 的 <code>defineProperty</code>。</p>
<p>但是为什么呢？我们要搞清楚这个为什么，与其花时间去背一些八股文，还不如花同样的时间，从源码的角度把它们彻底的认识清楚。</p>
</blockquote>
<h3>Vue 响应式要做什么</h3>
<blockquote>
<p>首先我们要思考一个问题，<code>vue</code> 的响应式到底要做什么？</p>
<p>无非就是做两件事：</p>
<ol>
<li>当我们读取这个对象的属性的时候，我们要知道它被读取了，我们可能需要在读取的时候做一些事情。</li>
<li>当我们给这个对象的属性重新赋值的时候，我们也要知道它被赋值了，我们也可能需要在赋值的时候做一些事情。</li>
</ol>
<p>但是，仅仅是通过对这个 对象 进行 <strong>取值</strong> 或 <strong>赋值</strong> 操作，我们无法插手想要做的事情。</p>
</blockquote>`,r:{minutes:8.46,words:2539},t:"简单理解 defineProperty 和 Proxy",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E8%99%9A%E6%8B%9FDom%E5%92%8CDiff%E7%AE%97%E6%B3%95/",{loader:()=>y(()=>import("./index.html-D1jpuyyf.js"),__vite__mapDeps([129,1])),meta:{d:1720303462e3,e:`
<h2>snabbdom 简介</h2>
<ul>
<li>
<p><code>snabbdom</code> 是瑞典语单词，单词原意 “速度”。</p>
</li>
<li>
<p><code>snabbdom</code> 是著名的虚拟 <code>DOM</code> 库，是 <code>diff</code> 算法的鼻祖，<code>Vue</code> 源码借鉴了 <code>snabbdom</code>。</p>
</li>
<li>
<p>官方 <code>github</code>：https://github.com/snabbdom/snabbdom。</p>
</li>
<li>
<p>在 <code>github</code> 上的 <code>snabbdom</code> 源码是用 <code>TypeScript</code> 写的，<code>github</code> 上并不提供编译好的 <code>JavaScript</code> 版本。</p>
</li>
<li>
<p>如果要直接使用 <code>build</code> 出来的 <code>JavaScript</code> 版的 <code>snabbdom</code> 库，可以从 <code>npm</code> 上下载：</p>
</li>
</ul>`,r:{minutes:62.41,words:18724},t:"Vue2 虚拟 Dom 和 Diff 算法",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Token%E6%97%A0%E6%84%9F%E5%88%B7%E6%96%B0/",{loader:()=>y(()=>import("./index.html-2jGwfVdn.js"),__vite__mapDeps([130,1])),meta:{d:1724672656e3,e:`
<p>如何实现 <code>token</code> 的无感刷新，当我们要去聊这个话题的时候，一定要知道身处一个什么样的环境中，要聊这件事，一定是在 <strong>单点登录</strong> 的环境中，脱离了 <strong>单点登录</strong> 聊 <code>token</code> 的无感刷新没有意义。</p>
<p>现在我们不考虑什么叫 <strong>单点登录</strong>，也不去考虑 <code>token</code> 无感刷新的意义在哪。这里我们单单就聊什么是 <code>token</code> 的无感刷新以及如何实现它。</p>
<p>这件事其实主要工作在后端，跟前端的关系不大，前端在代码层面要不要做一些处理呢？肯定是要的，只是工作量其实很小。</p>`,r:{minutes:7.79,words:2338},t:"Token 的无感刷新",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%8A%A8%E6%80%81%E4%BE%A7%E8%BE%B9%E6%A0%8F/",{loader:()=>y(()=>import("./index.html-BvFDmoIG.js"),__vite__mapDeps([131,1])),meta:{d:1724434404e3,e:`
`,r:{minutes:.02,words:7},t:"Element Plus 动态侧边栏",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%85%A5%E5%8F%A3/",{loader:()=>y(()=>import("./index.html-Bba-xXKc.js"),__vite__mapDeps([132,1])),meta:{d:1724672656e3,e:`
`,r:{minutes:.02,words:5},t:"多系统入口",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9A%84%20TS%20%E7%B1%BB%E5%9E%8B/",{loader:()=>y(()=>import("./index.html-Rh9wfsoV.js"),__vite__mapDeps([133,1])),meta:{d:1720303462e3,e:`
<p>先来看以下代码：</p>
<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"formRef"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> :</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66">model</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">form</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- 省略其他组件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    &lt;!-- ....其它表单组件 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">el-form</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "vue"</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">ElForm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'element-plus'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defineOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'GetComInstance'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> form</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.3,words:1289},t:"获取组件的 TS 类型",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E4%BC%A0%E5%8F%82/",{loader:()=>y(()=>import("./index.html-BtvJvVK4.js"),__vite__mapDeps([134,1])),meta:{d:1720303462e3,e:`
<h2>前言</h2>
<p>我们都知道在 <code>vue</code> 中，可以通过计算属性 <code>computed</code> 来进行计算，并且 <code>computed</code> 是依赖于缓存的。只要依赖的数据不发生变化，每次调用 <code>computed</code> 都是拿的上一次的计算的缓存结果。</p>
<p>好了，现在有个疑问，计算属性能传参吗？</p>
<p>有人可能会说当然可以，只需要在 <code>computed</code> 内部返回一个函数，并且通过这个内部返回的函数来进行参数的接收，如下所示：</p>
<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">computed</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> 'vue'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> computed</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.53,words:2858},t:"计算属性传参",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E6%8B%A6%E6%88%AA%20v-model%20%E8%BF%9B%E8%A1%8C%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/",{loader:()=>y(()=>import("./index.html--XXlX1mt.js"),__vite__mapDeps([135,1])),meta:{d:1720303462e3,e:`
<h2>前言</h2>
<p>我们在封装表单组件的时候，我们肯定会用到 <code>v-model</code>，如下图所示：</p>
<p></p>
<p>这里有一个 <strong>父组件</strong> 和 一个 <strong>子组件</strong>，<strong>父组件</strong> 里边有一些数据，我希望把这些数据通过 <code>v-model</code> 的形式传递给 <strong>子组件</strong>，这是没有问题的。</p>
<p>因为我们都知道 <code>v-model</code> 实际上就是一个 <strong>语法糖</strong>，它本质上是传递了一个 <code>modelValue</code> 的属性值给到了 <strong>子组件</strong>，当 <strong>子组件</strong> 想要更改这个数据的时候，<strong>子组件</strong> 不能直接更改，因为直接更改就打破了 <strong>单项数据流</strong> 了。</p>`,r:{minutes:19.4,words:5821},t:"计算属性拦截 v-model 进行双向绑定",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue3%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/",{loader:()=>y(()=>import("./index.html-B0RJbyG4.js"),__vite__mapDeps([136,1])),meta:{d:1720303462e3,e:`
<ul>
<li>2020年9月18日，<code>Vue.js</code>发布版<code>3.0</code>版本，代号：<code>One Piece</code>（n</li>
<li>经历了：<a href="https://github.com/vuejs/core/commits/main" target="_blank" rel="noopener noreferrer">4800+次提交</a>、<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noopener noreferrer">40+个RFC</a>、<a href="https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+" target="_blank" rel="noopener noreferrer">600+次PR</a>、<a href="https://github.com/vuejs/core/graphs/contributors" target="_blank" rel="noopener noreferrer">300+贡献者</a></li>
<li>官方发版地址：<a href="https://github.com/vuejs/core/releases/tag/v3.0.0" target="_blank" rel="noopener noreferrer">Release v3.0.0 One Piece · vuejs/core</a></li>
<li>截止2023年10月，最新的公开版本为：<code>3.3.4</code></li>
</ul>`,r:{minutes:36.68,words:11005},t:"1. Vue3简介",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/",{loader:()=>y(()=>import("./index.html-Cg9Bd7qO.js"),__vite__mapDeps([137,1])),meta:{d:1720303462e3,e:`
<h3>前言</h3>
<blockquote>
<p>我们经常会见到这样的说法：<code>vue3</code> 的 <code>proxy</code> 的效率远远高于 <code>vue2</code> 的 <code>defineProperty</code>。</p>
<p>但是为什么呢？我们要搞清楚这个为什么，与其花时间去背一些八股文，还不如花同样的时间，从源码的角度把它们彻底的认识清楚。</p>
</blockquote>
<h3>Vue 响应式要做什么</h3>
<blockquote>
<p>首先我们要思考一个问题，<code>vue</code> 的响应式到底要做什么？</p>
<p>无非就是做两件事：</p>
<ol>
<li>当我们读取这个对象的属性的时候，我们要知道它被读取了，我们可能需要在读取的时候做一些事情。</li>
<li>当我们给这个对象的属性重新赋值的时候，我们也要知道它被赋值了，我们也可能需要在赋值的时候做一些事情。</li>
</ol>
<p>但是，仅仅是通过对这个 对象 进行 <strong>取值</strong> 或 <strong>赋值</strong> 操作，我们无法插手想要做的事情。</p>
</blockquote>`,r:{minutes:8.46,words:2539},t:"简单理解 defineProperty 和 Proxy",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E8%99%9A%E6%8B%9F%20Dom%20%E5%92%8C%20Diff%20%E7%AE%97%E6%B3%95/",{loader:()=>y(()=>import("./index.html-DD7yDuAI.js"),__vite__mapDeps([138,1])),meta:{d:1720303462e3,e:`
`,r:{minutes:.03,words:8},t:"Vue3 虚拟 Dom 和 Diff 算法",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E6%9D%83%E9%99%90%E7%9A%84%E7%BA%A7%E5%88%AB/",{loader:()=>y(()=>import("./index.html-Duqg-H0U.js"),__vite__mapDeps([139,1])),meta:{d:1724532946e3,e:`
<p>权限控制一般有三个级别：</p>
<ol>
<li>页面级权限。
<ul>
<li>这是大部分前端遇到的级别。页面级的权限控制起来还是比较简单的，只需要依靠一些路由守卫就可以了。</li>
<li>这样的代码是不会为你那些页面组件带来任何侵入性。</li>
<li>什么是侵入性？就是你写页面组件的时候，是完全不需要考虑这个用户有没有这个权限，这些事情通通在路由级别就处理好了。</li>
<li>你没有这个权限就看不到这个菜单，也进入不了这个页面。</li>
</ul>
</li>
<li>组件级权限。
<ul>
<li>比页面级权限更细的就是组件级权限。</li>
<li>组件级权限就是不管有没有这个权限，你都能看到这个页面，但是不同权限的人看到页面里边的内容会有些差别。</li>
<li>比方说有一个按钮，如果你没有权限，那么就看不到，或者这个按钮被禁用等等。</li>
<li>组件级别权限就会产生一些侵入性了。就是在你编写页面的这个小组件的时候，你得考虑到权限的情况，它会影响到你组件的代码。</li>
</ul>
</li>
<li>代码级/函数级权限。
<ul>
<li>这种权限一般遇到的比较少，这种级别就更细腻了。它是要精确到函数的。</li>
<li>哪些权限的人可以调用这个函数，哪些人不能调用。或者不同权限的人调用这个函数会产生不同的结果。</li>
</ul>
</li>
</ol>`,r:{minutes:1.35,words:405},t:"权限控制的级别",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E7%BB%84%E4%BB%B6%E7%BA%A7%E6%9D%83%E9%99%90/",{loader:()=>y(()=>import("./index.html-CU1u9egG.js"),__vite__mapDeps([140,1])),meta:{d:1724532946e3,e:`
<p>组件级这一块我们能做的事其实不多，我们要做的方向其实就是尽量地减少它的侵入性。就是不要让权限代码污染到我们写的组件。</p>
<p>能不能做到呢？那还是要看情况，如果说权限和组件的关联使用的是一种比较统一的方式，比方说有这个权限就能看得见，没有这个权限就看不见，它只会影响组件的可见度、或者是一些别的统一状态的话，那么这个侵入性还能减少。</p>
<p>如果说不是这样的，比方说它不是看得见或看不见的区别，而是点击过后要处理不同的逻辑，那就麻烦些了。我们就很难减少它的侵入性。</p>
<p>所以，这一块我们一般只能做一些简单的处理。</p>
<p>比方说以下的例子中，根据不同的角色展示不同的按钮组件。以下例子中，权限只是影响了组件的可见度，所以我们可以做一个自定义的指令或者做一个组件来实现。</p>`,r:{minutes:2.03,words:610},t:"组件级权限",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E6%9D%83%E9%99%90/",{loader:()=>y(()=>import("./index.html-B9hN3coe.js"),__vite__mapDeps([141,1])),meta:{d:1724266263e3,e:`
<h2>两种实现方式</h2>
<p>我们在 <code>vue</code> 项目的后台管理系统中，一定会遇到页面路由权限的问题，页面路由权限一般可以有两种做法：</p>
<ol>
<li>前端提前声明动态路由列表并配置对应的路由权限码，然后用户跳转路由页面的时候通过接口获取用户信息，拿到用户信息中的所有路由权限码和本地预先声明的动态路由列表进行过滤筛选，把该用户有权限访问的路由过滤出来。然后动态生成路由记录。</li>
<li>后端直接返回用户所有有权限访问的路由配置信息，前端根据这些路由配置信息进行路由列表的动态生成路由记录。</li>
</ol>
<p>页面路由权限一般搭配 <a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html" target="_blank" rel="noopener noreferrer">路由导航守卫</a> 来实现的。路由导航守卫有好几种，一般使用的是 <a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E5%89%8D%E7%BD%AE%E5%AE%88%E5%8D%AB" target="_blank" rel="noopener noreferrer">全局前置守卫</a>。</p>`,r:{minutes:9.31,words:2793},t:"页面路由权限",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/resize/",{loader:()=>y(()=>import("./index.html-6T_L_CSj.js"),__vite__mapDeps([142,1])),meta:{d:1724602487e3,e:`
<h2>前言</h2>
<p>假设我们有这么一个指令 <code>v-size</code> ，在 <code>vue</code> 的模板元素中使用，并且给它传递一个回调函数，它就会自动帮我们监听这个元素的尺寸变化，尺寸变化之后，它就会运行这个回调函数 <code>handleSizeChange</code>，并且把一些尺寸信息以函数参数的形式返回，让我们处理后续的事情：</p>
<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"com-directives"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> v-size</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">handleSizeChange</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF">"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"ts"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">defineOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">'DirectiveView'</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> handleSizeChange</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  // console.log(e) // 打印尺寸信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.79,words:1737},t:"自定义 resize 指令",y:"a"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/",{loader:()=>y(()=>import("./index.html-CjLjKYQF.js"),__vite__mapDeps([143,1])),meta:{d:1724602487e3,e:`
`,r:{minutes:.03,words:10},t:"自定义图片懒加载指令",y:"a"}}],["/404.html",{loader:()=>y(()=>import("./404.html-BaQrO9R0.js"),__vite__mapDeps([144,1])),meta:{t:""}}],["/%E5%90%8E%E7%AB%AF/",{loader:()=>y(()=>import("./index.html-CgyLAE9O.js"),__vite__mapDeps([145,1])),meta:{t:"后端"}}],["/%E5%89%8D%E7%AB%AF/Browser/",{loader:()=>y(()=>import("./index.html-s0LggCaJ.js"),__vite__mapDeps([146,1])),meta:{t:"Browser"}}],["/%E5%89%8D%E7%AB%AF/",{loader:()=>y(()=>import("./index.html-mrBF0Zgs.js"),__vite__mapDeps([147,1])),meta:{t:"前端"}}],["/%E5%89%8D%E7%AB%AF/TypeScript/",{loader:()=>y(()=>import("./index.html-BZW9wx3T.js"),__vite__mapDeps([148,1])),meta:{t:"Type Script"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/",{loader:()=>y(()=>import("./index.html-BeFsTr1p.js"),__vite__mapDeps([149,1])),meta:{t:"前端三件套"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/",{loader:()=>y(()=>import("./index.html-C2Peh6ER.js"),__vite__mapDeps([150,1])),meta:{t:"工程化"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/",{loader:()=>y(()=>import("./index.html-D2p89VXf.js"),__vite__mapDeps([151,1])),meta:{t:"Vite"}}],["/%E5%89%8D%E7%AB%AF/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",{loader:()=>y(()=>import("./index.html-DA2XNQ65.js"),__vite__mapDeps([152,1])),meta:{t:"性能优化"}}],["/%E5%90%8E%E7%AB%AF/NodeJS/",{loader:()=>y(()=>import("./index.html-Coc6X0Vd.js"),__vite__mapDeps([153,1])),meta:{t:"Node JS"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/",{loader:()=>y(()=>import("./index.html-B3daBjCg.js"),__vite__mapDeps([154,1])),meta:{t:"前端"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/",{loader:()=>y(()=>import("./index.html-BWgQld8z.js"),__vite__mapDeps([155,1])),meta:{t:"面试题"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/",{loader:()=>y(()=>import("./index.html-CqQB6nCf.js"),__vite__mapDeps([156,1])),meta:{t:"CSS"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-BLnUaX7j.js"),__vite__mapDeps([157,1])),meta:{t:"综合案例"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-C0uELPy8.js"),__vite__mapDeps([158,1])),meta:{t:"Canvas的使用"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/",{loader:()=>y(()=>import("./index.html-D4OWnErr.js"),__vite__mapDeps([159,1])),meta:{t:"Canvas"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/",{loader:()=>y(()=>import("./index.html-BBZxL1aS.js"),__vite__mapDeps([160,1])),meta:{t:"图形化展示"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/",{loader:()=>y(()=>import("./index.html-BUWj3ytS.js"),__vite__mapDeps([161,1])),meta:{t:"SVG"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/",{loader:()=>y(()=>import("./index.html-btVN-CPB.js"),__vite__mapDeps([162,1])),meta:{t:"Webpack"}}],["/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/",{loader:()=>y(()=>import("./index.html-CK9NtdNl.js"),__vite__mapDeps([163,1])),meta:{t:"Webpack5"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/",{loader:()=>y(()=>import("./index.html-Cg3R7JHu.js"),__vite__mapDeps([164,1])),meta:{t:"React"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/",{loader:()=>y(()=>import("./index.html-yTmCZMy2.js"),__vite__mapDeps([165,1])),meta:{t:"框架"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/ReactNative/",{loader:()=>y(()=>import("./index.html-Dr8ABDyx.js"),__vite__mapDeps([166,1])),meta:{t:"React Native"}}],["/%E5%90%8E%E7%AB%AF/NodeJS/EggJS/",{loader:()=>y(()=>import("./index.html-fPMaHWGc.js"),__vite__mapDeps([167,1])),meta:{t:"Egg JS"}}],["/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/",{loader:()=>y(()=>import("./index.html-C4PDjKZI.js"),__vite__mapDeps([168,1])),meta:{t:"框架"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/Flex%E5%B8%83%E5%B1%80/",{loader:()=>y(()=>import("./index.html-CQ9-7aOh.js"),__vite__mapDeps([169,1])),meta:{t:"Flex布局"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/SCSS/",{loader:()=>y(()=>import("./index.html-BPoZvoPN.js"),__vite__mapDeps([170,1])),meta:{t:"SCSS"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-B5l2Uewy.js"),__vite__mapDeps([171,1])),meta:{t:"代码和小案例"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/",{loader:()=>y(()=>import("./index.html-BhYeuDCn.js"),__vite__mapDeps([172,1])),meta:{t:"Java Script"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/",{loader:()=>y(()=>import("./index.html-BAgKrr2p.js"),__vite__mapDeps([173,1])),meta:{t:"原理和基础"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/Excel/",{loader:()=>y(()=>import("./index.html-BT-T6-es.js"),__vite__mapDeps([174,1])),meta:{t:"Excel"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/PDF/",{loader:()=>y(()=>import("./index.html-DqEBEUG4.js"),__vite__mapDeps([175,1])),meta:{t:"PDF"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/",{loader:()=>y(()=>import("./index.html-CsoySTUF.js"),__vite__mapDeps([176,1])),meta:{t:"Web API"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",{loader:()=>y(()=>import("./index.html-BygxmxB6.js"),__vite__mapDeps([177,1])),meta:{t:"大文件上传"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/",{loader:()=>y(()=>import("./index.html-CKqUbm8T.js"),__vite__mapDeps([178,1])),meta:{t:"虚拟列表"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%A7%86%E9%A2%91%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-B1kcmHu2.js"),__vite__mapDeps([179,1])),meta:{t:"视频相关"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%BD%AE%E6%92%AD%E5%9B%BE/",{loader:()=>y(()=>import("./index.html-CqBvn0Jx.js"),__vite__mapDeps([180,1])),meta:{t:"轮播图"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%A1%B5%E9%9D%A2%E9%80%82%E9%85%8D/",{loader:()=>y(()=>import("./index.html-DQ1XTmNy.js"),__vite__mapDeps([181,1])),meta:{t:"页面适配"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-ck84Jh0k.js"),__vite__mapDeps([182,1])),meta:{t:"二维案例"}}],["/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/SVG%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-BXg-gWlD.js"),__vite__mapDeps([183,1])),meta:{t:"SVG的基本使用"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/",{loader:()=>y(()=>import("./index.html-DLH51xjY.js"),__vite__mapDeps([184,1])),meta:{t:"微信小程序"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/",{loader:()=>y(()=>import("./index.html-BhQCc6Ey.js"),__vite__mapDeps([185,1])),meta:{t:"小程序"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/UniApp/",{loader:()=>y(()=>import("./index.html-Dp8Ur8H-.js"),__vite__mapDeps([186,1])),meta:{t:"Uni App"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/",{loader:()=>y(()=>import("./index.html-CEsVTQjR.js"),__vite__mapDeps([187,1])),meta:{t:"跨平台"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/",{loader:()=>y(()=>import("./index.html-CAdTYG3W.js"),__vite__mapDeps([188,1])),meta:{t:"手写 Promise"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-D3liQiQ3.js"),__vite__mapDeps([189,1])),meta:{t:"Promise相关"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-XgS3SdaE.js"),__vite__mapDeps([190,1])),meta:{t:"文件相关"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E6%8B%96%E6%8B%BDAPI%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/",{loader:()=>y(()=>import("./index.html-BULUN6DY.js"),__vite__mapDeps([191,1])),meta:{t:"拖拽 API实现拖拽"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-DFajMh7n.js"),__vite__mapDeps([192,1])),meta:{t:"拖拽相关"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/",{loader:()=>y(()=>import("./index.html-DXav2DEU.js"),__vite__mapDeps([193,1])),meta:{t:"鼠标事件实现拖拽"}}],["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/",{loader:()=>y(()=>import("./index.html-DbfPg2Gt.js"),__vite__mapDeps([194,1])),meta:{t:"固定高度"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/API/",{loader:()=>y(()=>import("./index.html-BGa1_jvR.js"),__vite__mapDeps([195,1])),meta:{t:"API"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/",{loader:()=>y(()=>import("./index.html-DHDbp8MR.js"),__vite__mapDeps([196,1])),meta:{t:"React18"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/",{loader:()=>y(()=>import("./index.html-DYqcsCGV.js"),__vite__mapDeps([197,1])),meta:{t:"Hooks"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Redux/",{loader:()=>y(()=>import("./index.html-rXbRx0JS.js"),__vite__mapDeps([198,1])),meta:{t:"Redux"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-JVu_yna9.js"),__vite__mapDeps([199,1])),meta:{t:"代码和小案例"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/",{loader:()=>y(()=>import("./index.html-Cce6oiax.js"),__vite__mapDeps([200,1])),meta:{t:"Vue2"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/",{loader:()=>y(()=>import("./index.html-DvHcJ-lC.js"),__vite__mapDeps([201,1])),meta:{t:"Vue"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/",{loader:()=>y(()=>import("./index.html-D98YCoH2.js"),__vite__mapDeps([202,1])),meta:{t:"基本使用"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-YAMmaiNX.js"),__vite__mapDeps([203,1])),meta:{t:"代码和小案例"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/",{loader:()=>y(()=>import("./index.html-D9JPeoyB.js"),__vite__mapDeps([204,1])),meta:{t:"路由"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/",{loader:()=>y(()=>import("./index.html--yBWgNh0.js"),__vite__mapDeps([205,1])),meta:{t:"原理和基础"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-CvtBXOsU.js"),__vite__mapDeps([206,1])),meta:{t:"代码和小案例"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/",{loader:()=>y(()=>import("./index.html-CqU4KV4y.js"),__vite__mapDeps([207,1])),meta:{t:"Vue3"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/",{loader:()=>y(()=>import("./index.html-IIox4XVO.js"),__vite__mapDeps([208,1])),meta:{t:"原理和基础"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/",{loader:()=>y(()=>import("./index.html-BN7ohymx.js"),__vite__mapDeps([209,1])),meta:{t:"权限相关"}}],["/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/",{loader:()=>y(()=>import("./index.html-gnd4UerU.js"),__vite__mapDeps([210,1])),meta:{t:"自定义指令"}}],["/category/",{loader:()=>y(()=>import("./index.html-BUCDev9a.js"),__vite__mapDeps([211,1])),meta:{t:"分类",I:!1}}],["/category/javascript/",{loader:()=>y(()=>import("./index.html-DwuTxlX7.js"),__vite__mapDeps([212,1])),meta:{t:"JavaScript 分类",I:!1}}],["/category/javascript-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/",{loader:()=>y(()=>import("./index.html-bfKSISIP.js"),__vite__mapDeps([213,1])),meta:{t:"Javascript 综合案例 分类",I:!1}}],["/category/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",{loader:()=>y(()=>import("./index.html-Cup8EHJr.js"),__vite__mapDeps([214,1])),meta:{t:"文件上传 分类",I:!1}}],["/tag/",{loader:()=>y(()=>import("./index.html-CAMiCVl4.js"),__vite__mapDeps([215,1])),meta:{t:"标签",I:!1}}],["/article/",{loader:()=>y(()=>import("./index.html-D6nkAP45.js"),__vite__mapDeps([216,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>y(()=>import("./index.html-DJYl4NMT.js"),__vite__mapDeps([217,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>y(()=>import("./index.html-DT79RwbG.js"),__vite__mapDeps([218,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.4.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const va=typeof document<"u";function Kc(i){return i.__esModule||i[Symbol.toStringTag]==="Module"}const Bi=Object.assign;function It(i,s){const a={};for(const n in s){const t=s[n];a[n]=As(t)?t.map(i):i(t)}return a}const Xa=()=>{},As=Array.isArray,Qk=/#/g,Yc=/&/g,Qc=/\//g,Xc=/=/g,Zc=/\?/g,Xk=/\+/g,io=/%5B/g,so=/%5D/g,Zk=/%5E/g,ao=/%60/g,ip=/%7B/g,no=/%7C/g,sp=/%7D/g,to=/%20/g;function zl(i){return encodeURI(""+i).replace(no,"|").replace(io,"[").replace(so,"]")}function lo(i){return zl(i).replace(ip,"{").replace(sp,"}").replace(Zk,"^")}function nl(i){return zl(i).replace(Xk,"%2B").replace(to,"+").replace(Qk,"%23").replace(Yc,"%26").replace(ao,"`").replace(ip,"{").replace(sp,"}").replace(Zk,"^")}function eo(i){return nl(i).replace(Xc,"%3D")}function ho(i){return zl(i).replace(Qk,"%23").replace(Zc,"%3F")}function ko(i){return i==null?"":ho(i).replace(Qc,"%2F")}function kn(i){try{return decodeURIComponent(""+i)}catch{}return""+i}const po=/\/$/,ro=i=>i.replace(po,"");function Ot(i,s,a="/"){let n,t={},l="",e="";const k=s.indexOf("#");let p=s.indexOf("?");return k<p&&k>=0&&(p=-1),p>-1&&(n=s.slice(0,p),l=s.slice(p+1,k>-1?k:s.length),t=i(l)),k>-1&&(n=n||s.slice(0,k),e=s.slice(k,s.length)),n=Eo(n??s,a),{fullPath:n+(l&&"?")+l+e,path:n,query:t,hash:kn(e)}}function co(i,s){const a=s.query?i(s.query):"";return s.path+(a&&"?")+a+(s.hash||"")}function eh(i,s){return!s||!i.toLowerCase().startsWith(s.toLowerCase())?i:i.slice(s.length)||"/"}function oo(i,s,a){const n=s.matched.length-1,t=a.matched.length-1;return n>-1&&n===t&&Pa(s.matched[n],a.matched[t])&&ap(s.params,a.params)&&i(s.query)===i(a.query)&&s.hash===a.hash}function Pa(i,s){return(i.aliasOf||i)===(s.aliasOf||s)}function ap(i,s){if(Object.keys(i).length!==Object.keys(s).length)return!1;for(const a in i)if(!Bo(i[a],s[a]))return!1;return!0}function Bo(i,s){return As(i)?hh(i,s):As(s)?hh(s,i):i===s}function hh(i,s){return As(s)?i.length===s.length&&i.every((a,n)=>a===s[n]):i.length===1&&i[0]===s}function Eo(i,s){if(i.startsWith("/"))return i;if(!i)return s;const a=s.split("/"),n=i.split("/"),t=n[n.length-1];(t===".."||t===".")&&n.push("");let l=a.length-1,e,k;for(e=0;e<n.length;e++)if(k=n[e],k!==".")if(k==="..")l>1&&l--;else break;return a.slice(0,l).join("/")+"/"+n.slice(e).join("/")}const Ps={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var pn;(function(i){i.pop="pop",i.push="push"})(pn||(pn={}));var Za;(function(i){i.back="back",i.forward="forward",i.unknown=""})(Za||(Za={}));function go(i){if(!i)if(va){const s=document.querySelector("base");i=s&&s.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),ro(i)}const yo=/^[^#]+#/;function Ao(i,s){return i.replace(yo,"#")+s}function uo(i,s){const a=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:s.behavior,left:n.left-a.left-(s.left||0),top:n.top-a.top-(s.top||0)}}const gt=()=>({left:window.scrollX,top:window.scrollY});function vo(i){let s;if("el"in i){const a=i.el,n=typeof a=="string"&&a.startsWith("#"),t=typeof a=="string"?n?document.getElementById(a.slice(1)):document.querySelector(a):a;if(!t)return;s=uo(t,i)}else s=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(s.left!=null?s.left:window.scrollX,s.top!=null?s.top:window.scrollY)}function kh(i,s){return(history.state?history.state.position-s:-1)+i}const tl=new Map;function Fo(i,s){tl.set(i,s)}function fo(i){const s=tl.get(i);return tl.delete(i),s}let mo=()=>location.protocol+"//"+location.host;function np(i,s){const{pathname:a,search:n,hash:t}=s,l=i.indexOf("#");if(l>-1){let k=t.includes(i.slice(l))?i.slice(l).length:1,p=t.slice(k);return p[0]!=="/"&&(p="/"+p),eh(p,"")}return eh(a,i)+n+t}function Co(i,s,a,n){let t=[],l=[],e=null;const k=({state:o})=>{const B=np(i,location),u=a.value,v=s.value;let m=0;if(o){if(a.value=B,s.value=o,e&&e===u){e=null;return}m=v?o.position-v.position:0}else n(B);t.forEach(f=>{f(a.value,u,{delta:m,type:pn.pop,direction:m?m>0?Za.forward:Za.back:Za.unknown})})};function p(){e=a.value}function r(o){t.push(o);const B=()=>{const u=t.indexOf(o);u>-1&&t.splice(u,1)};return l.push(B),B}function d(){const{history:o}=window;o.state&&o.replaceState(Bi({},o.state,{scroll:gt()}),"")}function c(){for(const o of l)o();l=[],window.removeEventListener("popstate",k),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",k),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:p,listen:r,destroy:c}}function ph(i,s,a,n=!1,t=!1){return{back:i,current:s,forward:a,replaced:n,position:window.history.length,scroll:t?gt():null}}function bo(i){const{history:s,location:a}=window,n={value:np(i,a)},t={value:s.state};t.value||l(n.value,{back:null,current:n.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0);function l(p,r,d){const c=i.indexOf("#"),o=c>-1?(a.host&&document.querySelector("base")?i:i.slice(c))+p:mo()+i+p;try{s[d?"replaceState":"pushState"](r,"",o),t.value=r}catch(B){console.error(B),a[d?"replace":"assign"](o)}}function e(p,r){const d=Bi({},s.state,ph(t.value.back,p,t.value.forward,!0),r,{position:t.value.position});l(p,d,!0),n.value=p}function k(p,r){const d=Bi({},t.value,s.state,{forward:p,scroll:gt()});l(d.current,d,!0);const c=Bi({},ph(n.value,p,null),{position:d.position+1},r);l(p,c,!1),n.value=p}return{location:n,state:t,push:k,replace:e}}function Do(i){i=go(i);const s=bo(i),a=Co(i,s.state,s.location,s.replace);function n(l,e=!0){e||a.pauseListeners(),history.go(l)}const t=Bi({location:"",base:i,go:n,createHref:Ao.bind(null,i)},s,a);return Object.defineProperty(t,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(t,"state",{enumerable:!0,get:()=>s.state.value}),t}function _o(i){return typeof i=="string"||i&&typeof i=="object"}function tp(i){return typeof i=="string"||typeof i=="symbol"}const lp=Symbol("");var rh;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(rh||(rh={}));function Ta(i,s){return Bi(new Error,{type:i,[lp]:!0},s)}function xs(i,s){return i instanceof Error&&lp in i&&(s==null||!!(i.type&s))}const dh="[^/]+?",wo={sensitive:!1,strict:!1,start:!0,end:!0},xo=/[.+*?^${}()[\]/\\]/g;function So(i,s){const a=Bi({},wo,s),n=[];let t=a.start?"^":"";const l=[];for(const r of i){const d=r.length?[]:[90];a.strict&&!r.length&&(t+="/");for(let c=0;c<r.length;c++){const o=r[c];let B=40+(a.sensitive?.25:0);if(o.type===0)c||(t+="/"),t+=o.value.replace(xo,"\\$&"),B+=40;else if(o.type===1){const{value:u,repeatable:v,optional:m,regexp:f}=o;l.push({name:u,repeatable:v,optional:m});const C=f||dh;if(C!==dh){B+=10;try{new RegExp(`(${C})`)}catch(D){throw new Error(`Invalid custom RegExp for param "${u}" (${C}): `+D.message)}}let A=v?`((?:${C})(?:/(?:${C}))*)`:`(${C})`;c||(A=m&&r.length<2?`(?:/${A})`:"/"+A),m&&(A+="?"),t+=A,B+=20,m&&(B+=-8),v&&(B+=-20),C===".*"&&(B+=-50)}d.push(B)}n.push(d)}if(a.strict&&a.end){const r=n.length-1;n[r][n[r].length-1]+=.7000000000000001}a.strict||(t+="/?"),a.end?t+="$":a.strict&&(t+="(?:/|$)");const e=new RegExp(t,a.sensitive?"":"i");function k(r){const d=r.match(e),c={};if(!d)return null;for(let o=1;o<d.length;o++){const B=d[o]||"",u=l[o-1];c[u.name]=B&&u.repeatable?B.split("/"):B}return c}function p(r){let d="",c=!1;for(const o of i){(!c||!d.endsWith("/"))&&(d+="/"),c=!1;for(const B of o)if(B.type===0)d+=B.value;else if(B.type===1){const{value:u,repeatable:v,optional:m}=B,f=u in r?r[u]:"";if(As(f)&&!v)throw new Error(`Provided param "${u}" is an array but it is not repeatable (* or + modifiers)`);const C=As(f)?f.join("/"):f;if(!C)if(m)o.length<2&&(d.endsWith("/")?d=d.slice(0,-1):c=!0);else throw new Error(`Missing required param "${u}"`);d+=C}}return d||"/"}return{re:e,score:n,keys:l,parse:k,stringify:p}}function Po(i,s){let a=0;for(;a<i.length&&a<s.length;){const n=s[a]-i[a];if(n)return n;a++}return i.length<s.length?i.length===1&&i[0]===80?-1:1:i.length>s.length?s.length===1&&s[0]===80?1:-1:0}function ep(i,s){let a=0;const n=i.score,t=s.score;for(;a<n.length&&a<t.length;){const l=Po(n[a],t[a]);if(l)return l;a++}if(Math.abs(t.length-n.length)===1){if(ch(n))return 1;if(ch(t))return-1}return t.length-n.length}function ch(i){const s=i[i.length-1];return i.length>0&&s[s.length-1]<0}const To={type:0,value:""},Ro=/[a-zA-Z0-9_]/;function Lo(i){if(!i)return[[]];if(i==="/")return[[To]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function s(B){throw new Error(`ERR (${a})/"${r}": ${B}`)}let a=0,n=a;const t=[];let l;function e(){l&&t.push(l),l=[]}let k=0,p,r="",d="";function c(){r&&(a===0?l.push({type:0,value:r}):a===1||a===2||a===3?(l.length>1&&(p==="*"||p==="+")&&s(`A repeatable param (${r}) must be alone in its segment. eg: '/:ids+.`),l.push({type:1,value:r,regexp:d,repeatable:p==="*"||p==="+",optional:p==="*"||p==="?"})):s("Invalid state to consume buffer"),r="")}function o(){r+=p}for(;k<i.length;){if(p=i[k++],p==="\\"&&a!==2){n=a,a=4;continue}switch(a){case 0:p==="/"?(r&&c(),e()):p===":"?(c(),a=1):o();break;case 4:o(),a=n;break;case 1:p==="("?a=2:Ro.test(p)?o():(c(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&k--);break;case 2:p===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+p:a=3:d+=p;break;case 3:c(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&k--,d="";break;default:s("Unknown state");break}}return a===2&&s(`Unfinished custom RegExp for param "${r}"`),c(),e(),t}function jo(i,s,a){const n=So(Lo(i.path),a),t=Bi(n,{record:i,parent:s,children:[],alias:[]});return s&&!t.record.aliasOf==!s.record.aliasOf&&s.children.push(t),t}function Io(i,s){const a=[],n=new Map;s=Eh({strict:!1,end:!0,sensitive:!1},s);function t(c){return n.get(c)}function l(c,o,B){const u=!B,v=Oo(c);v.aliasOf=B&&B.record;const m=Eh(s,c),f=[v];if("alias"in c){const D=typeof c.alias=="string"?[c.alias]:c.alias;for(const O of D)f.push(Bi({},v,{components:B?B.record.components:v.components,path:O,aliasOf:B?B.record:v}))}let C,A;for(const D of f){const{path:O}=D;if(o&&O[0]!=="/"){const T=o.record.path,V=T[T.length-1]==="/"?"":"/";D.path=o.record.path+(O&&V+O)}if(C=jo(D,o,m),B?B.alias.push(C):(A=A||C,A!==C&&A.alias.push(C),u&&c.name&&!Bh(C)&&e(c.name)),hp(C)&&p(C),v.children){const T=v.children;for(let V=0;V<T.length;V++)l(T[V],C,B&&B.children[V])}B=B||C}return A?()=>{e(A)}:Xa}function e(c){if(tp(c)){const o=n.get(c);o&&(n.delete(c),a.splice(a.indexOf(o),1),o.children.forEach(e),o.alias.forEach(e))}else{const o=a.indexOf(c);o>-1&&(a.splice(o,1),c.record.name&&n.delete(c.record.name),c.children.forEach(e),c.alias.forEach(e))}}function k(){return a}function p(c){const o=Ho(c,a);a.splice(o,0,c),c.record.name&&!Bh(c)&&n.set(c.record.name,c)}function r(c,o){let B,u={},v,m;if("name"in c&&c.name){if(B=n.get(c.name),!B)throw Ta(1,{location:c});m=B.record.name,u=Bi(oh(o.params,B.keys.filter(A=>!A.optional).concat(B.parent?B.parent.keys.filter(A=>A.optional):[]).map(A=>A.name)),c.params&&oh(c.params,B.keys.map(A=>A.name))),v=B.stringify(u)}else if(c.path!=null)v=c.path,B=a.find(A=>A.re.test(v)),B&&(u=B.parse(v),m=B.record.name);else{if(B=o.name?n.get(o.name):a.find(A=>A.re.test(o.path)),!B)throw Ta(1,{location:c,currentLocation:o});m=B.record.name,u=Bi({},o.params,c.params),v=B.stringify(u)}const f=[];let C=B;for(;C;)f.unshift(C.record),C=C.parent;return{name:m,path:v,params:u,matched:f,meta:Mo(f)}}i.forEach(c=>l(c));function d(){a.length=0,n.clear()}return{addRoute:l,resolve:r,removeRoute:e,clearRoutes:d,getRoutes:k,getRecordMatcher:t}}function oh(i,s){const a={};for(const n of s)n in i&&(a[n]=i[n]);return a}function Oo(i){return{path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:void 0,beforeEnter:i.beforeEnter,props:Vo(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}}}function Vo(i){const s={},a=i.props||!1;if("component"in i)s.default=a;else for(const n in i.components)s[n]=typeof a=="object"?a[n]:a;return s}function Bh(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function Mo(i){return i.reduce((s,a)=>Bi(s,a.meta),{})}function Eh(i,s){const a={};for(const n in i)a[n]=n in s?s[n]:i[n];return a}function Ho(i,s){let a=0,n=s.length;for(;a!==n;){const l=a+n>>1;ep(i,s[l])<0?n=l:a=l+1}const t=$o(i);return t&&(n=s.lastIndexOf(t,n-1)),n}function $o(i){let s=i;for(;s=s.parent;)if(hp(s)&&ep(i,s)===0)return s}function hp({record:i}){return!!(i.name||i.components&&Object.keys(i.components).length||i.redirect)}function No(i){const s={};if(i===""||i==="?")return s;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let t=0;t<n.length;++t){const l=n[t].replace(Xk," "),e=l.indexOf("="),k=kn(e<0?l:l.slice(0,e)),p=e<0?null:kn(l.slice(e+1));if(k in s){let r=s[k];As(r)||(r=s[k]=[r]),r.push(p)}else s[k]=p}return s}function gh(i){let s="";for(let a in i){const n=i[a];if(a=eo(a),n==null){n!==void 0&&(s+=(s.length?"&":"")+a);continue}(As(n)?n.map(l=>l&&nl(l)):[n&&nl(n)]).forEach(l=>{l!==void 0&&(s+=(s.length?"&":"")+a,l!=null&&(s+="="+l))})}return s}function zo(i){const s={};for(const a in i){const n=i[a];n!==void 0&&(s[a]=As(n)?n.map(t=>t==null?null:""+t):n==null?n:""+n)}return s}const Wo=Symbol(""),yh=Symbol(""),yt=Symbol(""),Wl=Symbol(""),ll=Symbol("");function Ha(){let i=[];function s(n){return i.push(n),()=>{const t=i.indexOf(n);t>-1&&i.splice(t,1)}}function a(){i=[]}return{add:s,list:()=>i.slice(),reset:a}}function qs(i,s,a,n,t,l=e=>e()){const e=n&&(n.enterCallbacks[t]=n.enterCallbacks[t]||[]);return()=>new Promise((k,p)=>{const r=o=>{o===!1?p(Ta(4,{from:a,to:s})):o instanceof Error?p(o):_o(o)?p(Ta(2,{from:s,to:o})):(e&&n.enterCallbacks[t]===e&&typeof o=="function"&&e.push(o),k())},d=l(()=>i.call(n&&n.instances[t],s,a,r));let c=Promise.resolve(d);i.length<3&&(c=c.then(r)),c.catch(o=>p(o))})}function Vt(i,s,a,n,t=l=>l()){const l=[];for(const e of i)for(const k in e.components){let p=e.components[k];if(!(s!=="beforeRouteEnter"&&!e.instances[k]))if(qo(p)){const d=(p.__vccOpts||p)[s];d&&l.push(qs(d,a,n,e,k,t))}else{let r=p();l.push(()=>r.then(d=>{if(!d)return Promise.reject(new Error(`Couldn't resolve component "${k}" at "${e.path}"`));const c=Kc(d)?d.default:d;e.components[k]=c;const B=(c.__vccOpts||c)[s];return B&&qs(B,a,n,e,k,t)()}))}}return l}function qo(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function Ah(i){const s=mi(yt),a=mi(Wl),n=F(()=>{const p=ca(i.to);return s.resolve(p)}),t=F(()=>{const{matched:p}=n.value,{length:r}=p,d=p[r-1],c=a.matched;if(!d||!c.length)return-1;const o=c.findIndex(Pa.bind(null,d));if(o>-1)return o;const B=uh(p[r-2]);return r>1&&uh(d)===B&&c[c.length-1].path!==B?c.findIndex(Pa.bind(null,p[r-2])):o}),l=F(()=>t.value>-1&&Ko(a.params,n.value.params)),e=F(()=>t.value>-1&&t.value===a.matched.length-1&&ap(a.params,n.value.params));function k(p={}){return Go(p)?s[ca(i.replace)?"replace":"push"](ca(i.to)).catch(Xa):Promise.resolve()}return{route:n,href:F(()=>n.value.href),isActive:l,isExactActive:e,navigate:k}}const Uo=N({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Ah,setup(i,{slots:s}){const a=En(Ah(i)),{options:n}=mi(yt),t=F(()=>({[vh(i.activeClass,n.linkActiveClass,"router-link-active")]:a.isActive,[vh(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:a.isExactActive}));return()=>{const l=s.default&&s.default(a);return i.custom?l:h("a",{"aria-current":a.isExactActive?i.ariaCurrentValue:null,href:a.href,onClick:a.navigate,class:t.value},l)}}}),Jo=Uo;function Go(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const s=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return i.preventDefault&&i.preventDefault(),!0}}function Ko(i,s){for(const a in s){const n=s[a],t=i[a];if(typeof n=="string"){if(n!==t)return!1}else if(!As(t)||t.length!==n.length||n.some((l,e)=>l!==t[e]))return!1}return!0}function uh(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const vh=(i,s,a)=>i??s??a,Yo=N({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:s,slots:a}){const n=mi(ll),t=F(()=>i.route||n.value),l=mi(yh,0),e=F(()=>{let r=ca(l);const{matched:d}=t.value;let c;for(;(c=d[r])&&!c.components;)r++;return r}),k=F(()=>t.value.matched[e.value]);ys(yh,F(()=>e.value+1)),ys(Wo,k),ys(ll,t);const p=Z();return oi(()=>[p.value,k.value,i.name],([r,d,c],[o,B,u])=>{d&&(d.instances[c]=r,B&&B!==d&&r&&r===o&&(d.leaveGuards.size||(d.leaveGuards=B.leaveGuards),d.updateGuards.size||(d.updateGuards=B.updateGuards))),r&&d&&(!B||!Pa(d,B)||!o)&&(d.enterCallbacks[c]||[]).forEach(v=>v(r))},{flush:"post"}),()=>{const r=t.value,d=i.name,c=k.value,o=c&&c.components[d];if(!o)return Fh(a.default,{Component:o,route:r});const B=c.props[d],u=B?B===!0?r.params:typeof B=="function"?B(r):B:null,m=h(o,Bi({},u,s,{onVnodeUnmounted:f=>{f.component.isUnmounted&&(c.instances[d]=null)},ref:p}));return Fh(a.default,{Component:m,route:r})||m}}});function Fh(i,s){if(!i)return null;const a=i(s);return a.length===1?a[0]:a}const Qo=Yo;function Xo(i){const s=Io(i.routes,i),a=i.parseQuery||No,n=i.stringifyQuery||gh,t=i.history,l=Ha(),e=Ha(),k=Ha(),p=Mi(Ps);let r=Ps;va&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=It.bind(null,_=>""+_),c=It.bind(null,ko),o=It.bind(null,kn);function B(_,W){let H,G;return tp(_)?(H=s.getRecordMatcher(_),G=W):G=_,s.addRoute(G,H)}function u(_){const W=s.getRecordMatcher(_);W&&s.removeRoute(W)}function v(){return s.getRoutes().map(_=>_.record)}function m(_){return!!s.getRecordMatcher(_)}function f(_,W){if(W=Bi({},W||p.value),typeof _=="string"){const g=Ot(a,_,W.path),b=s.resolve({path:g.path},W),x=t.createHref(g.fullPath);return Bi(g,b,{params:o(b.params),hash:kn(g.hash),redirectedFrom:void 0,href:x})}let H;if(_.path!=null)H=Bi({},_,{path:Ot(a,_.path,W.path).path});else{const g=Bi({},_.params);for(const b in g)g[b]==null&&delete g[b];H=Bi({},_,{params:c(g)}),W.params=c(W.params)}const G=s.resolve(H,W),hi=_.hash||"";G.params=d(o(G.params));const gi=co(n,Bi({},_,{hash:lo(hi),path:G.path})),E=t.createHref(gi);return Bi({fullPath:gi,hash:hi,query:n===gh?zo(_.query):_.query||{}},G,{redirectedFrom:void 0,href:E})}function C(_){return typeof _=="string"?Ot(a,_,p.value.path):Bi({},_)}function A(_,W){if(r!==_)return Ta(8,{from:W,to:_})}function D(_){return V(_)}function O(_){return D(Bi(C(_),{replace:!0}))}function T(_){const W=_.matched[_.matched.length-1];if(W&&W.redirect){const{redirect:H}=W;let G=typeof H=="function"?H(_):H;return typeof G=="string"&&(G=G.includes("?")||G.includes("#")?G=C(G):{path:G},G.params={}),Bi({query:_.query,hash:_.hash,params:G.path!=null?{}:_.params},G)}}function V(_,W){const H=r=f(_),G=p.value,hi=_.state,gi=_.force,E=_.replace===!0,g=T(H);if(g)return V(Bi(C(g),{state:typeof g=="object"?Bi({},hi,g.state):hi,force:gi,replace:E}),W||H);const b=H;b.redirectedFrom=W;let x;return!gi&&oo(n,G,H)&&(x=Ta(16,{to:b,from:G}),ss(G,G,!0,!1)),(x?Promise.resolve(x):P(b,G)).catch(w=>xs(w)?xs(w,2)?w:vs(w):J(w,b,G)).then(w=>{if(w){if(xs(w,2))return V(Bi({replace:E},C(w.to),{state:typeof w.to=="object"?Bi({},hi,w.to.state):hi,force:gi}),W||b)}else w=R(b,G,!0,E,hi);return z(b,G,w),w})}function K(_,W){const H=A(_,W);return H?Promise.reject(H):Promise.resolve()}function M(_){const W=ws.values().next().value;return W&&typeof W.runWithContext=="function"?W.runWithContext(_):_()}function P(_,W){let H;const[G,hi,gi]=Zo(_,W);H=Vt(G.reverse(),"beforeRouteLeave",_,W);for(const g of G)g.leaveGuards.forEach(b=>{H.push(qs(b,_,W))});const E=K.bind(null,_,W);return H.push(E),Si(H).then(()=>{H=[];for(const g of l.list())H.push(qs(g,_,W));return H.push(E),Si(H)}).then(()=>{H=Vt(hi,"beforeRouteUpdate",_,W);for(const g of hi)g.updateGuards.forEach(b=>{H.push(qs(b,_,W))});return H.push(E),Si(H)}).then(()=>{H=[];for(const g of gi)if(g.beforeEnter)if(As(g.beforeEnter))for(const b of g.beforeEnter)H.push(qs(b,_,W));else H.push(qs(g.beforeEnter,_,W));return H.push(E),Si(H)}).then(()=>(_.matched.forEach(g=>g.enterCallbacks={}),H=Vt(gi,"beforeRouteEnter",_,W,M),H.push(E),Si(H))).then(()=>{H=[];for(const g of e.list())H.push(qs(g,_,W));return H.push(E),Si(H)}).catch(g=>xs(g,8)?g:Promise.reject(g))}function z(_,W,H){k.list().forEach(G=>M(()=>G(_,W,H)))}function R(_,W,H,G,hi){const gi=A(_,W);if(gi)return gi;const E=W===Ps,g=va?history.state:{};H&&(G||E?t.replace(_.fullPath,Bi({scroll:E&&g&&g.scroll},hi)):t.push(_.fullPath,hi)),p.value=_,ss(_,W,H,E),vs()}let X;function yi(){X||(X=t.listen((_,W,H)=>{if(!Fs.listening)return;const G=f(_),hi=T(G);if(hi){V(Bi(hi,{replace:!0}),G).catch(Xa);return}r=G;const gi=p.value;va&&Fo(kh(gi.fullPath,H.delta),gt()),P(G,gi).catch(E=>xs(E,12)?E:xs(E,2)?(V(E.to,G).then(g=>{xs(g,20)&&!H.delta&&H.type===pn.pop&&t.go(-1,!1)}).catch(Xa),Promise.reject()):(H.delta&&t.go(-H.delta,!1),J(E,G,gi))).then(E=>{E=E||R(G,gi,!1),E&&(H.delta&&!xs(E,8)?t.go(-H.delta,!1):H.type===pn.pop&&xs(E,20)&&t.go(-1,!1)),z(G,gi,E)}).catch(Xa)}))}let Ai=Ha(),U=Ha(),ii;function J(_,W,H){vs(_);const G=U.list();return G.length?G.forEach(hi=>hi(_,W,H)):console.error(_),Promise.reject(_)}function xi(){return ii&&p.value!==Ps?Promise.resolve():new Promise((_,W)=>{Ai.add([_,W])})}function vs(_){return ii||(ii=!_,yi(),Ai.list().forEach(([W,H])=>_?H(_):W()),Ai.reset()),_}function ss(_,W,H,G){const{scrollBehavior:hi}=i;if(!va||!hi)return Promise.resolve();const gi=!H&&fo(kh(_.fullPath,0))||(G||!H)&&history.state&&history.state.scroll||null;return ia().then(()=>hi(_,W,gi)).then(E=>E&&vo(E)).catch(E=>J(E,_,W))}const Li=_=>t.go(_);let Yi;const ws=new Set,Fs={currentRoute:p,listening:!0,addRoute:B,removeRoute:u,clearRoutes:s.clearRoutes,hasRoute:m,getRoutes:v,resolve:f,options:i,push:D,replace:O,go:Li,back:()=>Li(-1),forward:()=>Li(1),beforeEach:l.add,beforeResolve:e.add,afterEach:k.add,onError:U.add,isReady:xi,install(_){const W=this;_.component("RouterLink",Jo),_.component("RouterView",Qo),_.config.globalProperties.$router=W,Object.defineProperty(_.config.globalProperties,"$route",{enumerable:!0,get:()=>ca(p)}),va&&!Yi&&p.value===Ps&&(Yi=!0,D(t.location).catch(hi=>{}));const H={};for(const hi in Ps)Object.defineProperty(H,hi,{get:()=>p.value[hi],enumerable:!0});_.provide(yt,W),_.provide(Wl,sk(H)),_.provide(ll,p);const G=_.unmount;ws.add(_),_.unmount=function(){ws.delete(_),ws.size<1&&(r=Ps,X&&X(),X=null,p.value=Ps,Yi=!1,ii=!1),G()}}};function Si(_){return _.reduce((W,H)=>W.then(()=>M(H)),Promise.resolve())}return Fs}function Zo(i,s){const a=[],n=[],t=[],l=Math.max(s.matched.length,i.matched.length);for(let e=0;e<l;e++){const k=s.matched[e];k&&(i.matched.find(r=>Pa(r,k))?n.push(k):a.push(k));const p=i.matched[e];p&&(s.matched.find(r=>Pa(r,p))||t.push(p))}return[a,n,t]}function Ba(){return mi(yt)}function Ds(i){return mi(Wl)}var ql=Symbol(""),us=()=>{const i=mi(ql);if(!i)throw new Error("useClientData() is called without provider.");return i},iB=()=>us().pageComponent,Di=()=>us().pageData,Ei=()=>us().pageFrontmatter,sB=()=>us().pageHead,kp=()=>us().pageLang,aB=()=>us().pageLayout,sa=()=>us().routeLocale,nB=()=>us().routePath,tB=()=>us().routes,pp=()=>us().siteData,Cn=()=>us().siteLocaleData,lB=Symbol(""),el=Mi(Jc),ba=Mi(Gc),rp=(i,s)=>{const a=Oc(i,s);if(ba.value[a])return a;const n=encodeURI(a);if(ba.value[n])return n;const t=el.value[a]||el.value[n];return t||a},cs=(i,s)=>{const{pathname:a,hashAndQueries:n}=Gk(i),t=rp(a,s),l=t+n;return ba.value[t]?{...ba.value[t],path:l,notFound:!1}:{...ba.value["/404.html"],path:l,notFound:!0}},eB=(i,s)=>{const{pathname:a,hashAndQueries:n}=Gk(i);return rp(a,s)+n},hB=i=>{if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget){const s=i.currentTarget.getAttribute("target");if(s!=null&&s.match(/\b_blank\b/i))return}return i.preventDefault(),!0}},Ti=N({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(i,{slots:s}){const a=Ba(),n=Ds(),t=F(()=>i.to.startsWith("#")||i.to.startsWith("?")?i.to:`/web-docs/${eB(i.to,n.path).substring(1)}`);return()=>{var l;return h("a",{class:["route-link",{[i.activeClass]:i.active}],href:t.value,onClick:(e={})=>{hB(e)&&a.push(i.to).catch()}},(l=s.default)==null?void 0:l.call(s))}}}),kB=N({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const a=Oa(i,"config"),n=Ds(),t=pp(),l=F(()=>fn(a.value.link)),e=F(()=>a.value.target||(l.value?"_blank":void 0)),k=F(()=>e.value==="_blank"),p=F(()=>!l.value&&!k.value),r=F(()=>a.value.rel||(k.value?"noopener noreferrer":null)),d=F(()=>a.value.ariaLabel??a.value.text),c=F(()=>{if(a.value.exact)return!1;const B=Object.keys(t.value.locales);return B.length?B.every(u=>u!==a.value.link):a.value.link!=="/"}),o=F(()=>p.value?a.value.activeMatch?(a.value.activeMatch instanceof RegExp?a.value.activeMatch:new RegExp(a.value.activeMatch,"u")).test(n.path):c.value?n.path.startsWith(a.value.link):n.path===a.value.link:!1);return()=>{const{before:B,after:u,default:v}=s,m=(v==null?void 0:v(a.value))||[B==null?void 0:B(a.value),a.value.text,u==null?void 0:u(a.value)];return p.value?h(Ti,{class:"auto-link",to:a.value.link,active:o.value,"aria-label":d.value},()=>m):h("a",{class:"auto-link external-link",href:a.value.link,"aria-label":d.value,rel:r.value,target:e.value},m)}}}),At=N({name:"ClientOnly",setup(i,s){const a=Z(!1);return wi(()=>{a.value=!0}),()=>{var n,t;return a.value?(t=(n=s.slots).default)==null?void 0:t.call(n):null}}}),dp=N({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(i){const s=iB(),a=F(()=>{if(!i.path)return s.value;const n=cs(i.path);return dd(()=>n.loader().then(({comp:t})=>t))});return()=>h(a.value)}}),pB="Layout",rB="en-US",la=En({resolveLayouts:i=>i.reduce((s,a)=>({...s,...a.layouts}),{}),resolvePageHead:(i,s,a)=>{const n=Ci(s.description)?s.description:a.description,t=[...Array.isArray(s.head)?s.head:[],...a.head,["title",{},i],["meta",{name:"description",content:n}]];return zc(t)},resolvePageHeadTitle:(i,s)=>[i.title,s.title].filter(a=>!!a).join(" | "),resolvePageLang:(i,s)=>i.lang||s.lang||rB,resolvePageLayout:(i,s)=>{const a=Ci(i.frontmatter.layout)?i.frontmatter.layout:pB;if(!s[a])throw new Error(`[vuepress] Cannot resolve layout: ${a}`);return s[a]},resolveRouteLocale:(i,s)=>Vc(i,decodeURI(s)),resolveSiteLocaleData:({base:i,locales:s,...a},n)=>{var t;return{...a,...s[n],head:[...((t=s[n])==null?void 0:t.head)??[],...a.head??[]]}}}),_s=(i={})=>i,ui=i=>oa(i)?i:`/web-docs/${Yk(i)}`;const dB=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),bn=i=>{const s=sa();return F(()=>i[s.value]??{})};var is=Uint8Array,Fa=Uint16Array,cB=Int32Array,cp=new is([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),op=new is([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),oB=new is([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Bp=function(i,s){for(var a=new Fa(31),n=0;n<31;++n)a[n]=s+=1<<i[n-1];for(var t=new cB(a[30]),n=1;n<30;++n)for(var l=a[n];l<a[n+1];++l)t[l]=l-a[n]<<5|n;return{b:a,r:t}},Ep=Bp(cp,2),gp=Ep.b,BB=Ep.r;gp[28]=258,BB[258]=28;var EB=Bp(op,0),gB=EB.b,hl=new Fa(32768);for(var Fi=0;Fi<32768;++Fi){var Hs=(Fi&43690)>>1|(Fi&21845)<<1;Hs=(Hs&52428)>>2|(Hs&13107)<<2,Hs=(Hs&61680)>>4|(Hs&3855)<<4,hl[Fi]=((Hs&65280)>>8|(Hs&255)<<8)>>1}var sn=function(i,s,a){for(var n=i.length,t=0,l=new Fa(s);t<n;++t)i[t]&&++l[i[t]-1];var e=new Fa(s);for(t=1;t<s;++t)e[t]=e[t-1]+l[t-1]<<1;var k;if(a){k=new Fa(1<<s);var p=15-s;for(t=0;t<n;++t)if(i[t])for(var r=t<<4|i[t],d=s-i[t],c=e[i[t]-1]++<<d,o=c|(1<<d)-1;c<=o;++c)k[hl[c]>>p]=r}else for(k=new Fa(n),t=0;t<n;++t)i[t]&&(k[t]=hl[e[i[t]-1]++]>>15-i[t]);return k},Dn=new is(288);for(var Fi=0;Fi<144;++Fi)Dn[Fi]=8;for(var Fi=144;Fi<256;++Fi)Dn[Fi]=9;for(var Fi=256;Fi<280;++Fi)Dn[Fi]=7;for(var Fi=280;Fi<288;++Fi)Dn[Fi]=8;var yp=new is(32);for(var Fi=0;Fi<32;++Fi)yp[Fi]=5;var yB=sn(Dn,9,1),AB=sn(yp,5,1),Mt=function(i){for(var s=i[0],a=1;a<i.length;++a)i[a]>s&&(s=i[a]);return s},Bs=function(i,s,a){var n=s/8|0;return(i[n]|i[n+1]<<8)>>(s&7)&a},Ht=function(i,s){var a=s/8|0;return(i[a]|i[a+1]<<8|i[a+2]<<16)>>(s&7)},uB=function(i){return(i+7)/8|0},Ap=function(i,s,a){return(s==null||s<0)&&(s=0),(a==null||a>i.length)&&(a=i.length),new is(i.subarray(s,a))},vB=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ts=function(i,s,a){var n=new Error(s||vB[i]);if(n.code=i,Error.captureStackTrace&&Error.captureStackTrace(n,ts),!a)throw n;return n},FB=function(i,s,a,n){var t=i.length,l=0;if(!t||s.f&&!s.l)return a||new is(0);var e=!a,k=e||s.i!=2,p=s.i;e&&(a=new is(t*3));var r=function(hi){var gi=a.length;if(hi>gi){var E=new is(Math.max(gi*2,hi));E.set(a),a=E}},d=s.f||0,c=s.p||0,o=s.b||0,B=s.l,u=s.d,v=s.m,m=s.n,f=t*8;do{if(!B){d=Bs(i,c,1);var C=Bs(i,c+1,3);if(c+=3,C)if(C==1)B=yB,u=AB,v=9,m=5;else if(C==2){var T=Bs(i,c,31)+257,V=Bs(i,c+10,15)+4,K=T+Bs(i,c+5,31)+1;c+=14;for(var M=new is(K),P=new is(19),z=0;z<V;++z)P[oB[z]]=Bs(i,c+z*3,7);c+=V*3;for(var R=Mt(P),X=(1<<R)-1,yi=sn(P,R,1),z=0;z<K;){var Ai=yi[Bs(i,c,X)];c+=Ai&15;var A=Ai>>4;if(A<16)M[z++]=A;else{var U=0,ii=0;for(A==16?(ii=3+Bs(i,c,3),c+=2,U=M[z-1]):A==17?(ii=3+Bs(i,c,7),c+=3):A==18&&(ii=11+Bs(i,c,127),c+=7);ii--;)M[z++]=U}}var J=M.subarray(0,T),xi=M.subarray(T);v=Mt(J),m=Mt(xi),B=sn(J,v,1),u=sn(xi,m,1)}else ts(1);else{var A=uB(c)+4,D=i[A-4]|i[A-3]<<8,O=A+D;if(O>t){p&&ts(0);break}k&&r(o+D),a.set(i.subarray(A,O),o),s.b=o+=D,s.p=c=O*8,s.f=d;continue}if(c>f){p&&ts(0);break}}k&&r(o+131072);for(var vs=(1<<v)-1,ss=(1<<m)-1,Li=c;;Li=c){var U=B[Ht(i,c)&vs],Yi=U>>4;if(c+=U&15,c>f){p&&ts(0);break}if(U||ts(2),Yi<256)a[o++]=Yi;else if(Yi==256){Li=c,B=null;break}else{var ws=Yi-254;if(Yi>264){var z=Yi-257,Fs=cp[z];ws=Bs(i,c,(1<<Fs)-1)+gp[z],c+=Fs}var Si=u[Ht(i,c)&ss],_=Si>>4;Si||ts(3),c+=Si&15;var xi=gB[_];if(_>3){var Fs=op[_];xi+=Ht(i,c)&(1<<Fs)-1,c+=Fs}if(c>f){p&&ts(0);break}k&&r(o+131072);var W=o+ws;if(o<xi){var H=l-xi,G=Math.min(xi,W);for(H+o<0&&ts(3);o<G;++o)a[o]=n[H+o]}for(;o<W;++o)a[o]=a[o-xi]}}s.l=B,s.p=Li,s.b=o,s.f=d,B&&(d=1,s.m=v,s.d=u,s.n=m)}while(!d);return o!=a.length&&e?Ap(a,0,o):a.subarray(0,o)},fB=new is(0),mB=function(i,s){return((i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31)&&ts(6,"invalid zlib data"),(i[1]>>5&1)==+!s&&ts(6,"invalid zlib data: "+(i[1]&32?"need":"unexpected")+" dictionary"),(i[1]>>3&4)+2};function CB(i,s){return FB(i.subarray(mB(i,s),-4),{i:2},s,s)}var kl=typeof TextDecoder<"u"&&new TextDecoder,bB=0;try{kl.decode(fB,{stream:!0}),bB=1}catch{}var DB=function(i){for(var s="",a=0;;){var n=i[a++],t=(n>127)+(n>223)+(n>239);if(a+t>i.length)return{s,r:Ap(i,a-1)};t?t==3?(n=((n&15)<<18|(i[a++]&63)<<12|(i[a++]&63)<<6|i[a++]&63)-65536,s+=String.fromCharCode(55296|n>>10,56320|n&1023)):t&1?s+=String.fromCharCode((n&31)<<6|i[a++]&63):s+=String.fromCharCode((n&15)<<12|(i[a++]&63)<<6|i[a++]&63):s+=String.fromCharCode(n)}};function _B(i,s){{for(var a=new is(i.length),n=0;n<i.length;++n)a[n]=i.charCodeAt(n);return a}for(var t=i.length,n=0;n<t;++n);}function wB(i,s){var a;if(kl)return kl.decode(i);var n=DB(i),t=n.s,a=n.r;return a.length&&ts(8),t}const fh=i=>{const s=atob(i);return wB(CB(_B(s)))},rs=(i,s)=>{var n;const a=(n=(s==null?void 0:s._instance)||un())==null?void 0:n.appContext.components;return a?i in a||ds(i)in a||Bn(ds(i))in a:!1},up=i=>new Promise(s=>setTimeout(s,i)),vp=i=>typeof i<"u",$t=i=>typeof i=="number",pl=Array.isArray,kt=(i,s)=>Ci(i)&&i.startsWith(s),xB=(i,s)=>Ci(i)&&i.endsWith(s),_n=Object.entries,bs=Object.keys,Ul=i=>{if(i){if(typeof i=="number")return new Date(i);const s=Date.parse(i.toString());if(!Number.isNaN(s))return new Date(s)}return null},ut=i=>kt(i,"/");function Ea(i){return zh()?(g2(i),!0):!1}function Ui(i){return typeof i=="function"?i():ca(i)}const wn=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const SB=Object.prototype.toString,PB=i=>SB.call(i)==="[object Object]",Ra=()=>{},mh=TB();function TB(){var i,s;return wn&&((i=window==null?void 0:window.navigator)==null?void 0:i.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((s=window==null?void 0:window.navigator)==null?void 0:s.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function Jl(i,s){function a(...n){return new Promise((t,l)=>{Promise.resolve(i(()=>s.apply(this,n),{fn:s,thisArg:this,args:n})).then(t).catch(l)})}return a}const Fp=i=>i();function RB(i,s={}){let a,n,t=Ra;const l=k=>{clearTimeout(k),t(),t=Ra};return k=>{const p=Ui(i),r=Ui(s.maxWait);return a&&l(a),p<=0||r!==void 0&&r<=0?(n&&(l(n),n=null),Promise.resolve(k())):new Promise((d,c)=>{t=s.rejectOnCancel?c:d,r&&!n&&(n=setTimeout(()=>{a&&l(a),n=null,d(k())},r)),a=setTimeout(()=>{n&&l(n),n=null,d(k())},p)})}}function LB(...i){let s=0,a,n=!0,t=Ra,l,e,k,p,r;!Vi(i[0])&&typeof i[0]=="object"?{delay:e,trailing:k=!0,leading:p=!0,rejectOnCancel:r=!1}=i[0]:[e,k=!0,p=!0,r=!1]=i;const d=()=>{a&&(clearTimeout(a),a=void 0,t(),t=Ra)};return o=>{const B=Ui(e),u=Date.now()-s,v=()=>l=o();return d(),B<=0?(s=Date.now(),v()):(u>B&&(p||!n)?(s=Date.now(),v()):k&&(l=new Promise((m,f)=>{t=r?f:m,a=setTimeout(()=>{s=Date.now(),n=!0,m(v()),d()},Math.max(0,B-u))})),!p&&!a&&(a=setTimeout(()=>n=!0,B)),n=!1,l)}}function jB(i=Fp){const s=Z(!0);function a(){s.value=!1}function n(){s.value=!0}const t=(...l)=>{s.value&&i(...l)};return{isActive:Zs(s),pause:a,resume:n,eventFilter:t}}function IB(i){let s;function a(){return s||(s=i()),s}return a.reset=async()=>{const n=s;s=void 0,n&&await n},a}function OB(i){return un()}function VB(...i){if(i.length!==1)return Oa(...i);const s=i[0];return typeof s=="function"?Zs(ek(()=>({get:s,set:Ra}))):Z(s)}function MB(i,s=200,a={}){return Jl(RB(s,a),i)}function HB(i,s=200,a=!1,n=!0,t=!1){return Jl(LB(s,a,n,t),i)}function $B(i,s,a={}){const{eventFilter:n=Fp,...t}=a;return oi(i,Jl(n,s),t)}function NB(i,s,a={}){const{eventFilter:n,...t}=a,{eventFilter:l,pause:e,resume:k,isActive:p}=jB(n);return{stop:$B(i,s,{...t,eventFilter:l}),pause:e,resume:k,isActive:p}}function vt(i,s=!0,a){OB()?wi(i,a):s?i():ia(i)}function zB(i,s,a={}){const{immediate:n=!0}=a,t=Z(!1);let l=null;function e(){l&&(clearTimeout(l),l=null)}function k(){t.value=!1,e()}function p(...r){e(),t.value=!0,l=setTimeout(()=>{t.value=!1,l=null,i(...r)},Ui(s))}return n&&(t.value=!0,wn&&p()),Ea(k),{isPending:Zs(t),start:p,stop:k}}function rn(i=!1,s={}){const{truthyValue:a=!0,falsyValue:n=!1}=s,t=Vi(i),l=Z(i);function e(k){if(arguments.length)return l.value=k,l.value;{const p=Ui(a);return l.value=l.value===p?Ui(n):p,l.value}}return t?e:[l,e]}function Rs(i){var s;const a=Ui(i);return(s=a==null?void 0:a.$el)!=null?s:a}const Qs=wn?window:void 0,fp=wn?window.document:void 0,mp=wn?window.navigator:void 0;function Ri(...i){let s,a,n,t;if(typeof i[0]=="string"||Array.isArray(i[0])?([a,n,t]=i,s=Qs):[s,a,n,t]=i,!s)return Ra;Array.isArray(a)||(a=[a]),Array.isArray(n)||(n=[n]);const l=[],e=()=>{l.forEach(d=>d()),l.length=0},k=(d,c,o,B)=>(d.addEventListener(c,o,B),()=>d.removeEventListener(c,o,B)),p=oi(()=>[Rs(s),Ui(t)],([d,c])=>{if(e(),!d)return;const o=PB(c)?{...c}:c;l.push(...a.flatMap(B=>n.map(u=>k(d,B,u,o))))},{immediate:!0,flush:"post"}),r=()=>{p(),e()};return Ea(r),r}function WB(){const i=Z(!1),s=un();return s&&wi(()=>{i.value=!0},s),i}function xn(i){const s=WB();return F(()=>(s.value,!!i()))}function Gl(i,s={}){const{window:a=Qs}=s,n=xn(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let t;const l=Z(!1),e=r=>{l.value=r.matches},k=()=>{t&&("removeEventListener"in t?t.removeEventListener("change",e):t.removeListener(e))},p=xk(()=>{n.value&&(k(),t=a.matchMedia(Ui(i)),"addEventListener"in t?t.addEventListener("change",e):t.addListener(e),l.value=t.matches)});return Ea(()=>{p(),k(),t=void 0}),l}function Ch(i,s={}){const{controls:a=!1,navigator:n=mp}=s,t=xn(()=>n&&"permissions"in n);let l;const e=typeof i=="string"?{name:i}:i,k=Z(),p=()=>{l&&(k.value=l.state)},r=IB(async()=>{if(t.value){if(!l)try{l=await n.permissions.query(e),Ri(l,"change",p),p()}catch{k.value="prompt"}return l}});return r(),a?{state:k,isSupported:t,query:r}:k}function qB(i={}){const{navigator:s=mp,read:a=!1,source:n,copiedDuring:t=1500,legacy:l=!1}=i,e=xn(()=>s&&"clipboard"in s),k=Ch("clipboard-read"),p=Ch("clipboard-write"),r=F(()=>e.value||l),d=Z(""),c=Z(!1),o=zB(()=>c.value=!1,t);function B(){e.value&&f(k.value)?s.clipboard.readText().then(C=>{d.value=C}):d.value=m()}r.value&&a&&Ri(["copy","cut"],B);async function u(C=Ui(n)){r.value&&C!=null&&(e.value&&f(p.value)?await s.clipboard.writeText(C):v(C),d.value=C,c.value=!0,o.start())}function v(C){const A=document.createElement("textarea");A.value=C??"",A.style.position="absolute",A.style.opacity="0",document.body.appendChild(A),A.select(),document.execCommand("copy"),A.remove()}function m(){var C,A,D;return(D=(A=(C=document==null?void 0:document.getSelection)==null?void 0:C.call(document))==null?void 0:A.toString())!=null?D:""}function f(C){return C==="granted"||C==="prompt"}return{isSupported:r,text:d,copied:c,copy:u}}const Jn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Gn="__vueuse_ssr_handlers__",UB=JB();function JB(){return Gn in Jn||(Jn[Gn]=Jn[Gn]||{}),Jn[Gn]}function GB(i,s){return UB[i]||s}function KB(i){return i==null?"any":i instanceof Set?"set":i instanceof Map?"map":i instanceof Date?"date":typeof i=="boolean"?"boolean":typeof i=="string"?"string":typeof i=="object"?"object":Number.isNaN(i)?"any":"number"}const YB={boolean:{read:i=>i==="true",write:i=>String(i)},object:{read:i=>JSON.parse(i),write:i=>JSON.stringify(i)},number:{read:i=>Number.parseFloat(i),write:i=>String(i)},any:{read:i=>i,write:i=>String(i)},string:{read:i=>i,write:i=>String(i)},map:{read:i=>new Map(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i.entries()))},set:{read:i=>new Set(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i))},date:{read:i=>new Date(i),write:i=>i.toISOString()}},bh="vueuse-storage";function QB(i,s,a,n={}){var t;const{flush:l="pre",deep:e=!0,listenToStorageChanges:k=!0,writeDefaults:p=!0,mergeDefaults:r=!1,shallow:d,window:c=Qs,eventFilter:o,onError:B=P=>{console.error(P)},initOnMounted:u}=n,v=(d?Mi:Z)(s);if(!a)try{a=GB("getDefaultStorage",()=>{var P;return(P=Qs)==null?void 0:P.localStorage})()}catch(P){B(P)}if(!a)return v;const m=Ui(s),f=KB(m),C=(t=n.serializer)!=null?t:YB[f],{pause:A,resume:D}=NB(v,()=>T(v.value),{flush:l,deep:e,eventFilter:o});c&&k&&vt(()=>{Ri(c,"storage",K),Ri(c,bh,M),u&&K()}),u||K();function O(P,z){c&&c.dispatchEvent(new CustomEvent(bh,{detail:{key:i,oldValue:P,newValue:z,storageArea:a}}))}function T(P){try{const z=a.getItem(i);if(P==null)O(z,null),a.removeItem(i);else{const R=C.write(P);z!==R&&(a.setItem(i,R),O(z,R))}}catch(z){B(z)}}function V(P){const z=P?P.newValue:a.getItem(i);if(z==null)return p&&m!=null&&a.setItem(i,C.write(m)),m;if(!P&&r){const R=C.read(z);return typeof r=="function"?r(R,m):f==="object"&&!Array.isArray(R)?{...m,...R}:R}else return typeof z!="string"?z:C.read(z)}function K(P){if(!(P&&P.storageArea!==a)){if(P&&P.key==null){v.value=m;return}if(!(P&&P.key!==i)){A();try{(P==null?void 0:P.newValue)!==C.write(v.value)&&(v.value=V(P))}catch(z){B(z)}finally{P?ia(D):D()}}}}function M(P){K(P.detail)}return v}function XB(i){return Gl("(prefers-color-scheme: dark)",i)}function ZB(i,s,a={}){const{window:n=Qs,...t}=a;let l;const e=xn(()=>n&&"ResizeObserver"in n),k=()=>{l&&(l.disconnect(),l=void 0)},p=F(()=>Array.isArray(i)?i.map(c=>Rs(c)):[Rs(i)]),r=oi(p,c=>{if(k(),e.value&&n){l=new ResizeObserver(s);for(const o of c)o&&l.observe(o,t)}},{immediate:!0,flush:"post"}),d=()=>{k(),r()};return Ea(d),{isSupported:e,stop:d}}function iE(i,s={width:0,height:0},a={}){const{window:n=Qs,box:t="content-box"}=a,l=F(()=>{var c,o;return(o=(c=Rs(i))==null?void 0:c.namespaceURI)==null?void 0:o.includes("svg")}),e=Z(s.width),k=Z(s.height),{stop:p}=ZB(i,([c])=>{const o=t==="border-box"?c.borderBoxSize:t==="content-box"?c.contentBoxSize:c.devicePixelContentBoxSize;if(n&&l.value){const B=Rs(i);if(B){const u=B.getBoundingClientRect();e.value=u.width,k.value=u.height}}else if(o){const B=Array.isArray(o)?o:[o];e.value=B.reduce((u,{inlineSize:v})=>u+v,0),k.value=B.reduce((u,{blockSize:v})=>u+v,0)}else e.value=c.contentRect.width,k.value=c.contentRect.height},a);vt(()=>{const c=Rs(i);c&&(e.value="offsetWidth"in c?c.offsetWidth:s.width,k.value="offsetHeight"in c?c.offsetHeight:s.height)});const r=oi(()=>Rs(i),c=>{e.value=c?s.width:0,k.value=c?s.height:0});function d(){p(),r()}return{width:e,height:k,stop:d}}const Dh=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function Kl(i,s={}){const{document:a=fp,autoExit:n=!1}=s,t=F(()=>{var f;return(f=Rs(i))!=null?f:a==null?void 0:a.querySelector("html")}),l=Z(!1),e=F(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(f=>a&&f in a||t.value&&f in t.value)),k=F(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(f=>a&&f in a||t.value&&f in t.value)),p=F(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(f=>a&&f in a||t.value&&f in t.value)),r=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(f=>a&&f in a),d=xn(()=>t.value&&a&&e.value!==void 0&&k.value!==void 0&&p.value!==void 0),c=()=>r?(a==null?void 0:a[r])===t.value:!1,o=()=>{if(p.value){if(a&&a[p.value]!=null)return a[p.value];{const f=t.value;if((f==null?void 0:f[p.value])!=null)return!!f[p.value]}}return!1};async function B(){if(!(!d.value||!l.value)){if(k.value)if((a==null?void 0:a[k.value])!=null)await a[k.value]();else{const f=t.value;(f==null?void 0:f[k.value])!=null&&await f[k.value]()}l.value=!1}}async function u(){if(!d.value||l.value)return;o()&&await B();const f=t.value;e.value&&(f==null?void 0:f[e.value])!=null&&(await f[e.value](),l.value=!0)}async function v(){await(l.value?B():u())}const m=()=>{const f=o();(!f||f&&c())&&(l.value=f)};return Ri(a,Dh,m,!1),Ri(()=>Rs(t),Dh,m,!1),n&&Ea(B),{isSupported:d,isFullscreen:l,enter:u,exit:B,toggle:v}}function Nt(i){return typeof Window<"u"&&i instanceof Window?i.document.documentElement:typeof Document<"u"&&i instanceof Document?i.documentElement:i}function Cp(i){const s=window.getComputedStyle(i);if(s.overflowX==="scroll"||s.overflowY==="scroll"||s.overflowX==="auto"&&i.clientWidth<i.scrollWidth||s.overflowY==="auto"&&i.clientHeight<i.scrollHeight)return!0;{const a=i.parentNode;return!a||a.tagName==="BODY"?!1:Cp(a)}}function sE(i){const s=i||window.event,a=s.target;return Cp(a)?!1:s.touches.length>1?!0:(s.preventDefault&&s.preventDefault(),!1)}const zt=new WeakMap;function bp(i,s=!1){const a=Z(s);let n=null,t="";oi(VB(i),k=>{const p=Nt(Ui(k));if(p){const r=p;if(zt.get(r)||zt.set(r,r.style.overflow),r.style.overflow!=="hidden"&&(t=r.style.overflow),r.style.overflow==="hidden")return a.value=!0;if(a.value)return r.style.overflow="hidden"}},{immediate:!0});const l=()=>{const k=Nt(Ui(i));!k||a.value||(mh&&(n=Ri(k,"touchmove",p=>{sE(p)},{passive:!1})),k.style.overflow="hidden",a.value=!0)},e=()=>{const k=Nt(Ui(i));!k||!a.value||(mh&&(n==null||n()),k.style.overflow=t,zt.delete(k),a.value=!1)};return Ea(e),F({get(){return a.value},set(k){k?l():e()}})}let aE=0;function nE(i,s={}){const a=Z(!1),{document:n=fp,immediate:t=!0,manual:l=!1,id:e=`vueuse_styletag_${++aE}`}=s,k=Z(i);let p=()=>{};const r=()=>{if(!n)return;const c=n.getElementById(e)||n.createElement("style");c.isConnected||(c.id=e,s.media&&(c.media=s.media),n.head.appendChild(c)),!a.value&&(p=oi(k,o=>{c.textContent=o},{immediate:!0}),a.value=!0)},d=()=>{!n||!a.value||(p(),n.head.removeChild(n.getElementById(e)),a.value=!1)};return t&&!l&&vt(r),l||Ea(d),{id:e,css:k,unload:d,load:r,isLoaded:Zs(a)}}function tE(i={}){const{window:s=Qs,behavior:a="auto"}=i;if(!s)return{x:Z(0),y:Z(0)};const n=Z(s.scrollX),t=Z(s.scrollY),l=F({get(){return n.value},set(k){scrollTo({left:k,behavior:a})}}),e=F({get(){return t.value},set(k){scrollTo({top:k,behavior:a})}});return Ri(s,"scroll",()=>{n.value=s.scrollX,t.value=s.scrollY},{capture:!1,passive:!0}),{x:l,y:e}}function lE(i={}){const{window:s=Qs,initialWidth:a=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:t=!0,includeScrollbar:l=!0}=i,e=Z(a),k=Z(n),p=()=>{s&&(l?(e.value=s.innerWidth,k.value=s.innerHeight):(e.value=s.document.documentElement.clientWidth,k.value=s.document.documentElement.clientHeight))};if(p(),vt(p),Ri("resize",p,{passive:!0}),t){const r=Gl("(orientation: portrait)");oi(r,()=>p())}return{width:e,height:k}}const Dp=({type:i="info",text:s="",vertical:a,color:n},{slots:t})=>{var l;return h("span",{class:["vp-badge",i,{diy:n}],style:{verticalAlign:a??!1,backgroundColor:n??!1}},((l=t.default)==null?void 0:l.call(t))??s)};Dp.displayName="Badge";var eE=N({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(i){const s=F(()=>{const n=["font-icon icon"],t=`iconfont icon-${i.icon}`;return n.push(t),n}),a=F(()=>{const n={};return i.color&&(n.color=i.color),i.size&&(n["font-size"]=Number.isNaN(Number(i.size))?i.size:`${i.size}px`),bs(n).length?n:null});return()=>i.icon?h("span",{key:i.icon,class:s.value,style:a.value}):null}});const hE=_s({enhance:({app:i})=>{rs("Badge")||i.component("Badge",Dp),rs("FontIcon")||i.component("FontIcon",eE)},setup:()=>{nE(`@import url("//at.alicdn.com/t/c/font_4649315_g2nhe0ly5dq.css");
`)},rootComponents:[]}),kE=Object.freeze(Object.defineProperty({__proto__:null,default:hE},Symbol.toStringTag,{value:"Module"})),_h=async(i,s)=>{const{path:a,query:n}=i.currentRoute.value,{scrollBehavior:t}=i.options;i.options.scrollBehavior=void 0,await i.replace({path:a,query:n,hash:s}),i.options.scrollBehavior=t},pE=({headerLinkSelector:i,headerAnchorSelector:s,delay:a,offset:n=5})=>{const t=Ba();Ri("scroll",MB(()=>{var u,v;const e=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(e-0)<n){_h(t,"");return}const p=window.innerHeight+e,r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),d=Math.abs(r-p)<n,c=Array.from(document.querySelectorAll(i)),B=Array.from(document.querySelectorAll(s)).filter(m=>c.some(f=>f.hash===m.hash));for(let m=0;m<B.length;m++){const f=B[m],C=B[m+1],A=e>=(((u=f.parentElement)==null?void 0:u.offsetTop)??0)-n,D=!C||e<(((v=C.parentElement)==null?void 0:v.offsetTop)??0)-n;if(!(A&&D))continue;const T=decodeURIComponent(t.currentRoute.value.hash),V=decodeURIComponent(f.hash);if(T===V)return;if(d){for(let K=m+1;K<B.length;K++)if(T===decodeURIComponent(B[K].hash))return}_h(t,V);return}},a))},rE=".vp-sidebar-link, .vp-toc-link",dE=".header-anchor",cE=200,oE=5,BE=_s({setup(){pE({headerLinkSelector:rE,headerAnchorSelector:dE,delay:cE,offset:oE})}}),EE=Object.freeze(Object.defineProperty({__proto__:null,default:BE},Symbol.toStringTag,{value:"Module"}));let _p=i=>Ci(i.title)?{title:i.title}:null;const wp=Symbol(""),gE=i=>{_p=i},yE=()=>mi(wp),AE=i=>{i.provide(wp,_p)};var uE={"/":{title:"目录",empty:"暂无目录"}};const vE=N({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(i){const s=yE(),a=bn(uE),n=Di(),t=tB(),l=pp(),k=Mi(_n(t.value).map(([r,{meta:d}])=>{const c=s(d);if(!c)return null;const o=r.split("/").length;return{level:xB(r,"/")?o-2:o-1,base:r.replace(/\/[^/]+\/?$/,"/"),path:r,...c}}).filter(r=>mn(r)&&Ci(r.title))),p=F(()=>{const r=i.base?Wc(Kk(i.base)):n.value.path.replace(/\/[^/]+$/,"/"),d=r.split("/").length-2,c=[];return k.value.filter(({level:o,path:B})=>{if(!kt(B,r)||B===r)return!1;if(r==="/"){const u=bs(l.value.locales).filter(v=>v!=="/");if(B==="/404.html"||u.some(v=>kt(B,v)))return!1}return o-d<=i.level}).sort(({title:o,level:B,order:u},{title:v,level:m,order:f})=>{const C=B-m;return C||($t(u)?$t(f)?u>0?f>0?u-f:-1:f<0?u-f:1:u:$t(f)?f:o.localeCompare(v))}).forEach(o=>{var v;const{base:B,level:u}=o;switch(u-d){case 1:{c.push(o);break}case 2:{const m=c.find(f=>f.path===B);m&&(m.children??(m.children=[])).push(o);break}default:{const m=c.find(f=>f.path===B.replace(/\/[^/]+\/$/,"/"));if(m){const f=(v=m.children)==null?void 0:v.find(C=>C.path===B);f&&(f.children??(f.children=[])).push(o)}}}}),c});return()=>{const r=p.value.some(d=>d.children);return h("div",{class:["vp-catalog-wrapper",{index:i.index}]},[i.hideHeading?null:h("h2",{class:"vp-catalog-main-title"},a.value.title),p.value.length?h(i.index?"ol":"ul",{class:["vp-catalogs",{deep:r}]},p.value.map(({children:d=[],title:c,path:o,content:B})=>{const u=h(Ti,{class:"vp-catalog-title",to:o},()=>B?h(B):c);return h("li",{class:"vp-catalog"},r?[h("h3",{id:c,class:["vp-catalog-child-title",{"has-children":d.length}]},[h("a",{href:`#${c}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),u]),d.length?h(i.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:v=[],content:m,path:f,title:C})=>h("li",{class:"vp-child-catalog"},[h("div",{class:["vp-catalog-sub-title",{"has-children":v.length}]},[h("a",{href:`#${C}`,class:"vp-catalog-header-anchor"},"#"),h(Ti,{class:"vp-catalog-title",to:f},()=>m?h(m):C)]),v.length?h(i.index?"ol":"div",{class:i.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},v.map(({content:A,path:D,title:O})=>i.index?h("li",{class:"vp-sub-catalog"},h(Ti,{to:D},()=>A?h(A):O)):h(Ti,{class:"vp-sub-catalog-link",to:D},()=>A?h(A):O))):null]))):null]:h("div",{class:"vp-catalog-child-title"},u))})):h("p",{class:"vp-empty-catalog"},a.value.empty)])}}}),FE=_s({enhance:({app:i})=>{AE(i),rs("Catalog",i)||i.component("Catalog",vE)}}),fE=Object.freeze(Object.defineProperty({__proto__:null,default:FE},Symbol.toStringTag,{value:"Module"}));var mE={"/":{backToTop:"返回顶部"}};const CE=N({name:"BackToTop",setup(){const i=Ei(),s=bn(mE),a=Mi(),{height:n}=iE(a),{height:t}=lE(),{y:l}=tE(),e=F(()=>i.value.backToTop!==!1&&l.value>100),k=F(()=>l.value/(n.value-t.value)*100);return wi(()=>{a.value=document.body}),()=>h(Ys,{name:"back-to-top"},()=>e.value?h("button",{type:"button",class:"vp-back-to-top-button","aria-label":s.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[h("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":k.value},h("svg",h("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*k.value*.48} ${Math.PI*(100-k.value)*.48}`}))),h("div",{class:"back-to-top-icon"})]):null)}}),bE=_s({rootComponents:[CE]}),DE=Object.freeze(Object.defineProperty({__proto__:null,default:bE},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const ki={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:i=>{const s=ki.isStarted();i=Wt(i,ki.settings.minimum,1),ki.status=i===1?null:i;const a=ki.render(!s),n=a.querySelector(ki.settings.barSelector),t=ki.settings.speed,l=ki.settings.easing;return a.offsetWidth,_E(e=>{Kn(n,{transform:"translate3d("+wh(i)+"%,0,0)",transition:"all "+t+"ms "+l}),i===1?(Kn(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(()=>{Kn(a,{transition:"all "+t+"ms linear",opacity:"0"}),setTimeout(()=>{ki.remove(),e()},t)},t)):setTimeout(()=>e(),t)}),ki},isStarted:()=>typeof ki.status=="number",start:()=>{ki.status||ki.set(0);const i=()=>{setTimeout(()=>{ki.status&&(ki.trickle(),i())},ki.settings.trickleSpeed)};return ki.settings.trickle&&i(),ki},done:i=>!i&&!ki.status?ki:ki.inc(.3+.5*Math.random()).set(1),inc:i=>{let s=ki.status;return s?(typeof i!="number"&&(i=(1-s)*Wt(Math.random()*s,.1,.95)),s=Wt(s+i,0,.994),ki.set(s)):ki.start()},trickle:()=>ki.inc(Math.random()*ki.settings.trickleRate),render:i=>{if(ki.isRendered())return document.getElementById("nprogress");xh(document.documentElement,"nprogress-busy");const s=document.createElement("div");s.id="nprogress",s.innerHTML=ki.settings.template;const a=s.querySelector(ki.settings.barSelector),n=i?"-100":wh(ki.status||0),t=document.querySelector(ki.settings.parent);return Kn(a,{transition:"all 0 linear",transform:"translate3d("+n+"%,0,0)"}),t!==document.body&&xh(t,"nprogress-custom-parent"),t==null||t.appendChild(s),s},remove:()=>{Sh(document.documentElement,"nprogress-busy"),Sh(document.querySelector(ki.settings.parent),"nprogress-custom-parent");const i=document.getElementById("nprogress");i&&wE(i)},isRendered:()=>!!document.getElementById("nprogress")},Wt=(i,s,a)=>i<s?s:i>a?a:i,wh=i=>(-1+i)*100,_E=function(){const i=[];function s(){const a=i.shift();a&&a(s)}return function(a){i.push(a),i.length===1&&s()}}(),Kn=function(){const i=["Webkit","O","Moz","ms"],s={};function a(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(k,p){return p.toUpperCase()})}function n(e){const k=document.body.style;if(e in k)return e;let p=i.length;const r=e.charAt(0).toUpperCase()+e.slice(1);let d;for(;p--;)if(d=i[p]+r,d in k)return d;return e}function t(e){return e=a(e),s[e]??(s[e]=n(e))}function l(e,k,p){k=t(k),e.style[k]=p}return function(e,k){for(const p in k){const r=k[p];r!==void 0&&Object.prototype.hasOwnProperty.call(k,p)&&l(e,p,r)}}}(),xp=(i,s)=>(typeof i=="string"?i:Yl(i)).indexOf(" "+s+" ")>=0,xh=(i,s)=>{const a=Yl(i),n=a+s;xp(a,s)||(i.className=n.substring(1))},Sh=(i,s)=>{const a=Yl(i);if(!xp(i,s))return;const n=a.replace(" "+s+" "," ");i.className=n.substring(1,n.length-1)},Yl=i=>(" "+(i.className||"")+" ").replace(/\s+/gi," "),wE=i=>{i&&i.parentNode&&i.parentNode.removeChild(i)},xE=()=>{wi(()=>{const i=Ba(),s=new Set;s.add(i.currentRoute.value.path),i.beforeEach(a=>{s.has(a.path)||ki.start()}),i.afterEach(a=>{s.add(a.path),ki.done()})})},SE=_s({setup(){xE()}}),PE=Object.freeze(Object.defineProperty({__proto__:null,default:SE},Symbol.toStringTag,{value:"Module"})),TE=JSON.parse('{"encrypt":{},"logo":"/images/logo.png","blog":{"name":"传奇男子","avatar":"/images/cover.gif","medias":false},"markdown":{"headers":{"level":[2,3,4,5,6]}},"headerDepth":6,"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"前端","children":[{"text":"浏览器","link":"/前端/Browser/浏览器渲染原理/","activeMatch":"^/前端/Browser/$"},{"text":"前端三件套","icon":"puzzle-piece","prefix":"/前端/前端三件套/","children":[{"text":"HTML","link":"HTML/","activeMatch":"^/前端/前端三件套/HTML/$"},{"text":"CSS","link":"CSS/","activeMatch":"^/前端/前端三件套/CSS/$"},{"text":"JavaScript","link":"JavaScript/","activeMatch":"^/前端/前端三件套/JavaScript/$"},{"text":"三件套综合案例","link":"综合案例/","activeMatch":"^/前端/前端三件套/综合案例/$"}]},{"text":"TypeScript","link":"/前端/TypeScript/"},{"text":"图形化展示","prefix":"/前端/图形化展示/","children":[{"text":"SVG","link":"SVG/","activeMatch":"^/前端/图形化展示/SVG/$"},{"text":"Canvas","link":"Canvas/Canvas的使用/介绍","activeMatch":"^/前端/图形化展示/Canvas/$"}]},{"text":"工程化","prefix":"/前端/工程化/","children":[{"text":"Webpack","link":"Webpack/"},{"text":"Vite","link":"Vite"},{"text":"Rollup","link":"Rollup/"},{"text":"Monorepo","link":"Monorepo/"}]},{"text":"框架","prefix":"/前端/框架/","children":[{"text":"Vue","link":"Vue/"},{"text":"React","link":"React/"},{"text":"跨平台","link":"跨平台/"},{"text":"小程序","link":"小程序/"}]},{"text":"性能优化","link":"/前端/性能优化/"}]},{"text":"后端","children":[{"text":"NodeJS","link":"/后端/NodeJS/"},{"text":"数据库","link":"/datadb"}]},{"text":"面试题","prefix":"/面试题/","children":[{"text":"前端","link":"前端/TypeScript/"}]}],"sidebar":{"/前端/Browser/":[{"text":"渲染原理","link":"/前端/Browser/浏览器渲染原理/README.md","icon":"wenjian"},{"text":"事件循环机制","link":"/前端/Browser/浏览器事件循环机制/README.md","icon":"wenjian"},{"text":"跨域问题","link":"/前端/Browser/跨域/README.md","icon":"wenjian"},{"text":"Http 缓存","link":"/前端/Browser/Http缓存/README.md","icon":"wenjian"}],"/前端/前端三件套/HTML/":"structure","/前端/前端三件套/CSS/":[{"text":"SASS/SCSS","icon":"wenjianjia","prefix":"/前端/前端三件套/CSS/SCSS/","collapsible":true,"children":[{"text":"SCSS 简化媒体查询","link":"简化媒体查询/","icon":"wenjian"}]},{"text":"Flex 布局","prefix":"/前端/前端三件套/CSS/Flex布局/","icon":"wenjianjia","collapsible":true,"children":[{"text":"Flex 响应式布局","link":"响应式布局/","icon":"wenjian"},{"text":"Flex 结合媒体查询响应式布局","link":"结合媒体查询响应式布局/","icon":"wenjian"}]},{"text":"BFC","link":"/前端/前端三件套/CSS/BFC/README.md","icon":"wenjian"},{"text":"弧形边框","link":"/前端/前端三件套/CSS/弧形边框/README.md","icon":"wenjian"},{"text":"卡片人物 3D 立体效果","link":"/前端/前端三件套/CSS/卡片人物3D立体效果/","icon":"wenjian"},{"text":"文字下划线动画","link":"/前端/前端三件套/CSS/文字下划线动画/","icon":"wenjian"}],"/前端/前端三件套/JavaScript/":[{"text":"原理和基础","icon":"wenjianjia","collapsible":true,"prefix":"/前端/前端三件套/JavaScript/原理和基础/","children":[{"text":"文件相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/文件相关/","children":[{"text":"文件对象类型","link":"文件对象类型/","icon":"wenjian"}]},{"text":"Apply 和 Bind 和 Call 方法","link":"Apply_Bind_Call/README.md","icon":"wenjian"},{"text":"闭包（Closure）","link":"闭包/README.md","icon":"wenjian"},{"text":"构造函数、原型、类","link":"构造函数和类和原型/README.md","icon":"wenjian"},{"text":"绝对路径和相对路径","link":"绝对路径和相对路径/","icon":"wenjian"},{"text":"垃圾回收机制","link":"垃圾回收机制/README.md","icon":"wenjian"},{"text":"Reflect","link":"Reflect/README.md","icon":"wenjian"},{"text":"This 指向","link":"This 指向/README.md","icon":"wenjian"},{"text":"拖拽 API","link":"拖拽API/","icon":"wenjian"}]},{"text":"代码和小案例","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/JavaScript/代码和小案例/","children":[{"text":"Promise 相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/JavaScript/代码和小案例/Promise相关/","children":[{"text":"手写 Promise","collapsible":true,"prefix":"/前端/前端三件套/JavaScript/代码和小案例/Promise相关/手写Promise/","icon":"wenjianjia","children":[{"text":"01 - 基本构造","link":"01-基本构造.md","icon":"wenjian"},{"text":"02 - 抽离、封装、优化","link":"02-抽离-封装-优化.md","icon":"wenjian"},{"text":"03 - 封装操作微队列函数","link":"03-封装操作微队列函数.md","icon":"wenjian"},{"text":"04 - then 函数的实现","link":"04-then函数的实现.md","icon":"wenjian"},{"text":"05 - 执行队列函数","link":"05-执行队列函数.md","icon":"wenjian"},{"text":"06 - 完成封装核心代码","link":"06-核心代码.md","icon":"wenjian"}]},{"text":"模拟微队列","link":"模拟微队列/","icon":"wenjian"},{"text":"判断是否为 Promise","link":"判断是否为Promise/","icon":"wenjian"}]},{"text":"并发请求","link":"并发请求/","icon":"wenjian"},{"text":"并发任务控制","link":"并发任务控制/","icon":"wenjian"},{"text":"扁平化列表转树形结构","link":"扁平化列表转树形结构/README.md","icon":"wenjian"},{"text":"深拷贝","icon":"wenjian","link":"深拷贝/"},{"text":"时间切片","link":"时间切片/","icon":"wenjian"},{"text":"数字格式化","link":"数字格式化/","icon":"wenjian"},{"text":"数字转中文","link":"数字转中文/","icon":"wenjian"}]}],"/前端/前端三件套/综合案例/":[{"text":"大文件上传","collapsible":true,"prefix":"/前端/前端三件套/综合案例/大文件上传/","icon":"wenjianjia","children":[{"text":"前言和实现原理","link":"实现原理/","icon":"wenjian"},{"text":"文件切片上传","link":"文件切片上传/","icon":"wenjian"},{"text":"秒传和断点续传","link":"秒传和断点续传/","icon":"wenjian"}]},{"text":"Excel 相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/Excel/","children":[{"text":"导入和导出 Excel","link":"导入和导出Excel/","icon":"wenjian"},{"text":"Web Woker 优化导出大量数据","link":"WebWoker优化导出大量数据/","icon":"wenjian"}]},{"text":"轮播图","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/轮播图/","children":[{"text":"网页端","link":"网页端/","icon":"wenjian"},{"text":"移动端","link":"移动端/","icon":"wenjian"}]},{"text":"PDF 相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/PDF/","children":[{"text":"PDF 分片加载预览 / 懒加载预览","link":"PDF预览/","icon":"wenjian"}]},{"text":"视频相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/视频相关/","children":[{"text":"获取视频流播放","link":"获取视频流播放视频/","icon":"wenjian"},{"text":"读取视频关键帧画面","link":"读取视频关键帧画面/","icon":"wenjian"}]},{"text":"拖拽相关","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/拖拽相关/","children":[{"text":"拖拽 API 实现拖拽","icon":"wenjianjia","collapsible":true,"prefix":"/前端/前端三件套/综合案例/拖拽相关/拖拽API实现拖拽/","children":[{"text":"列表拖拽排序","link":"列表拖拽排序/","icon":"wenjian"},{"text":"课程表拖拽","link":"课程表拖拽/","icon":"wenjian"}]},{"text":"鼠标事件实现拖拽","icon":"wenjianjia","collapsible":true,"prefix":"/前端/前端三件套/综合案例/拖拽相关/鼠标事件实现拖拽/","children":[{"text":"简单的拖拽","link":"简单的拖拽/","icon":"wenjian"}]}]},{"text":"Web Api","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/WebAPI/","children":[{"text":"IntersectionObserver","link":"IntersectionObserver/","icon":"wenjian"},{"text":"Web Animation API","link":"AnimationAPI/","icon":"wenjian"},{"text":"监控网络状态","link":"监控网络状态/","icon":"wenjian"}]},{"text":"WebSocket","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/WebSocket","children":[{"text":"基本使用","link":"基本使用/","icon":"wenjian"},{"text":"心跳机制","link":"心跳机制/","icon":"wenjian"}]},{"text":"虚拟列表","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/虚拟列表/","children":[{"text":"固定高度","link":"固定高度/基础做法/","icon":"wenjian"},{"text":"固定高度优化（添加上下缓冲区）","link":"固定高度/添加上下缓冲区/","icon":"wenjian"},{"text":"固定高度优化（添加节流）","link":"固定高度/添加节流/","icon":"wenjian"},{"text":"不定高度","link":"不定高度/","icon":"wenjian"}]},{"text":"页面适配","collapsible":true,"icon":"wenjianjia","prefix":"/前端/前端三件套/综合案例/页面适配/","children":[{"text":"大屏适配","link":"大屏适配/","icon":"wenjian"},{"text":"移动端适配","link":"移动端适配/","icon":"wenjian"}]},{"text":"FLIP 动画","link":"FLIP动画/","icon":"wenjian"},{"text":"放大镜效果","link":"放大镜效果/","icon":"wenjian"},{"text":"高量级任务执行优化","link":"高量级任务执行优化/","icon":"wenjian"},{"text":"高度的自动过度","link":"高度自动过渡/README.md","icon":"wenjian"},{"text":"监听网页加载进度","link":"监听网页加载进度/README.md","icon":"wenjian"},{"text":"渐进式图片加载效果","link":"渐进式图片加载效果/","icon":"wenjian"},{"text":"瀑布流布局","link":"瀑布流布局/README.md","icon":"wenjian"},{"text":"图片懒加载","link":"图片懒加载/","icon":"wenjian"},{"text":"Server Sent Event（SSE）","link":"SSE/README.md","icon":"wenjian"},{"text":"无感刷新 Token","link":"无感刷新Token/","icon":"wenjian"}],"/前端/TypeScript/":[{"text":"TS 内置工具类的使用","link":"TS内置工具类的使用/","icon":"wenjian"}],"/前端/图形化展示/Canvas/":[{"text":"Canvas 的使用","collapsible":true,"prefix":"/前端/图形化展示/Canvas/Canvas的使用/","icon":"wenjianjia","children":[{"text":"介绍","link":"介绍.md","icon":"wenjian"},{"text":"绘制图形","link":"绘制图形.md","icon":"wenjian"},{"text":"绘图样式","link":"绘图样式.md","icon":"wenjian"},{"text":"绘制文本","link":"绘制文本.md","icon":"wenjian"},{"text":"绘制图片","link":"绘制图片.md","icon":"wenjian"},{"text":"进阶","link":"进阶.md","icon":"wenjian"}]},{"text":"Canvas 二维案例","collapsible":true,"prefix":"/前端/图形化展示/Canvas/二维案例/","icon":"wenjianjia","children":[{"text":"截图","link":"截图/","icon":"wenjian"},{"text":"放大镜","link":"放大镜/","icon":"wenjian"},{"text":"刮刮乐","link":"刮刮乐/","icon":"wenjian"},{"text":"电子签名","link":"电子签名/","icon":"wenjian"}]},{"text":"Canvas 三维案例","collapsible":true,"icon":"wenjianjia","prefix":"/前端/图形化展示/Canvas/三维案例/","link":"/前端/图形化展示/Canvas/三维案例/"}],"/前端/图形化展示/SVG/":[{"text":"SVG 的基本使用","collapsible":true,"prefix":"/前端/图形化展示/SVG/SVG的基本使用/","icon":"wenjianjia","children":[{"text":"介绍","link":"介绍/","icon":"wenjian"}]},{"text":"图标描边动画","link":"描边动画/","icon":"wenjian"}],"/前端/框架/Vue":[{"text":"Vue3","icon":"wenjianjia","collapsible":true,"children":[{"text":"原理和基础","collapsible":true,"icon":"wenjianjia","prefix":"/前端/框架/Vue/Vue3/原理和基础/","children":[{"text":"响应式原理","link":"响应式原理/README.md","icon":"wenjian"},{"text":"虚拟 Dom 和 Diff 算法","link":"虚拟 Dom 和 Diff 算法/README.md","icon":"wenjian"},{"text":"Vue3 核心技术","link":"Vue3 核心技术/README.md","icon":"wenjian"}]},{"text":"代码和小案例","collapsible":true,"icon":"wenjianjia","prefix":"/前端/框架/Vue/Vue3/代码和小案例/","children":[{"text":"权限相关","prefix":"/前端/框架/Vue/Vue3/代码和小案例/权限相关/","icon":"wenjianjia","collapsible":true,"children":[{"text":"权限的级别","link":"权限的级别/","icon":"wenjian"},{"text":"页面级权限","link":"页面级权限/","icon":"wenjian"},{"text":"组件级权限","link":"组件级权限/","icon":"wenjian"}]},{"text":"自定义指令","prefix":"/前端/框架/Vue/Vue3/代码和小案例/自定义指令/","icon":"wenjianjia","collapsible":true,"children":[{"text":"图片懒加载","link":"图片懒加载/","icon":"wenjian"},{"text":"resize","link":"resize/","icon":"wenjian"}]},{"text":"多系统入口","link":"多系统入口/","icon":"wenjian"},{"text":"Element-Plus 动态侧边栏","link":"动态侧边栏/README.md","icon":"wenjian"},{"text":"计算属性传参","link":"计算属性传参/README.md","icon":"wenjian"},{"text":"计算属性拦截 v-model 进行双向绑定","link":"计算属性拦截 v-model 进行双向绑定/README.md","icon":"wenjian"},{"text":"获取组件的 TS 类型","link":"获取组件的 TS 类型/README.md","icon":"wenjian"},{"text":"token 无感刷新","link":"Token无感刷新/","icon":"wenjian"}]}]},{"text":"Vue2","icon":"wenjianjia","collapsible":true,"children":[{"text":"原理和基础","collapsible":true,"icon":"wenjianjia","prefix":"/前端/框架/Vue/Vue2/原理和基础/","children":[{"text":"响应式原理","link":"响应式原理/README.md","icon":"wenjian"},{"text":"虚拟 Dom 和 Diff 算法","link":"虚拟Dom和Diff算法/","icon":"wenjian"},{"text":"nextTick","link":"Vue.nextTick/","icon":"wenjian"},{"text":"set","link":"Vue.set/","icon":"wenjian"}]},{"text":"代码和小案例","icon":"wenjianjia","collapsible":true,"prefix":"/前端/框架/Vue/Vue2/代码和小案例/","children":[{"text":"打包后资源加载路径和路由的前缀","link":"打包后资源加载路径和路由的前缀/README.md","icon":"wenjian"}]}]}],"/前端/框架/React":[{"text":"React - 函数式组件","collapsible":true,"icon":"wenjianjia","children":[{"text":"基本使用","icon":"wenjianjia","collapsible":true,"prefix":"/前端/框架/React/React18/基本使用/","children":[{"text":"基本使用","link":"基本使用/","icon":"wenjian"},{"text":"组件基础","link":"组件基础/","icon":"wenjian"},{"text":"组件通信","link":"组件通信/","icon":"wenjian"},{"text":"React 和 TypeScript","link":"React和TypeScript/","icon":"wenjian"}]},{"text":"路由","prefix":"/前端/框架/React/React18/路由/","icon":"wenjianjia","collapsible":true,"children":[{"text":"基本使用","link":"基本使用/","icon":"wenjian"},{"text":"路由权限","link":"路由权限/","icon":"wenjian"},{"text":"动态菜单","link":"动态菜单/","icon":"wenjian"}]},{"text":"Hooks","prefix":"/前端/框架/React/React18/Hooks/","icon":"wenjianjia","collapsible":true,"children":[{"text":"Hook 的基本使用","link":"Hook的基本使用/","icon":"wenjian"},{"text":"useImperativeHandle","link":"useImperativeHandle/","icon":"wenjian"},{"text":"useMemo","link":"useMemo/","icon":"wenjian"},{"text":"useCallback","link":"useCallback/","icon":"wenjian"},{"text":"useReducer","link":"useReducer/","icon":"wenjian"}]},{"text":"API","prefix":"/前端/框架/React/React18/API/","icon":"wenjianjia","collapsible":true,"children":[{"text":"forwardRef","link":"forwardRef/","icon":"wenjian"},{"text":"memo","link":"memo/","icon":"wenjian"}]},{"text":"Redux","prefix":"/前端/框架/React/React18/Redux/","icon":"wenjianjia","collapsible":true,"children":[{"text":"Redux","link":"redux/","icon":"wenjian"},{"text":"React-Redux","link":"react-redux/","icon":"wenjian"}]},{"text":"代码和小案例","icon":"wenjianjia","collapsible":true,"prefix":"/前端/框架/React/React18/代码和小案例/","children":[{"text":"React-Redux小案例","link":"React-Redux小案例/","icon":"wenjian"}]}]},{"text":"React - 类组件","collapsible":true,"icon":"wenjianjia","prefix":"/前端/框架/React/React16","link":"/前端/框架/React/React16/"},{"text":"ReactNative","collapsible":true,"prefix":"/前端/框架/ReactNative/","icon":"wenjianjia","children":[]}],"/前端/框架/跨平台":[{"text":"uni-app","collapsible":true,"prefix":"/前端/框架/跨平台/UniApp/","icon":"wenjianjia","children":[{"text":"项目的两种创建方式","link":"项目的两种创建方式/README.md","icon":"wenjian"},{"text":"自定义 Tabbar","link":"自定义Tabbar/README.md","icon":"wenjian"}]}],"/前端/框架/小程序":[{"text":"微信小程序","collapsible":true,"prefix":"/前端/框架/小程序/微信小程序/","icon":"wenjianjia","children":[{"text":"授权登录","link":"登录流程/","icon":"wenjian"},{"text":"微信支付","link":"微信支付/","icon":"wenjian"}]}],"/前端/工程化/":[{"text":"Webpack","collapsible":true,"icon":"wenjianjia","children":[{"text":"Webpack5","collapsible":true,"icon":"wenjianjia","prefix":"/前端/工程化/Webpack/Webpack5/","children":[{"text":"Webpack5_基础","link":"Webpack5_基础.md","icon":"wenjian"},{"text":"Webpack5_高级","link":"Webpack5_高级.md","icon":"wenjian"},{"text":"Webpack5_搭建脚手架","link":"Webpack5_搭建脚手架.md","icon":"wenjian"}]},{"text":"Webpack4","icon":"wenjianjia","link":"/前端/构建工具/Webpack/Webpack4/"}]},{"text":"Vite","collapsible":true,"icon":"wenjianjia","link":"/前端/工程化/Vite/README.md"},{"text":"Rollup","collapsible":true,"icon":"wenjianjia","link":"/前端/工程化/Rollup/README.md"},{"text":"Monorepo","collapsible":true,"icon":"wenjianjia","link":"/前端/工程化/Monorepo/README.md"}],"/前端/性能优化/":[{"text":"性能指标","icon":"wenjian","link":"/前端/性能优化/性能指标/"}],"/面试题/前端/":[{"text":"前端","collapsible":true,"prefix":"/面试题/前端/","icon":"wenjianjia","children":[{"text":"框架","icon":"wenjianjia","collapsible":true,"prefix":"/面试题/前端/框架/","children":[{"text":"MVVM 和 MVC","link":"MVVM和MVC/"}]},{"text":"JavaScript","link":"JavaScript/"},{"text":"TypeScript","link":"TypeScript/"},{"text":"八股文","link":"八股文/"}]},{"text":"后端","collapsible":true,"link":"/面试题/后端/"}],"/后端/NodeJS":[{"text":"EggJS","icon":"wenjianjia","collapsible":true,"prefix":"/后端/NodeJS/EggJS/","children":[{"text":"生成 Token","link":"生成Token/","icon":"wenjian"}]},{"text":"路径相关","link":"/后端/NodeJS/路径相关/","icon":"wenjian"},{"text":"JWT","link":"/后端/NodeJS/JWT/","icon":"wenjian"}]}}}}'),RE=Z(TE),Sp=()=>RE,Pp=Symbol(""),LE=()=>{const i=mi(Pp);if(!i)throw new Error("useThemeLocaleData() is called without provider.");return i},jE=(i,s)=>{const{locales:a,...n}=i;return{...n,...a==null?void 0:a[s]}},IE=_s({enhance({app:i}){const s=Sp(),a=i._context.provides[ql],n=F(()=>jE(s.value,a.routeLocale.value));i.provide(Pp,n),Object.defineProperties(i.config.globalProperties,{$theme:{get(){return s.value}},$themeLocale:{get(){return n.value}}})}}),OE=Object.freeze(Object.defineProperty({__proto__:null,default:IE},Symbol.toStringTag,{value:"Module"})),VE=/language-(shellscript|shell|bash|sh|zsh)/,ME=({delay:i=500,duration:s=2e3,locales:a,selector:n,showInMobile:t,ignoreSelector:l=[],transform:e})=>{const k=Gl("(max-width: 419px)"),p=F(()=>!k.value||t),r=bn(a),d=Di(),c=m=>{var C;if(m.hasAttribute("copy-code-registered"))return;const f=document.createElement("button");f.type="button",f.classList.add("vp-copy-code-button"),f.setAttribute("aria-label",r.value.copy),f.setAttribute("data-copied",r.value.copied),(C=m.parentElement)==null||C.insertBefore(f,m),m.setAttribute("copy-code-registered","")};oi(()=>[d.value.path,p.value],async()=>{document.body.classList.toggle("copy-code-disabled",!p.value),p.value&&(await ia(),await up(i),document.querySelectorAll(n.join(",")).forEach(c))},{immediate:!0});const{copy:B}=qB({legacy:!0}),u=new WeakMap,v=(m,f,C)=>{const A=f.cloneNode(!0);l.length&&A.querySelectorAll(l.join(",")).forEach(O=>O.remove()),e&&e(A);let D=A.textContent||"";VE.test(m.className)&&(D=D.replace(/^ *(\$|>) /gm,"")),B(D).then(()=>{if(s<=0)return;C.classList.add("copied"),clearTimeout(u.get(C));const O=setTimeout(()=>{C.classList.remove("copied"),C.blur(),u.delete(C)},s);u.set(C,O)})};Ri("click",m=>{const f=m.target;if(p.value&&f.matches('div[class*="language-"] > button.vp-copy-code-button')){const C=f.parentElement,A=f.nextElementSibling;if(!C||!A)return;v(C,A,f)}})};var HE={"/":{copy:"复制代码",copied:"已复制"}},$E=['.theme-hope-content div[class*="language-"] pre'];const NE=_s({setup:()=>{ME({selector:$E,locales:HE,duration:2e3,delay:500,showInMobile:!1})}}),zE=Object.freeze(Object.defineProperty({__proto__:null,default:NE},Symbol.toStringTag,{value:"Module"})),di=({name:i="",color:s="currentColor",ariaLabel:a},{attrs:n,slots:t})=>{var l;return h("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${i}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":a??`${i} icon`,...n},(l=t.default)==null?void 0:l.call(t))};di.displayName="IconBase";const Tp=({size:i=48,stroke:s=4,wrapper:a=!0,height:n=2*i})=>{const t=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:i,height:i,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":s,"stroke-linecap":"round"},[h("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?h("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${n}px`},t):t};Tp.displayName="LoadingIcon";const Ql=(i,{slots:s})=>{var a;return(a=s.default)==null?void 0:a.call(s)},WE=i=>oa(i)?i:`https://github.com/${i}`,Xl=(i="")=>!oa(i)||/github\.com/.test(i)?"GitHub":/bitbucket\.org/.test(i)?"Bitbucket":/gitlab\.com/.test(i)?"GitLab":/gitee\.com/.test(i)?"Gitee":null,Rp=()=>h(di,{name:"github"},()=>h("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Rp.displayName="GitHubIcon";const Lp=()=>h(di,{name:"gitee"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Lp.displayName="GiteeIcon";const jp=()=>h(di,{name:"bitbucket"},()=>h("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));jp.displayName="BitbucketIcon";const Ip=()=>h(di,{name:"source"},()=>h("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Ip.displayName="SourceIcon";const qE=({link:i,type:s=Xl(i??"")})=>{if(!s)return null;const a=s.toLowerCase();return h(a==="bitbucket"?jp:a==="github"?Rp:a==="gitlab"?"GitLab":a==="gitee"?Lp:Ip)},UE=(i,s=0)=>{let a=3735928559^s,n=1103547991^s;for(let t=0,l;t<i.length;t++)l=i.charCodeAt(t),a=Math.imul(a^l,2654435761),n=Math.imul(n^l,1597334677);return a=Math.imul(a^a>>>16,2246822507),a^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(a^a>>>13,3266489909),4294967296*(2097151&n)+(a>>>0)},Sn=(i,s)=>UE(i)%s;let JE=class{constructor(){Ct(this,"containerElement");Ct(this,"messageElements",{});const s="message-container",a=document.getElementById(s);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=s,document.body.appendChild(this.containerElement))}pop(s,a=2e3){const n=document.createElement("div"),t=Date.now();return n.className="message move-in",n.innerHTML=s,this.containerElement.appendChild(n),this.messageElements[t]=n,a>0&&setTimeout(()=>{this.close(t)},a),t}close(s){if(s){const a=this.messageElements[s];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[s]})}else bs(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}};const Op=/#.*$/u,GE=i=>{const s=Op.exec(i);return s?s[0]:""},Ph=i=>decodeURI(i).replace(Op,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),Vp=(i,s)=>{if(!vp(s))return!1;const a=Ph(i.path),n=Ph(s),t=GE(s);return t?t===i.hash&&(!n||a===n):a===n};var KE=i=>Object.prototype.toString.call(i)==="[object Object]",dn=i=>typeof i=="string";const Mp=Array.isArray,Th=i=>KE(i)&&dn(i.name),cn=(i,s=!1)=>i?Mp(i)?i.map(a=>dn(a)?{name:a}:Th(a)?a:null).filter(a=>a!==null):dn(i)?[{name:i}]:Th(i)?[i]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${s?"":"| false"} | undefined\`, but got`,i),[]):[],Hp=(i,s)=>{if(i){if(Mp(i)&&i.every(dn))return i;if(dn(i))return[i];console.error(`Expect ${s} to be \`string[] | string | undefined\`, but got`,i)}return[]},$p=i=>Hp(i,"category"),Np=i=>Hp(i,"tag"),YE='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',QE='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var XE={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const qt=XE,Rh={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},ZE=(i,s,a)=>{const n=document.createElement(i);return mn(s)&&bs(s).forEach(t=>{if(t.indexOf("data"))n[t]=s[t];else{const l=t.replace("data","");n.dataset[l]=s[t]}}),n},Zl=i=>({...qt,...i,jsLib:Array.from(new Set([...qt.jsLib??[],...i.jsLib??[]])),cssLib:Array.from(new Set([...qt.cssLib??[],...i.cssLib??[]]))}),Da=(i,s)=>{if(vp(i[s]))return i[s];const a=new Promise(n=>{var l;const t=document.createElement("script");t.src=s,(l=document.querySelector("body"))==null||l.appendChild(t),t.onload=()=>{n()}});return i[s]=a,a},ig=(i,s)=>{if(s.css&&Array.from(i.childNodes).every(a=>a.nodeName!=="STYLE")){const a=ZE("style",{innerHTML:s.css});i.appendChild(a)}},sg=(i,s,a)=>{const n=a.getScript();if(n&&Array.from(s.childNodes).every(t=>t.nodeName!=="SCRIPT")){const t=document.createElement("script");t.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${i} .vp-code-demo-display').shadowRoot;
${n}}`)),s.appendChild(t)}},ag=["html","js","css"],ng=i=>{const s=bs(i),a={html:[],js:[],css:[],isLegal:!1};return ag.forEach(n=>{const t=s.filter(l=>Rh[n].types.includes(l));if(t.length){const l=t[0];a[n]=[i[l].replace(/^\n|\n$/g,""),Rh[n].map[l]??l]}}),a.isLegal=(!a.html.length||a.html[1]==="none")&&(!a.js.length||a.js[1]==="none")&&(!a.css.length||a.css[1]==="none"),a},zp=i=>i.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Wp=i=>`<div id="app">
${zp(i)}
</div>`,tg=i=>`${i.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,lg=i=>i.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),qp=i=>`(function(exports){var module={};module.exports=exports;${i};return module.exports.__esModule.exports.default:module.exports;})({})`,eg=(i,s)=>{const a=Zl(s),n=i.js[0]??"";return{...a,html:zp(i.html[0]??""),js:n,css:i.css[0]??"",isLegal:i.isLegal,getScript:()=>{var t;return a.useBabel?((t=window.Babel.transform(n,{presets:["es2015"]}))==null?void 0:t.code)??"":n}}},hg=/<template>([\s\S]+)<\/template>/u,kg=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,pg=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,rg=(i,s)=>{const a=Zl(s),n=i.html[0]??"",t=hg.exec(n),l=kg.exec(n),e=pg.exec(n),k=(t==null?void 0:t[1].replace(/^\n|\n$/g,""))??"",[p="",r=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],[d="",c=""]=e?[e[4].replace(/^\n|\n$/g,""),e[3]]:[],o=r===""&&(c===""||c==="css");return{...a,html:Wp(k),js:lg(p),css:d,isLegal:o,jsLib:[a.vue,...a.jsLib],getScript:()=>{var u,v;const B=s.useBabel?((v=(u=window.Babel)==null?void 0:u.transform(p,{presets:["es2015"]}))==null?void 0:v.code)??"":p.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${qp(B)};appOptions.template=\`${k.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},dg=(i,s)=>{var t;const a=Zl(s),n=i.js[0]??"";return{...a,html:Wp(""),js:tg(n),css:i.css[0]??((t=i.js[0])==null?void 0:t.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:i.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var e,k;const l=((k=(e=window.Babel)==null?void 0:e.transform(n,{presets:["es2015","react"]}))==null?void 0:k.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${qp(l)}))`}}},_a={},cg=i=>Promise.all([Da(_a,i.babel),Da(_a,i.react),Da(_a,i.reactDOM)]),og=i=>{const s=[Da(_a,i.vue)];return i.useBabel&&s.push(Da(_a,i.babel)),Promise.all(s)},Bg=i=>i.useBabel?Da(_a,i.babel):Promise.resolve();var Eg=N({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const[a,n]=rn(!1),t=Mi(),l=Mi(),e=Z("0"),k=Z(!1),p=F(()=>JSON.parse(i.config?fh(i.config):"{}")),r=F(()=>{const u=JSON.parse(fh(i.code));return ng(u)}),d=F(()=>i.type==="react"?dg(r.value,p.value):i.type==="vue"?rg(r.value,p.value):eg(r.value,p.value)),c=F(()=>d.value.isLegal),o=(u=!1)=>{const v=t.value.attachShadow({mode:"open"}),m=document.createElement("div");m.classList.add("code-demo-app"),v.appendChild(m),c.value?(u&&(m.innerHTML=d.value.html),ig(v,d.value),sg(i.id,v,d.value),e.value="0"):e.value="auto",k.value=!0},B=()=>{switch(i.type){case"react":return cg(d.value).then(()=>o());case"vue":return og(d.value).then(()=>o());default:return Bg(d.value).then(()=>o(!0))}};return Ri("beforeprint",()=>{n(!0)}),wi(()=>{setTimeout(()=>{B()},800)}),()=>{var u;return h("div",{class:"vp-code-demo",id:i.id},[h("div",{class:"vp-code-demo-header"},[d.value.isLegal?h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",a.value?"down":"end"],onClick:()=>{e.value=a.value?"0":`${l.value.clientHeight+13.8}px`,n()}}):null,i.title?h("span",{class:"vp-code-demo-title"},decodeURIComponent(i.title)):null,d.value.isLegal&&d.value.jsfiddle!==!1?h("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h("input",{type:"hidden",name:"html",value:d.value.html}),h("input",{type:"hidden",name:"js",value:d.value.js}),h("input",{type:"hidden",name:"css",value:d.value.css}),h("input",{type:"hidden",name:"wrap",value:"1"}),h("input",{type:"hidden",name:"panel_js",value:"3"}),h("input",{type:"hidden",name:"resources",value:[...d.value.cssLib,...d.value.jsLib].join(",")}),h("button",{type:"submit",class:"jsfiddle-button",innerHTML:QE,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!d.value.isLegal||d.value.codepen!==!1?h("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h("input",{type:"hidden",name:"data",value:JSON.stringify({html:d.value.html,js:d.value.js,css:d.value.css,js_external:d.value.jsLib.join(";"),css_external:d.value.cssLib.join(";"),layout:d.value.codepenLayout,html_pre_processor:r.value?r.value.html[1]:"none",js_pre_processor:r.value?r.value.js[1]:d.value.jsx?"babel":"none",css_pre_processor:r.value?r.value.css[1]:"none",editors:d.value.codepenEditors})}),h("button",{type:"submit",innerHTML:YE,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),k.value?null:h(Tp,{class:"vp-code-demo-loading"}),h("div",{ref:t,class:"vp-code-demo-display",style:{display:c.value&&k.value?"block":"none"}}),h("div",{class:"vp-code-demo-code-wrapper",style:{height:e.value}},h("div",{ref:l,class:"vp-code-demo-codes"},(u=s.default)==null?void 0:u.call(s)))])}}}),gg=N({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(i,{slots:s}){const[a,n]=rn(!1),t=Mi(),l=Z("0");return Ri("beforeprint",()=>{n(!0)}),()=>{var e,k;return h("div",{class:"vp-md-demo",id:i.id},[h("div",{class:"vp-md-demo-header"},[h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",a.value?"down":"end"],onClick:()=>{l.value=a.value?"0":`${t.value.clientHeight+13.8}px`,n()}}),i.title?decodeURIComponent(i.title):null]),h("div",{class:"vp-md-demo-display"},(e=s.default)==null?void 0:e.call(s)),h("div",{class:"vp-md-demo-code-wrapper",style:{height:l.value}},h("div",{ref:t,class:"vp-md-demo-codes"},(k=s.code)==null?void 0:k.call(s)))])}}});const yg=()=>{Ri("beforeprint",()=>{document.querySelectorAll("details").forEach(i=>{i.open=!0})})},Ag=_s({enhance:({app:i})=>{i.component("CodeDemo",Eg),i.component("MdDemo",gg)},setup:()=>{yg()}}),ug=Object.freeze(Object.defineProperty({__proto__:null,default:Ag},Symbol.toStringTag,{value:"Module"})),vg=Z({}),Up=Symbol(""),Fg=()=>mi(Up),fg=i=>{i.provide(Up,vg)},mg='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',Cg=i=>Ci(i)?Array.from(document.querySelectorAll(i)):i.map(s=>Array.from(document.querySelectorAll(s))).flat(),Jp=i=>new Promise((s,a)=>{i.complete?s({type:"image",element:i,src:i.src,width:i.naturalWidth,height:i.naturalHeight,alt:i.alt,msrc:i.src}):(i.onload=()=>s(Jp(i)),i.onerror=n=>a(n))}),bg=(i,{download:s=!0,fullscreen:a=!0}={})=>{i.on("uiRegister",()=>{if(i.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(n,t)=>{const l=[];let e=-1;for(let k=0;k<t.getNumItems();k++){const p=document.createElement("div");p.className="photo-swipe-bullet",p.onclick=r=>{t.goTo(l.indexOf(r.target))},l.push(p),n.appendChild(p)}t.on("change",()=>{e>=0&&l[e].classList.remove("active"),l[t.currIndex].classList.add("active"),e=t.currIndex})}}),a){const{isSupported:n,toggle:t}=Kl();n.value&&i.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{t()}})}s&&i.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(n,t)=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),t.on("change",()=>{n.setAttribute("href",t.currSlide.data.src)})}})})},Dg=(i,{scrollToClose:s=!0,download:a=!0,fullscreen:n=!0,...t})=>y(async()=>{const{default:l}=await import("./photoswipe.esm-GXRgw7eJ.js");return{default:l}},[]).then(({default:l})=>{let e=null;const k=i.map(p=>({html:mg,element:p,msrc:p.src}));return i.forEach((p,r)=>{const d=()=>{e==null||e.destroy(),e=new l({preloaderDelay:0,showHideAnimationType:"zoom",...t,dataSource:k,index:r,...s?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),bg(e,{download:a,fullscreen:n}),e.addFilter("thumbEl",()=>p),e.addFilter("placeholderSrc",()=>p.src),e.init()};p.getAttribute("photo-swipe")||(p.style.cursor="zoom-in",p.addEventListener("click",()=>{d()}),p.addEventListener("keypress",({key:c})=>{c==="Enter"&&d()}),p.setAttribute("photo-swipe","")),Jp(p).then(c=>{k.splice(r,1,c),e==null||e.refreshSlideContent(r)})}),s?Ri("wheel",()=>{e==null||e.close()}):()=>{}}),_g=({selector:i,locales:s,delay:a=500,download:n=!0,fullscreen:t=!0,scrollToClose:l=!0})=>{const e=Fg(),k=bn(s),p=Di(),r=Ei();let d=null;const c=()=>{const{photoSwipe:o}=r.value;o!==!1&&ia().then(()=>up(a)).then(async()=>{const B=Ci(o)?o:i;d=await Dg(Cg(B),{...e.value,...k.value,download:n,fullscreen:t,scrollToClose:l})})};wi(()=>{c(),oi(()=>[p.value.path,e.value],()=>{d==null||d(),c()})}),yn(()=>{d==null||d()})};var wg={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const xg=".theme-hope-content :not(a) > img:not([no-view])",Sg=wg,Pg=800,Tg=!0,Rg=!0,Lg=!0,jg=_s({enhance:({app:i})=>{fg(i)},setup:()=>{_g({selector:xg,delay:Pg,locales:Sg,download:Tg,fullscreen:Rg,scrollToClose:Lg})}}),Ig=Object.freeze(Object.defineProperty({__proto__:null,default:jg},Symbol.toStringTag,{value:"Module"})),Gp=()=>{const i=Di();return F(()=>i.value.readingTime??null)},Kp=(i,s)=>{const{minutes:a,words:n}=i,{less1Minute:t,word:l,time:e}=s;return{time:a<1?t:e.replace("$time",Math.round(a).toString()),words:l.replace("$word",n.toString())}};var Lh={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const jh={words:"",time:""},rl=typeof Lh>"u"?null:Lh,Yp=()=>rl?bn(rl):F(()=>null),Og=()=>{if(typeof rl>"u")return F(()=>jh);const i=Gp(),s=Yp();return F(()=>i.value&&s.value?Kp(i.value,s.value):jh)},Os=()=>Sp(),ei=()=>LE(),Ki=()=>{const i=Os();return F(()=>!!i.value.pure)},Zn=()=>null,Vg="719px",Mg="1440px",Hg="false",$g="9",ga={mobileBreakPoint:Vg,pcBreakPoint:Mg,enableThemeColor:Hg,colorNumber:$g},ie={"/前端/前端三件套/HTML/":[""]},Qp=i=>{const{icon:s="",color:a,size:n}=i,t=a||n?{}:null;return a&&(t.color=a),n&&(t.height=Number.isNaN(Number(n))?n:`${n}px`),oa(s)?h("img",{class:"icon",src:s,alt:"","no-view":"",style:t}):ut(s)?h("img",{class:"icon",src:ui(s),alt:"","aria-hidden":"","no-view":"",style:t}):h(ps("FontIcon"),i)};Qp.displayName="HopeIcon";var Ni=Qp;const Xp=()=>{const i=ei();return F(()=>i.value.author)},Ng="http://.",ya=()=>{const i=Ba(),s=Ds();return a=>{if(a)if(ut(a))s.path!==a&&i.push(a);else if(fn(a))window&&window.open(a);else{const n=s.path.slice(0,s.path.lastIndexOf("/"));i.push(new URL(`${n}/${encodeURI(a)}`,Ng).pathname)}}},Zp=()=>{const i=Ei(),s=Xp();return F(()=>{const{author:a}=i.value;return a?cn(a):a===!1?[]:cn(s.value,!1)})},zg=()=>{const i=Ei(),s=mi(Symbol.for("categoryMap"));return F(()=>$p(i.value.category??i.value.categories).map(a=>{var n;return{name:a,path:((n=s==null?void 0:s.value.map[a])==null?void 0:n.path)??""}}))},Wg=()=>{const i=Ei(),s=mi(Symbol.for("tagMap"));return F(()=>Np(i.value.tag??i.value.tags).map(a=>{var n;return{name:a,path:((n=s==null?void 0:s.value.map[a])==null?void 0:n.path)??""}}))},qg=()=>{const i=Ei(),s=Di();return F(()=>{const a=Ul(i.value.date);if(a)return a;const{createdTime:n}=s.value.git??{};return n?new Date(n):null})},Ug=()=>{const i=ei(),s=Di(),a=Ei(),n=Zp(),t=zg(),l=Wg(),e=qg(),k=Gp(),p=Og(),r=F(()=>({author:n.value,category:t.value,date:e.value,localizedDate:s.value.localizedDate,tag:l.value,isOriginal:a.value.isOriginal??!1,readingTime:k.value,readingTimeLocale:p.value,pageview:a.value.pageview??!0})),d=F(()=>a.value.pageInfo??i.value.pageInfo??null);return{info:r,items:d}},se=(i,s)=>"activeMatch"in s?new RegExp(s.activeMatch,"u").test(i.path):Vp(i,s.link),ae=(i,s)=>"children"in s?!!s.prefix&&Vp(i,s.prefix)||s.children.some(a=>ae(i,a)):se(i,s),dl=i=>!$l(i)&&!fn(i);var Wi=(i=>(i.title="t",i.shortTitle="s",i.icon="i",i.index="I",i.order="O",i.breadcrumbExclude="b",i))(Wi||{}),$i=(i=>(i.type="y",i.author="a",i.date="d",i.localizedDate="l",i.category="c",i.tag="g",i.isEncrypted="n",i.isOriginal="o",i.readingTime="r",i.excerpt="e",i.sticky="u",i.cover="v",i))($i||{}),ir=(i=>(i.article="a",i.home="h",i.slide="s",i.page="p",i))(ir||{});const pt=(i,s=!1,a)=>{const{meta:n,path:t,notFound:l}=cs(i,a);return l?{text:t,link:t}:{text:!s&&n[Wi.shortTitle]?n[Wi.shortTitle]:n[Wi.title]||t,link:t,...n[Wi.icon]?{icon:n[Wi.icon]}:{}}},pa=(i="",s="")=>ut(s)||fn(s)?s:`${Kk(i)}${s}`,sr=(i,s)=>{const a=Ci(i)?pt(pa(s,i)):i.link?{...i,link:dl(i.link)?cs(pa(s,i.link)).path:i.link}:i;if("children"in a){const n=pa(s,a.prefix),t=a.children==="structure"?ie[n]:a.children;return{...a,prefix:n,children:t.map(l=>sr(l,n))}}return{...a}},cl=({config:i,prefix:s=""})=>i.map(a=>sr(a,s)),Jg=({config:i,routePath:s,headerDepth:a})=>{const n=bs(i).sort((t,l)=>l.length-t.length);for(const t of n)if(kt(decodeURI(s),t)){const l=i[t];return cl({config:l==="structure"?ie[t]:l||[],headerDepth:a,prefix:t})}return console.warn(`${decodeURI(s)} is missing sidebar config.`),[]},Gg=({config:i,headerDepth:s,routeLocale:a,routePath:n})=>i==="structure"?cl({config:ie[a],headerDepth:s,prefix:a}):pl(i)?cl({config:i,headerDepth:s}):mn(i)?Jg({config:i,routePath:n,headerDepth:s}):[],ar=Symbol(""),Kg=()=>{const i=Ei(),s=ei(),a=sa(),n=nB(),t=F(()=>i.value.home?!1:i.value.sidebar??s.value.sidebar??"structure"),l=F(()=>i.value.headerDepth??s.value.headerDepth??2),e=F(()=>Gg({config:t.value,headerDepth:l.value,routeLocale:a.value,routePath:n.value}));ys(ar,e)},ne=()=>{const i=mi(ar);if(!i)throw new Error("useSidebarItems() is called without provider.");return i},{mobileBreakPoint:Yg,pcBreakPoint:Qg}=ga,Ih=i=>i.endsWith("px")?Number(i.slice(0,-2)):null,Pn=()=>{const i=Z(!1),s=Z(!1),a=()=>{i.value=window.innerWidth<=(Ih(Yg)??719),s.value=window.innerWidth>=(Ih(Qg)??1440)};return Ri("resize",a,!1),Ri("orientationchange",a,!1),wi(()=>{a()}),{isMobile:i,isPC:s}},nr=Symbol(""),Tn=()=>{const i=mi(nr);if(!i)throw new Error("useDarkmode() is called without provider.");return i},Xg=i=>{const s=Os(),a=XB(),n=F(()=>s.value.darkmode??"switch"),t=QB("vuepress-theme-hope-scheme","auto"),l=F(()=>{const k=n.value;return k==="disable"?!1:k==="enable"?!0:k==="auto"?a.value:k==="toggle"?t.value==="dark":t.value==="dark"||t.value==="auto"&&a.value}),e=F(()=>{const k=n.value;return k==="switch"||k==="toggle"});i.provide(nr,{canToggle:e,config:n,isDarkmode:l,status:t}),Object.defineProperties(i.config.globalProperties,{$isDarkmode:{get:()=>l.value}})},Zg=()=>{const{config:i,isDarkmode:s,status:a}=Tn();xk(()=>{i.value==="disable"?a.value="light":i.value==="enable"?a.value="dark":i.value==="toggle"&&a.value==="auto"&&(a.value="light")}),wi(()=>{oi(s,n=>document.documentElement.setAttribute("data-theme",n?"dark":"light"),{immediate:!0})})};var iy=N({name:"PageFooter",setup(){const i=Os(),s=ei(),a=Ei(),n=Zp(),t=F(()=>{const{copyright:r,footer:d}=a.value;return d!==!1&&!!(r||d||s.value.displayFooter)}),l=F(()=>{const{footer:r}=a.value;return r===!1?!1:Ci(r)?r:s.value.footer??""}),e=F(()=>n.value.map(({name:r})=>r).join(", ")),k=r=>`Copyright © ${new Date().getFullYear()} ${e.value} ${r?`${r} Licensed`:""}`,p=F(()=>{const{copyright:r,license:d=""}=a.value,{license:c}=i.value,{copyright:o}=s.value;return r??(d?k(d):o??(e.value||c?k(c):!1))});return()=>t.value?h("footer",{class:"vp-footer-wrapper"},[l.value?h("div",{class:"vp-footer",innerHTML:l.value}):null,p.value?h("div",{class:"vp-copyright",innerHTML:p.value}):null]):null}}),Ji=N({name:"AutoLink",props:{config:{type:Object,required:!0}},emits:["focusout"],slots:Object,setup(i,{emit:s,slots:a}){return()=>{const{icon:n}=i.config;return h(kB,{...i,onFocusout:()=>s("focusout")},{default:a.default?()=>a.default():null,before:a.before?()=>a.before():n?()=>h(Ni,{icon:n}):null,after:a.after?()=>a.after():null})}}}),sy=N({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const a=Di(),n=Oa(i,"config"),t=F(()=>n.value.ariaLabel??n.value.text),l=Z(!1);oi(()=>a.value.path,()=>{l.value=!1});const e=k=>{k.detail===0&&(l.value=!l.value)};return()=>{var k;return h("div",{class:["vp-dropdown-wrapper",{open:l.value}]},[h("button",{type:"button",class:"vp-dropdown-title","aria-label":t.value,onClick:e},[((k=s.title)==null?void 0:k.call(s))||[h(Ni,{icon:n.value.icon}),i.config.text],h("span",{class:"arrow"}),h("ul",{class:"vp-dropdown"},n.value.children.map((p,r)=>{const d=r===n.value.children.length-1;return h("li",{class:"vp-dropdown-item"},"children"in p?[h("h4",{class:"vp-dropdown-subtitle"},p.link?h(Ji,{config:p,onFocusout:()=>{p.children.length===0&&d&&(l.value=!1)}}):p.text),h("ul",{class:"vp-dropdown-subitems"},p.children.map((c,o)=>h("li",{class:"vp-dropdown-subitem"},h(Ji,{config:c,onFocusout:()=>{o===p.children.length-1&&d&&(l.value=!1)}}))))]:h(Ji,{config:p,onFocusout:()=>{d&&(l.value=!1)}}))}))])])}}});const tr=(i,s="")=>Ci(i)?pt(pa(s,i)):"children"in i?{...i,...i.link&&dl(i.link)?{link:cs(pa(s,i.link)).path}:{},children:i.children.map(a=>tr(a,pa(s,i.prefix)))}:{...i,link:dl(i.link)?cs(pa(s,i.link)).path:i.link},lr=()=>{const i=ei();return F(()=>(i.value.navbar||[]).map(s=>tr(s)))},ay=()=>{const i=ei(),s=F(()=>i.value.repo),a=F(()=>s.value?WE(s.value):null),n=F(()=>s.value?Xl(s.value):null),t=F(()=>a.value?i.value.repoLabel??n.value??"Source":null);return F(()=>!a.value||!t.value||i.value.repoDisplay===!1?null:{type:n.value??"Source",label:t.value,link:a.value})};var ny=N({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(i){const s=Di(),a=Oa(i,"config"),n=F(()=>a.value.ariaLabel??a.value.text),t=Z(!1);oi(()=>s.value.path,()=>{t.value=!1});const l=(e,k)=>k[k.length-1]===e;return()=>[h("button",{type:"button",class:["vp-nav-screen-menu-title",{active:t.value}],"aria-label":n.value,onClick:()=>{t.value=!t.value}},[h("span",{class:"text"},[h(Ni,{icon:a.value.icon}),i.config.text]),h("span",{class:["arrow",t.value?"down":"end"]})]),h("ul",{class:["vp-nav-screen-menu",{hide:!t.value}]},a.value.children.map(e=>h("li",{class:"vp-nav-screen-menu-item"},"children"in e?[h("h4",{class:"vp-nav-screen-menu-subtitle"},e.link?h(Ji,{config:e,onFocusout:()=>{l(e,a.value.children)&&e.children.length===0&&(t.value=!1)}}):e.text),h("ul",{class:"vp-nav-screen-menu-subitems"},e.children.map(k=>h("li",{class:"vp-nav-screen-menu-subitem"},h(Ji,{config:k,onFocusout:()=>{l(k,e.children)&&l(e,a.value.children)&&(t.value=!1)}}))))]:h(Ji,{config:e,onFocusout:()=>{l(e,a.value.children)&&(t.value=!1)}}))))]}}),ty=N({name:"NavScreenLinks",setup(){const i=lr();return()=>i.value.length?h("nav",{class:"nav-screen-links"},i.value.map(s=>h("div",{class:"navbar-links-item"},"children"in s?h(ny,{config:s}):h(Ji,{config:s})))):null}});const er=()=>h(di,{name:"dark"},()=>h("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));er.displayName="DarkIcon";const hr=()=>h(di,{name:"light"},()=>h("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));hr.displayName="LightIcon";const kr=()=>h(di,{name:"auto"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));kr.displayName="AutoIcon";const pr=()=>h(di,{name:"enter-fullscreen"},()=>h("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));pr.displayName="EnterFullScreenIcon";const rr=()=>h(di,{name:"cancel-fullscreen"},()=>h("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));rr.displayName="CancelFullScreenIcon";const dr=()=>h(di,{name:"outlook"},()=>[h("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);dr.displayName="OutlookIcon";var cr=N({name:"ColorModeSwitch",setup(){const{config:i,isDarkmode:s,status:a}=Tn(),n=Ki(),t=()=>{i.value==="switch"?a.value={light:"dark",dark:"auto",auto:"light"}[a.value]:a.value=a.value==="light"?"dark":"light"},l=async e=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)||!e){t();return}const k=e.clientX,p=e.clientY,r=Math.hypot(Math.max(k,innerWidth-k),Math.max(p,innerHeight-p)),d=s.value;await document.startViewTransition(async()=>{t(),await ia()}).ready,s.value!==d&&document.documentElement.animate({clipPath:s.value?[`circle(${r}px at ${k}px ${p}px)`,`circle(0px at ${k}px ${p}px)`]:[`circle(0px at ${k}px ${p}px)`,`circle(${r}px at ${k}px ${p}px)`]},{duration:400,pseudoElement:s.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>h("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:l},[h(kr,{style:{display:a.value==="auto"?"block":"none"}}),h(er,{style:{display:a.value==="dark"?"block":"none"}}),h(hr,{style:{display:a.value==="light"?"block":"none"}})])}}),ly=N({name:"ColorMode",setup(){const i=ei(),{canToggle:s}=Tn(),a=F(()=>i.value.outlookLocales.darkmode);return()=>s.value?h("div",{class:"vp-color-mode"},[h("label",{class:"vp-color-mode-title",for:"color-mode-switch"},a.value),h(cr)]):null}});const Oh=ga.enableThemeColor==="true";var or=N({name:"ToggleFullScreenButton",setup(){const i=ei(),{isSupported:s,isFullscreen:a,toggle:n}=Kl(),t=F(()=>i.value.outlookLocales.fullscreen);return()=>s?h("div",{class:"full-screen-wrapper"},[h("label",{class:"full-screen-title",for:"full-screen-switch"},t.value),h("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:a.value,onClick:()=>n()},a.value?h(rr):h(pr))]):null}}),Br=N({name:"OutlookSettings",setup(){const i=Os(),s=Ki(),a=F(()=>!s.value&&i.value.fullscreen);return()=>h(At,()=>[null,h(ly),a.value?h(or):null])}}),ey=N({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(i,{emit:s,slots:a}){const n=Di(),{isMobile:t}=Pn(),l=Mi(),e=bp(l);return wi(()=>{l.value=document.body,oi(t,k=>{!k&&i.show&&(e.value=!1,s("close"))}),oi(()=>n.value.path,()=>{e.value=!1,s("close")})}),yn(()=>{e.value=!1}),()=>h(Ys,{name:"fade",onEnter:()=>{e.value=!0},onAfterLeave:()=>{e.value=!1}},()=>{var k,p;return i.show?h("div",{id:"nav-screen",class:"vp-nav-screen"},h("div",{class:"vp-nav-screen-container"},[(k=a.before)==null?void 0:k.call(a),h(ty),h("div",{class:"vp-outlook-wrapper"},h(Br)),(p=a.after)==null?void 0:p.call(a)])):null})}}),hy=N({name:"NavbarBrand",setup(){const i=sa(),s=Cn(),a=ei(),n=F(()=>a.value.home??i.value),t=F(()=>s.value.title),l=F(()=>a.value.navbarTitle??t.value),e=F(()=>a.value.logo?ui(a.value.logo):null),k=F(()=>a.value.logoDark?ui(a.value.logoDark):null);return()=>h(Ti,{to:n.value,class:"vp-brand"},()=>[e.value?h("img",{class:["vp-nav-logo",{light:!!k.value}],src:e.value,alt:""}):null,k.value?h("img",{class:["vp-nav-logo dark"],src:k.value,alt:""}):null,l.value?h("span",{class:["vp-site-name",{"hide-in-pad":e.value&&(a.value.hideSiteNameOnMobile??!0)}]},l.value):null])}}),ky=N({name:"NavbarLinks",setup(){const i=lr();return()=>i.value.length?h("nav",{class:"vp-nav-links"},i.value.map(s=>h("div",{class:"vp-nav-item hide-in-mobile"},"children"in s?h(sy,{config:s}):h(Ji,{config:s})))):null}}),py=N({name:"RepoLink",setup(){const i=ay();return()=>i.value?h("div",{class:"vp-nav-item vp-action"},h("a",{class:"vp-action-link",href:i.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":i.value.label},h(qE,{type:i.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Er=({active:i=!1},{emit:s})=>h("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":i}],"aria-label":"Toggle Navbar","aria-expanded":i,"aria-controls":"nav-screen",onClick:()=>s("toggle")},h("span",[h("span",{class:"vp-top"}),h("span",{class:"vp-middle"}),h("span",{class:"vp-bottom"})]));Er.displayName="ToggleNavbarButton";const ol=(i,{emit:s})=>h("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>s("toggle")},h("span",{class:"icon"}));ol.displayName="ToggleSidebarButton",ol.emits=["toggle"];var ry=N({name:"OutlookButton",setup(){const i=Os(),s=Di(),{canToggle:a}=Tn(),{isSupported:n}=Kl(),t=Ki(),l=Z(!1),e=F(()=>!t.value&&i.value.fullscreen&&n),k=F(()=>a.value||e.value);return oi(()=>s.value.path,()=>{l.value=!1}),()=>k.value?h("div",{class:"vp-nav-item hide-in-mobile"},a.value&&!e.value&&!Oh?h(cr):e.value&&!a.value&&!Oh?h(or):h("button",{type:"button",class:["vp-outlook-button",{open:l.value}],tabindex:"-1","aria-hidden":!0},[h(dr),h("div",{class:"vp-outlook-dropdown"},h(Br))])):null}}),dy=N({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(i,{emit:s,slots:a}){const n=ei(),{isMobile:t}=Pn(),l=Z(!1),e=F(()=>{const{navbarAutoHide:d="mobile"}=n.value;return d!=="none"&&(d==="always"||t.value)}),k=F(()=>n.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),p={Brand:hy,Language:Zn,Links:ky,Repo:py,Outlook:ry,Search:rs("Docsearch")?ps("Docsearch"):rs("SearchBox")?ps("SearchBox"):Zn},r=d=>p[d]??(rs(d)?ps(d):Zn);return()=>{var d,c,o,B,u,v,m,f,C;return[h("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":e.value}]},[h("div",{class:"vp-navbar-start"},[h(ol,{onToggle:()=>{l.value&&(l.value=!1),s("toggleSidebar")}}),(d=a.startBefore)==null?void 0:d.call(a),(c=k.value.start)==null?void 0:c.map(A=>h(r(A))),(o=a.startAfter)==null?void 0:o.call(a)]),h("div",{class:"vp-navbar-center"},[(B=a.centerBefore)==null?void 0:B.call(a),(u=k.value.center)==null?void 0:u.map(A=>h(r(A))),(v=a.centerAfter)==null?void 0:v.call(a)]),h("div",{class:"vp-navbar-end"},[(m=a.endBefore)==null?void 0:m.call(a),(f=k.value.end)==null?void 0:f.map(A=>h(r(A))),(C=a.endAfter)==null?void 0:C.call(a),h(Er,{active:l.value,onToggle:()=>{l.value=!l.value}})])]),h(ey,{show:l.value,onClose:()=>{l.value=!1}},{before:a.screenTop?()=>a.screenTop():null,after:a.screenBottom?()=>a.screenBottom():null})]}}}),cy=N({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(i){const s=Ds();return()=>Ci(i.config.link)?h(Ji,{class:["vp-sidebar-link",{active:se(s,i.config)}],config:{...i.config,exact:!0}}):h("p",i,[h(Ni,{icon:i.config.icon}),i.config.text])}}),oy=N({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(i,{emit:s}){const a=Ds(),n=Z(!1),t=F(()=>ae(a,i.config)),l=F(()=>se(a,i.config)),e=F(()=>i.open||i.config.expanded&&!n.value);return()=>{const{collapsible:k,children:p=[],icon:r,prefix:d,link:c,text:o}=i.config;return h("section",{class:"vp-sidebar-group"},[h(k?"button":"p",{class:["vp-sidebar-header",{clickable:k||c,exact:l.value,active:t.value}],...k?{type:"button",onClick:()=>{n.value=!0,s("toggle")}}:{}},[h(Ni,{icon:r}),c?h(Ji,{class:"vp-sidebar-title no-external-link-icon",config:{text:o,link:c}}):h("span",{class:"vp-sidebar-title"},o),k?h("span",{class:["vp-arrow",e.value?"down":"end"]}):null]),e.value||!k?h(gr,{key:d,config:p}):null])}}}),gr=N({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(i){const s=Ds(),a=Z(-1),n=t=>{a.value=t===a.value?-1:t};return oi(()=>s.path,()=>{const t=i.config.findIndex(l=>ae(s,l));a.value=t},{immediate:!0,flush:"post"}),()=>h("ul",{class:"vp-sidebar-links"},i.config.map((t,l)=>h("li","children"in t?h(oy,{config:t,open:l===a.value,onToggle:()=>n(l)}):h(cy,{config:t}))))}}),By=N({name:"SideBar",slots:Object,setup(i,{slots:s}){const a=Ds(),n=ne(),t=Mi();return wi(()=>{oi(()=>a.hash,l=>{const e=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${a.path}${l}"]`);if(!e)return;const{top:k,height:p}=t.value.getBoundingClientRect(),{top:r,height:d}=e.getBoundingClientRect();r<k?e.scrollIntoView(!0):r+d>k+p&&e.scrollIntoView(!1)},{immediate:!0})}),()=>{var l,e,k;return h("aside",{ref:t,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(l=s.top)==null?void 0:l.call(s),((e=s.default)==null?void 0:e.call(s))??h(gr,{config:n.value}),(k=s.bottom)==null?void 0:k.call(s)])}}}),te=N({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(i,{slots:s}){const a=Ba(),n=Ei(),t=Os(),l=ei(),{isMobile:e,isPC:k}=Pn(),p=Ki(),[r,d]=rn(!1),[c,o]=rn(!1),B=ne(),u=Z(!1),v=F(()=>i.noNavbar||n.value.navbar===!1||l.value.navbar===!1?!1:!!(l.value.logo??l.value.repo??l.value.navbar)),m=F(()=>i.noSidebar?!1:n.value.sidebar!==!1&&B.value.length!==0&&!n.value.home),f=F(()=>n.value.externalLinkIcon??t.value.externalLinkIcon??!0),C=F(()=>!i.noToc&&!n.value.home&&(n.value.toc??l.value.toc??!0)),A={x:0,y:0},D=V=>{A.x=V.changedTouches[0].clientX,A.y=V.changedTouches[0].clientY},O=V=>{const K=V.changedTouches[0].clientX-A.x,M=V.changedTouches[0].clientY-A.y;Math.abs(K)>Math.abs(M)*1.5&&Math.abs(K)>40&&(K>0&&A.x<=80?d(!0):d(!1))};let T=0;return Ri("scroll",HB(()=>{const V=window.scrollY;V<=58||V<T?u.value=!1:T+200<V&&!r.value&&(u.value=!0),T=V},300,!0)),oi(e,V=>{V||d(!1)}),wi(()=>{const V=bp(document.body);oi(r,M=>{V.value=M});const K=a.afterEach(()=>{d(!1)});yn(()=>{V.value=!1,K()})}),()=>h(rs("GlobalEncrypt")?ps("GlobalEncrypt"):Ql,()=>h("div",{class:["theme-container",{"hide-navbar":u.value,"no-navbar":!v.value,"sidebar-collapsed":!e.value&&!k.value&&c.value,"sidebar-open":e.value&&r.value,"no-sidebar":!m.value&&!s.sidebar&&!s.sidebarTop&&!s.sidebarBottom,"external-link-icon":f.value,pure:p.value,"has-toc":C.value},i.containerClass,n.value.containerClass??""],onTouchStart:D,onTouchEnd:O},[v.value?h(dy,{onToggleSidebar:()=>d()},{startBefore:s.navbarStartBefore?()=>s.navbarStartBefore():null,startAfter:s.navbarStartAfter?()=>s.navbarStartAfter():null,centerBefore:s.navbarCenterBefore?()=>s.navbarCenterBefore():null,centerAfter:s.navbarCenterAfter?()=>s.navbarCenterAfter():null,endBefore:s.navbarEndBefore?()=>s.navbarEndBefore():null,endAfter:s.navbarEndAfter?()=>s.navbarEndAfter():null,screenTop:s.navScreenTop?()=>s.navScreenTop():null,screenBottom:s.navScreenBottom?()=>s.navScreenBottom():null}):null,h(Ys,{name:"fade"},()=>r.value?h("div",{class:"vp-sidebar-mask",onClick:()=>d(!1)}):null),h(Ys,{name:"fade"},()=>e.value?null:h("div",{class:"toggle-sidebar-wrapper",onClick:()=>o()},h("span",{class:["arrow",c.value?"end":"start"]}))),h(By,{},{default:s.sidebar?()=>s.sidebar():null,top:s.sidebarTop?()=>s.sidebarTop():null,bottom:s.sidebarBottom?()=>s.sidebarBottom():null}),s.default(),h(iy)]))}});const ti=N({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(i,{slots:s}){const a=t=>{t.style.transition=`transform ${i.duration}s ease-in-out ${i.delay}s, opacity ${i.duration}s ease-in-out ${i.delay}s`,t.style.transform="translateY(-20px)",t.style.opacity="0"},n=t=>{t.style.transform="translateY(0)",t.style.opacity="1"};return()=>{const t={name:"drop",appear:i.appear,onAppear:a,onAfterAppear:n,onEnter:a,onAfterEnter:n,onBeforeLeave:a},l=()=>s.default();return i.type==="group"?h(bc,t,l):h(Ys,t,l)}}}),La=({custom:i})=>h(dp,{class:["theme-hope-content",{custom:i}]});La.displayName="MarkdownContent",La.props={custom:Boolean};const yr=()=>h(di,{name:"author"},()=>h("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));yr.displayName="AuthorIcon";const Ar=()=>h(di,{name:"calendar"},()=>h("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Ar.displayName="CalendarIcon";const ur=()=>h(di,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));ur.displayName="CategoryIcon";const vr=()=>h(di,{name:"print"},()=>h("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));vr.displayName="PrintIcon";const Fr=()=>h(di,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Fr.displayName="TagIcon";const fr=()=>h(di,{name:"timer"},()=>h("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));fr.displayName="TimerIcon";const mr=()=>h(di,{name:"word"},()=>[h("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);mr.displayName="WordIcon";const aa=()=>{const i=ei();return F(()=>i.value.metaLocales)};var Ey=N({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(i){const s=aa(),a=Ki();return()=>i.author.length?h("span",{class:"page-author-info","aria-label":`${s.value.author}${a.value?"":"🖊"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(yr),h("span",i.author.map(n=>n.url?h("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):h("span",{class:"page-author-item"},n.name))),h("span",{property:"author",content:i.author.map(n=>n.name).join(", ")})]):null}}),gy=N({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(i){const s=aa(),a=ya(),n=Ki();return()=>i.category.length?h("span",{class:"page-category-info","aria-label":`${s.value.category}${n.value?"":"🌈"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(ur),i.category.map(({name:t,path:l})=>h("span",{class:["page-category-item",{[`color${Sn(t,Number(ga.colorNumber))}`]:!n.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&a(l)}},t)),h("meta",{property:"articleSection",content:i.category.map(({name:t})=>t).join(",")})]):null}}),yy=N({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(i){const s=kp(),a=aa(),n=Ki();return()=>i.date?h("span",{class:"page-date-info","aria-label":`${a.value.date}${n.value?"":"📅"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Ar),h("span",h(At,()=>i.localizedDate||i.date.toLocaleDateString(s.value))),h("meta",{property:"datePublished",content:i.date.toISOString()||""})]):null}}),Ay=N({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(i){const s=aa();return()=>i.isOriginal?h("span",{class:"page-original-info"},s.value.origin):null}}),uy=N({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(i){const s=aa(),a=Ki(),n=F(()=>{if(!i.readingTime)return null;const{minutes:t}=i.readingTime;return t<1?"PT1M":`PT${Math.round(t)}M`});return()=>{var t,l;return(t=i.readingTimeLocale)!=null&&t.time?h("span",{class:"page-reading-time-info","aria-label":`${s.value.readingTime}${a.value?"":"⌛"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(fr),h("span",(l=i.readingTimeLocale)==null?void 0:l.time),h("meta",{property:"timeRequired",content:n.value})]):null}}}),vy=N({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(i){const s=aa(),a=ya(),n=Ki();return()=>i.tag.length?h("span",{class:"page-tag-info","aria-label":`${s.value.tag}${n.value?"":"🏷"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Fr),i.tag.map(({name:t,path:l})=>h("span",{class:["page-tag-item",{[`color${Sn(t,Number(ga.colorNumber))}`]:!n.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&a(l)}},t)),h("meta",{property:"keywords",content:i.tag.map(({name:t})=>t).join(",")})]):null}}),Fy=N({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(i){const s=aa(),a=Ki();return()=>{var n,t,l;return(n=i.readingTimeLocale)!=null&&n.words?h("span",{class:"page-word-info","aria-label":`${s.value.words}${a.value?"":"🔠"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(mr),h("span",(t=i.readingTimeLocale)==null?void 0:t.words),h("meta",{property:"wordCount",content:(l=i.readingTime)==null?void 0:l.words})]):null}}}),Cr=N({name:"PageInfo",components:{AuthorInfo:Ey,CategoryInfo:gy,DateInfo:yy,OriginalInfo:Ay,PageViewInfo:Zn,ReadingTimeInfo:uy,TagInfo:vy,WordInfo:Fy},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(i){const s=Ki();return()=>i.items?h("div",{class:"page-info"},i.items.map(a=>h(ps(`${a}Info`),{...i.info,isPure:s.value}))):null}}),fy=N({name:"PrintButton",setup(){const i=Os(),s=ei();return()=>i.value.print===!1?null:h("button",{type:"button",class:"print-button",title:s.value.metaLocales.print,onClick:()=>{window.print()}},h(vr))}}),br=N({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(i,{slots:s}){const a=Ds(),n=Di(),t=aa(),[l,e]=rn(),k=Mi(),p=Z("-1.7rem"),r=c=>{var o;(o=k.value)==null||o.scrollTo({top:c,behavior:"smooth"})},d=()=>{if(k.value){const c=document.querySelector(".vp-toc-item.active");c?p.value=`${c.getBoundingClientRect().top-k.value.getBoundingClientRect().top+k.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};return wi(()=>{oi(()=>a.hash,c=>{if(k.value){const o=document.querySelector(`#toc a.vp-toc-link[href$="${c}"]`);if(!o)return;const{top:B,height:u}=k.value.getBoundingClientRect(),{top:v,height:m}=o.getBoundingClientRect();v<B?r(k.value.scrollTop+v-B):v+m>B+u&&r(k.value.scrollTop+v+m-B-u)}}),oi(()=>a.fullPath,d,{flush:"post",immediate:!0})}),()=>{var u,v;const c=({title:m,level:f,slug:C})=>h(Ti,{to:`#${C}`,class:["vp-toc-link",`level${f}`],onClick:()=>{e()}},()=>m),o=(m,f)=>m.length&&f>0?h("ul",{class:"vp-toc-list"},m.map(C=>{const A=o(C.children,f-1);return[h("li",{class:["vp-toc-item",{active:a.hash===`#${C.slug}`}]},c(C)),A?h("li",A):null]})):null,B=i.items.length?o(i.items,i.headerDepth):n.value.headers?o(n.value.headers,i.headerDepth):null;return B?h("div",{class:"vp-toc-placeholder"},[h("aside",{id:"toc"},[(u=s.before)==null?void 0:u.call(s),h("div",{class:"vp-toc-header",onClick:()=>{e()}},[t.value.toc,h(fy),h("div",{class:["arrow",l.value?"down":"end"]})]),h("div",{class:["vp-toc-wrapper",l.value?"open":""],ref:k},[B,h("div",{class:"vp-toc-marker",style:{top:p.value}})]),(v=s.after)==null?void 0:v.call(s)])]):null}}}),le=N({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(i){const s=Di(),a=ei(),n=Mi(),t=({target:l})=>{const e=document.querySelector(l.hash);if(e){const k=()=>{e.removeAttribute("tabindex"),e.removeEventListener("blur",k)};e.setAttribute("tabindex","-1"),e.addEventListener("blur",k),e.focus(),window.scrollTo(0,0)}};return wi(()=>{oi(()=>s.value.path,()=>n.value.focus())}),()=>[h("span",{ref:n,tabindex:"-1"}),h("a",{href:`#${i.content}`,class:"vp-skip-link sr-only",onClick:t},a.value.routeLocales.skipToContent)]}});let Ut=null,$a=null;const Bl={wait:()=>Ut,pending:()=>{Ut=new Promise(i=>{$a=i})},resolve:()=>{$a==null||$a(),Ut=null,$a=null}},Dr=(i,{slots:s})=>h(Ys,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:Bl.resolve,onBeforeLeave:Bl.pending},()=>s.default());Dr.displayName="FadeSlideY";const my=(i,s)=>{const a=i.replace(s,"/").split("/"),n=[];let t=Nl(s);return a.forEach((l,e)=>{e!==a.length-1?(t+=`${l}/`,n.push({link:t,name:l||"Home"})):l!==""&&(t+=l,n.push({link:t,name:l}))}),n},Vh=(i,s)=>i===!1?i:mn(i)?{...i,link:pt(i.link,!0,s).link}:Ci(i)?pt(i,!0,s):null,El=(i,s,a)=>{const n=i.findIndex(l=>l.link===s);if(n!==-1){const l=i[n+a];return l?l.link?l:"prefix"in l&&!cs(l.prefix).notFound?{...l,link:l.prefix}:null:null}for(const l of i)if("children"in l){const e=El(l.children,s,a);if(e)return e}const t=i.findIndex(l=>"prefix"in l&&l.prefix===s);if(t!==-1){const l=i[t+a];return l?l.link?l:"prefix"in l&&!cs(l.prefix).notFound?{...l,link:l.prefix}:null:null}return null},Cy=()=>{const i=Ei(),s=ei(),a=ne(),n=Ds(),t=F(()=>{const e=Vh(i.value.prev,n.path);return e===!1?null:e??(s.value.prevLink===!1?null:El(a.value,n.path,-1))}),l=F(()=>{const e=Vh(i.value.next,n.path);return e===!1?null:e??(s.value.nextLink===!1?null:El(a.value,n.path,1))});return{prevLink:t,nextLink:l}},gl=(i,{slots:s})=>{var c,o;const{bgImage:a,bgImageDark:n,bgImageStyle:t,color:l,description:e,image:k,imageDark:p,header:r,features:d=[]}=i;return h("div",{class:"vp-feature-wrapper"},[a?h("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${a})`},t]}):null,n?h("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},t]}):null,h("div",{class:"vp-feature",style:l?{color:l}:{}},[((c=s.image)==null?void 0:c.call(s,i))??[k?h("img",{class:["vp-feature-image",{light:p}],src:ui(k),alt:""}):null,p?h("img",{class:"vp-feature-image dark",src:ui(p),alt:""}):null],((o=s.info)==null?void 0:o.call(s,i))??[r?h("h2",{class:"vp-feature-header"},r):null,e?h("p",{class:"vp-feature-description",innerHTML:e}):null],d.length?h("div",{class:"vp-features"},d.map(({icon:B,title:u,details:v,link:m})=>{const f=[h("h3",{class:"vp-feature-title"},[h(Ni,{icon:B}),h("span",{innerHTML:u})]),h("p",{class:"vp-feature-details",innerHTML:v})];return m?$l(m)?h("a",{class:"vp-feature-item link",href:m,"aria-label":u,target:"_blank"},f):h(Ti,{class:"vp-feature-item link",to:m,"aria-label":u},()=>f):h("div",{class:"vp-feature-item"},f)})):null])])};gl.displayName="FeaturePanel";var by=N({name:"HeroInfo",slots:Object,setup(i,{slots:s}){const a=Ei(),n=Cn(),t=F(()=>a.value.heroFullScreen??!1),l=F(()=>{const{heroText:r,tagline:d}=a.value;return{text:r??n.value.title??"Hello",tagline:d??n.value.description??"",isFullScreen:t.value}}),e=F(()=>{const{heroText:r,heroImage:d,heroImageDark:c,heroAlt:o,heroImageStyle:B}=a.value;return{image:d?ui(d):null,imageDark:c?ui(c):null,imageStyle:B,alt:o??r??"",isFullScreen:t.value}}),k=F(()=>{const{bgImage:r,bgImageDark:d,bgImageStyle:c}=a.value;return{image:Ci(r)?ui(r):null,imageDark:Ci(d)?ui(d):null,bgStyle:c,isFullScreen:t.value}}),p=F(()=>a.value.actions??[]);return()=>{var r,d,c;return h("header",{class:["vp-hero-info-wrapper",{fullscreen:t.value}]},[((r=s.bg)==null?void 0:r.call(s,k.value))??[k.value.image?h("div",{class:["vp-hero-mask",{light:k.value.imageDark}],style:[{"background-image":`url(${k.value.image})`},k.value.bgStyle]}):null,k.value.imageDark?h("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${k.value.imageDark})`},k.value.bgStyle]}):null],h("div",{class:"vp-hero-info"},[((d=s.logo)==null?void 0:d.call(s,e.value))??h(ti,{appear:!0,type:"group"},()=>{const{image:o,imageDark:B,imageStyle:u,alt:v}=e.value;return[o?h("img",{key:"light",class:["vp-hero-image",{light:B}],style:u,src:o,alt:v}):null,B?h("img",{key:"dark",class:"vp-hero-image dark",style:u,src:B,alt:v}):null]}),((c=s.info)==null?void 0:c.call(s,l.value))??h("div",{class:"vp-hero-infos"},[l.value.text?h(ti,{appear:!0,delay:.04},()=>h("h1",{id:"main-title",class:"vp-hero-title"},l.value.text)):null,l.value.tagline?h(ti,{appear:!0,delay:.08},()=>h("p",{id:"main-description",innerHTML:l.value.tagline})):null,p.value.length?h(ti,{appear:!0,delay:.12},()=>h("p",{class:"vp-hero-actions"},p.value.map(o=>h(Ji,{class:["vp-hero-action",o.type??"default","no-external-link-icon"],config:o},o.icon?{before:()=>h(Ni,{icon:o.icon})}:{})))):null])])])}}});const _r=(i,{slots:s})=>{var o,B,u;const{bgImage:a,bgImageDark:n,bgImageStyle:t,color:l,description:e,image:k,imageDark:p,header:r,highlights:d=[],type:c="un-order"}=i;return h("div",{class:"vp-highlight-wrapper",style:l?{color:l}:{}},[a?h("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${a})`},t]}):null,n?h("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},t]}):null,h("div",{class:"vp-highlight"},[((o=s.image)==null?void 0:o.call(s,i))??[k?h("img",{class:["vp-highlight-image",{light:p}],src:ui(k),alt:""}):null,p?h("img",{class:"vp-highlight-image dark",src:ui(p),alt:""}):null],((B=s.info)==null?void 0:B.call(s,i))??[h("div",{class:"vp-highlight-info-wrapper"},h("div",{class:"vp-highlight-info"},[r?h("h2",{class:"vp-highlight-header",innerHTML:r}):null,e?h("p",{class:"vp-highlight-description",innerHTML:e}):null,((u=s.highlights)==null?void 0:u.call(s,d))??h(c==="order"?"ol":c==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:v,title:m,details:f,link:C})=>{const A=[h(c==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[v?h(Ni,{class:"vp-highlight-icon",icon:v}):null,h("span",{innerHTML:m})]),f?h(c==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:f}):null];return h(c==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:C}]},C?$l(C)?h("a",{class:"vp-highlight-item link",href:C,"aria-label":m,target:"_blank"},A):h(Ti,{class:"vp-highlight-item link",to:C,"aria-label":m},()=>A):h("div",{class:"vp-highlight-item"},A))}))]))]])])};_r.displayName="HighlightPanel";var Dy=N({name:"HomePage",slots:Object,setup(i,{slots:s}){const a=Ei(),n=F(()=>{const{features:l}=a.value;return pl(l)?l:null}),t=F(()=>{const{highlights:l}=a.value;return pl(l)?l:null});return()=>{var l,e,k,p;return h("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":a.value.heroText===null?"":"main-title"},[(l=s.top)==null?void 0:l.call(s),h(by),((e=t.value)==null?void 0:e.map(r=>"features"in r?h(gl,r):h(_r,r)))??(n.value?h(ti,{appear:!0,delay:.24},()=>h(gl,{features:n.value})):null),(k=s.center)==null?void 0:k.call(s),h(ti,{appear:!0,delay:.32},()=>h(La)),(p=s.bottom)==null?void 0:p.call(s)])}}}),_y=N({name:"BreadCrumb",setup(){const i=Di(),s=sa(),a=Ei(),n=ei(),t=Mi([]),l=F(()=>(a.value.breadcrumb??n.value.breadcrumb??!0)&&t.value.length>1),e=F(()=>a.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),k=()=>{const p=my(i.value.path,s.value).map(({link:r,name:d})=>{const{path:c,meta:o,notFound:B}=cs(r);return B||o[Wi.breadcrumbExclude]?null:{title:o[Wi.shortTitle]||o[Wi.title]||d,icon:o[Wi.icon],path:c}}).filter(r=>r!==null);p.length>1&&(t.value=p)};return wi(()=>{oi(()=>i.value.path,k,{immediate:!0})}),()=>h("nav",{class:["vp-breadcrumb",{disable:!l.value}]},l.value?h("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},t.value.map((p,r)=>h("li",{class:{"is-active":t.value.length-1===r},property:"itemListElement",typeof:"ListItem"},[h(Ti,{to:p.path,property:"item",typeof:"WebPage"},()=>[e.value?h(Ni,{icon:p.icon}):null,h("span",{property:"name"},p.title||"Unknown")]),h("meta",{property:"position",content:r+1})]))):[])}}),wy=N({name:"PageNav",setup(){const i=ei(),s=ya(),{prevLink:a,nextLink:n}=Cy();return Ri("keydown",t=>{t.altKey&&(t.key==="ArrowRight"?n.value&&(s(n.value.link),t.preventDefault()):t.key==="ArrowLeft"&&a.value&&(s(a.value.link),t.preventDefault()))}),()=>a.value||n.value?h("nav",{class:"vp-page-nav"},[a.value?h(Ji,{class:"prev",config:a.value},()=>{var t,l;return[h("div",{class:"hint"},[h("span",{class:"arrow start"}),i.value.metaLocales.prev]),h("div",{class:"link"},[h(Ni,{icon:(t=a.value)==null?void 0:t.icon}),(l=a.value)==null?void 0:l.text])]}):null,n.value?h(Ji,{class:"next",config:n.value},()=>{var t,l;return[h("div",{class:"hint"},[i.value.metaLocales.next,h("span",{class:"arrow end"})]),h("div",{class:"link"},[(t=n.value)==null?void 0:t.text,h(Ni,{icon:(l=n.value)==null?void 0:l.icon})])]}):null]):null}});const xy=()=>{const i=ei(),s=Di(),a=Ei();return F(()=>{var n;return a.value.contributors??i.value.contributors??!0?((n=s.value.git)==null?void 0:n.contributors)??null:null})},Sy={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Py=({docsRepo:i,docsBranch:s,docsDir:a,filePathRelative:n,editLinkPattern:t})=>{if(!n)return null;const l=Xl(i);let e;return t?e=t:l!==null&&(e=Sy[l]),e?e.replace(/:repo/u,oa(i)?i:`https://github.com/${i}`).replace(/:branch/u,s).replace(/:path/u,Yk(`${Nl(a)}/${n}`)):null},Ty=()=>{const i=ei(),s=Di(),a=Ei();return F(()=>{const{repo:n,docsRepo:t=n,docsBranch:l="main",docsDir:e="",editLink:k,editLinkPattern:p=""}=i.value;if(!(a.value.editLink??k??!0)||!t)return null;const r=Py({docsRepo:t,docsBranch:l,docsDir:e,editLinkPattern:p,filePathRelative:s.value.filePathRelative});return r?{text:i.value.metaLocales.editLink,link:r}:null})},Ry=()=>{const i=Cn(),s=ei(),a=Di(),n=Ei();return F(()=>{var t,l;return!(n.value.lastUpdated??s.value.lastUpdated??!0)||!((t=a.value.git)!=null&&t.updatedTime)?null:new Date((l=a.value.git)==null?void 0:l.updatedTime).toLocaleString(i.value.lang)})};var Ly=N({name:"PageTitle",setup(){const i=Di(),s=Ei(),a=ei(),{info:n,items:t}=Ug();return()=>h("div",{class:"vp-page-title"},[h("h1",[a.value.titleIcon===!1?null:h(Ni,{icon:s.value.icon}),i.value.title]),h(Cr,{info:n.value,...t.value===null?{}:{items:t.value}}),h("hr")])}});const wr=()=>h(di,{name:"edit"},()=>[h("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);wr.displayName="EditIcon";var jy=N({name:"PageMeta",setup(){const i=ei(),s=Ty(),a=Ry(),n=xy();return()=>{var l;const{metaLocales:t}=i.value;return h("footer",{class:"vp-page-meta"},[s.value?h("div",{class:"vp-meta-item edit-link"},h(Ji,{class:"vp-meta-label",config:s.value},{before:()=>h(wr)})):null,h("div",{class:"vp-meta-item git-info"},[a.value?h("div",{class:"update-time"},[h("span",{class:"vp-meta-label"},`${t.lastUpdated}: `),h(At,()=>h("span",{class:"vp-meta-info"},a.value))]):null,(l=n.value)!=null&&l.length?h("div",{class:"contributors"},[h("span",{class:"vp-meta-label"},`${t.contributors}: `),n.value.map(({email:e,name:k},p)=>[h("span",{class:"vp-meta-info",title:`email: ${e}`},k),p!==n.value.length-1?",":""])]):null])])}}}),Iy=N({name:"NormalPage",slots:Object,setup(i,{slots:s}){const a=Ei(),{isDarkmode:n}=Tn(),t=ei(),l=F(()=>a.value.toc??t.value.toc??!0),e=F(()=>a.value.headerDepth??t.value.headerDepth??2);return()=>h("main",{id:"main-content",class:"vp-page"},h(rs("LocalEncrypt")?ps("LocalEncrypt"):Ql,()=>{var k,p,r,d;return[(k=s.top)==null?void 0:k.call(s),a.value.cover?h("div",{class:"page-cover"},h("img",{src:ui(a.value.cover),alt:"","no-view":""})):null,h(_y),h(Ly),l.value?h(br,{headerDepth:e.value},{before:s.tocBefore?()=>s.tocBefore():null,after:s.tocAfter?()=>s.tocAfter():null}):null,(p=s.contentBefore)==null?void 0:p.call(s),h(La),(r=s.contentAfter)==null?void 0:r.call(s),h(jy),h(wy),rs("CommentService")?h(ps("CommentService"),{darkmode:n.value}):null,(d=s.bottom)==null?void 0:d.call(s)]}))}}),Oy=N({name:"PortfolioHero",slots:Object,setup(i,{slots:s}){const a=Xp(),n=Ei(),t=Z(0),l=F(()=>{var o;return((o=n.value.titles)==null?void 0:o[t.value])??""}),e=Z(""),k=F(()=>{const{name:o,avatar:B,avatarDark:u,avatarAlt:v,avatarStyle:m}=n.value;return{name:o??a.value.name,avatar:B?ui(B):null,avatarDark:u?ui(u):null,avatarStyle:m,alt:(v||o)??""}}),p=F(()=>{const{bgImage:o,bgImageDark:B,bgImageStyle:u}=n.value;return{image:Ci(o)?ui(o):null,imageDark:Ci(B)?ui(B):null,bgStyle:u}}),r=F(()=>{const{welcome:o,name:B,titles:u,medias:v}=n.value;return{name:B??a.value.name,welcome:o??"👋 Hi There, I'm",title:e.value,titles:u??[],medias:v??[]}}),d=()=>{e.value="";let o=0,B=!1;const u=async()=>{if(!B)if(e.value+=l.value[o],o+=1,await ia(),o<l.value.length)setTimeout(()=>{u()},150);else{const v=r.value.titles.length;setTimeout(()=>{t.value=v<=1||t.value===r.value.titles.length-1?0:t.value+1},1e3)}};return u(),()=>{B=!0}};let c;return wi(()=>{oi(l,()=>{c==null||c(),c=d()},{immediate:!0})}),()=>{var o,B,u;return h("section",{id:"portfolio",class:["vp-portfolio",{bg:p.value.image}]},[((o=s.bg)==null?void 0:o.call(s,p.value))??[p.value.image?h("div",{class:["vp-portfolio-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?h("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((B=s.avatar)==null?void 0:B.call(s,k.value))??h("div",{class:"vp-portfolio-avatar"},[h(ti,{delay:.04},()=>{const{avatarDark:v,name:m,alt:f,avatarStyle:C}=k.value;return[h("img",{key:"light",class:{light:v},src:k.value.avatar,title:m,alt:f,style:C}),v?h("img",{key:"dark",class:"dark",src:v,title:m,alt:f,style:C}):null]})]),h("div",{class:"vp-portfolio-container"},((u=s.info)==null?void 0:u.call(s,r.value))??h("div",{class:"vp-portfolio-info"},[h(ti,{appear:!0,delay:.08},()=>h("h6",{class:"vp-portfolio-welcome"},r.value.welcome)),h(ti,{appear:!0,delay:.12},()=>h("h1",{class:"vp-portfolio-name",id:"main-title"},r.value.name)),h(ti,{appear:!0,delay:.16},()=>h("h2",{class:"vp-portfolio-title"},e.value)),h(ti,{appear:!0,delay:.2},()=>r.value.medias.length?h("div",{class:"vp-portfolio-medias"},r.value.medias.map(({name:v,url:m,icon:f})=>h("a",{class:"vp-portfolio-media",href:m,rel:"noopener noreferrer",target:"_blank",title:v},h(Ni,{icon:f})))):rs("SocialMedias")?h(ps("SocialMedias")):null)]))])}}}),Vy=N({name:"PortfolioHome",setup(){const i=Ei(),s=F(()=>i.value.content??"portfolio");return()=>h("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[h(Oy),s.value==="none"?null:h("div",{},h(ti,{appear:!0,delay:.24},()=>h(La,{class:{"vp-portfolio-content":s.value==="portfolio"}})))])}}),My=N({name:"Layout",slots:Object,setup(i,{slots:s}){const a=Os(),n=ei(),t=Di(),l=Ei(),e=Ki(),{isMobile:k}=Pn(),p=F(()=>{var r,d;return((r=n.value.blog)==null?void 0:r.sidebarDisplay)??((d=a.value.blog)==null?void 0:d.sidebarDisplay)??"mobile"});return()=>[h(le),h(te,{},{default:()=>{var r;return((r=s.default)==null?void 0:r.call(s))??(l.value.portfolio?h(Vy):l.value.home?h(Dy):h(e.value?Ql:Dr,()=>h(Iy,{key:t.value.path},{top:s.top?()=>s.top():null,bottom:s.bottom?()=>s.bottom():null,contentBefore:s.contentBefore?()=>s.contentBefore():null,contentAfter:s.contentAfter?()=>s.contentAfter():null,tocBefore:s.tocBefore?()=>s.tocBefore():null,tocAfter:s.tocAfter?()=>s.tocAfter():null})))},navScreenBottom:p.value==="none"&&rs("BloggerInfo")?()=>h(ps("BloggerInfo")):null,sidebar:!k.value&&p.value==="always"&&rs("BloggerInfo")?()=>h(ps("BloggerInfo")):null})]}}),Hy=N({name:"NotFoundHint",setup(){const i=ei(),s=()=>{const a=i.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>h("div",{class:"not-found-hint"},[h("p",{class:"error-code"},"404"),h("h1",{class:"error-title"},i.value.routeLocales.notFoundTitle),h("p",{class:"error-hint"},s())])}}),$y=N({name:"NotFound",slots:Object,setup(i,{slots:s}){const a=Ba(),n=sa(),t=ei();return()=>[h(le),h(te,{noSidebar:!0},()=>{var l;return h("main",{id:"main-content",class:"vp-page not-found"},((l=s.default)==null?void 0:l.call(s))??[h(Hy),h("div",{class:"actions"},[h("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},t.value.routeLocales.back),h("button",{type:"button",class:"action-button",onClick:()=>{a.push(t.value.home??n.value)}},t.value.routeLocales.home)])])})]}});const Ny={},zy={category:{"/":{path:"/category/",map:{JavaScript:{path:"/category/javascript/",indexes:[0,1,2,3]},"Javascript 综合案例":{path:"/category/javascript-%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/",indexes:[0,1,2,3]},文件上传:{path:"/category/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",indexes:[1,2,3]}}}},tag:{"/":{path:"/tag/",map:{}}}},xr=["/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%BD%AE%E6%92%AD%E5%9B%BE/%E7%BD%91%E9%A1%B5%E7%AB%AF/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E6%96%87%E4%BB%B6%E5%88%87%E7%89%87%E4%B8%8A%E4%BC%A0/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/%E7%A7%92%E4%BC%A0%E5%92%8C%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/Hook%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useReducer/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/API/forwardRef/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/API/memo/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useCallback/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useMemo/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Redux/redux/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/React%E5%92%8CTypeScript/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E5%8A%A8%E6%80%81%E8%8F%9C%E5%8D%95/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E8%B7%AF%E7%94%B1/%E8%B7%AF%E7%94%B1%E6%9D%83%E9%99%90/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Hooks/useImperativeHandle/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/SCSS/%E7%AE%80%E5%8C%96%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/%E6%8F%8F%E8%BE%B9%E5%8A%A8%E7%94%BB/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E6%96%87%E5%AD%97%E4%B8%8B%E5%88%92%E7%BA%BF%E5%8A%A8%E7%94%BB/","/%E5%90%8E%E7%AB%AF/NodeJS/EggJS/%E7%94%9F%E6%88%90Token/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Token%E6%97%A0%E6%84%9F%E5%88%B7%E6%96%B0/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%A4%9A%E7%B3%BB%E7%BB%9F%E5%85%A5%E5%8F%A3/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/resize/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/","/%E5%89%8D%E7%AB%AF/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87/","/%E5%90%8E%E7%AB%AF/NodeJS/JWT/","/%E5%90%8E%E7%AB%AF/NodeJS/%E8%B7%AF%E5%BE%84%E7%9B%B8%E5%85%B3/","/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/MVVM%E5%92%8CMVC/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%92%8C%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E6%9D%83%E9%99%90%E7%9A%84%E7%BA%A7%E5%88%AB/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E7%BB%84%E4%BB%B6%E7%BA%A7%E6%9D%83%E9%99%90/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/AnimationAPI/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/%E7%9B%91%E6%8E%A7%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/Flex%E5%B8%83%E5%B1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/Flex%E5%B8%83%E5%B1%80/%E7%BB%93%E5%90%88%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebAPI/IntersectionObserver/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E5%8D%A1%E7%89%87%E4%BA%BA%E7%89%A93D%E7%AB%8B%E4%BD%93%E6%95%88%E6%9E%9C/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%94%BE%E5%A4%A7%E9%95%9C%E6%95%88%E6%9E%9C/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%95%B0%E5%AD%97%E6%A0%BC%E5%BC%8F%E5%8C%96/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%95%B0%E5%AD%97%E8%BD%AC%E4%B8%AD%E6%96%87/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%8B%96%E6%8B%BDAPI/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%BD%AE%E6%92%AD%E5%9B%BE/%E7%A7%BB%E5%8A%A8%E7%AB%AF/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%A1%B5%E9%9D%A2%E9%80%82%E9%85%8D/%E5%A4%A7%E5%B1%8F%E9%80%82%E9%85%8D/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%A1%B5%E9%9D%A2%E9%80%82%E9%85%8D/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/01-%E5%9F%BA%E6%9C%AC%E6%9E%84%E9%80%A0.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/02-%E6%8A%BD%E7%A6%BB-%E5%B0%81%E8%A3%85-%E4%BC%98%E5%8C%96.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/03-%E5%B0%81%E8%A3%85%E6%93%8D%E4%BD%9C%E5%BE%AE%E9%98%9F%E5%88%97%E5%87%BD%E6%95%B0.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/04-then%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/05-%E6%89%A7%E8%A1%8C%E9%98%9F%E5%88%97%E5%87%BD%E6%95%B0.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%89%8B%E5%86%99Promise/06-%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%96%87%E4%BB%B6%E7%9B%B8%E5%85%B3/%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E6%8B%96%E6%8B%BDAPI%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E5%88%97%E8%A1%A8%E6%8B%96%E6%8B%BD%E6%8E%92%E5%BA%8F/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E6%8B%96%E6%8B%BDAPI%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%96%E6%8B%BD/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%8B%96%E6%8B%BD%E7%9B%B8%E5%85%B3/%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD/%E7%AE%80%E5%8D%95%E7%9A%84%E6%8B%96%E6%8B%BD/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E6%B8%90%E8%BF%9B%E5%BC%8F%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E6%95%88%E6%9E%9C/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%AB%98%E9%87%8F%E7%BA%A7%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%8A%A8%E6%80%81%E4%BE%A7%E8%BE%B9%E6%A0%8F/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E6%9D%83%E9%99%90/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/FLIP%E5%8A%A8%E7%94%BB/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/ReactNative/READEME.html","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E7%9B%91%E5%90%AC%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/Excel/WebWoker%E4%BC%98%E5%8C%96%E5%AF%BC%E5%87%BA%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/Excel/%E5%AF%BC%E5%85%A5%E5%92%8C%E5%AF%BC%E5%87%BAExcel/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E9%AB%98%E9%87%8F%E7%BA%A7%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E4%B8%8D%E5%AE%9A%E9%AB%98%E5%BA%A6/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E4%B8%BAPromise/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/Promise%E7%9B%B8%E5%85%B3/%E6%A8%A1%E6%8B%9F%E5%BE%AE%E9%98%9F%E5%88%97/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%A7%86%E9%A2%91%E7%9B%B8%E5%85%B3/%E8%AF%BB%E5%8F%96%E8%A7%86%E9%A2%91%E5%85%B3%E9%94%AE%E5%B8%A7%E7%94%BB%E9%9D%A2/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%B7%B1%E6%8B%B7%E8%B4%9D/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/Redux/react-redux/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React18/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/React-Redux%E5%B0%8F%E6%A1%88%E4%BE%8B/","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Monorepo/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue.set/","/%E5%89%8D%E7%AB%AF/TypeScript/TS%E5%86%85%E7%BD%AE%E5%B7%A5%E5%85%B7%E7%B1%BB%E7%9A%84%E4%BD%BF%E7%94%A8/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%B9%B6%E5%8F%91%E4%BB%BB%E5%8A%A1%E6%8E%A7%E5%88%B6/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E9%AB%98%E5%BA%A6%E8%87%AA%E5%8A%A8%E8%BF%87%E6%B8%A1/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/%E5%BC%A7%E5%BD%A2%E8%BE%B9%E6%A1%86/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/UniApp/%E8%87%AA%E5%AE%9A%E4%B9%89Tabbar/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E8%B7%A8%E5%B9%B3%E5%8F%B0/UniApp/%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%A4%E7%A7%8D%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue.nextTick/","/%E5%89%8D%E7%AB%AF/Browser/%E8%B7%A8%E5%9F%9F/","/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/%E5%85%AB%E8%82%A1%E6%96%87/","/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/JavaScript/","/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF/TypeScript/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E5%88%AE%E5%88%AE%E4%B9%90/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E6%88%AA%E5%9B%BE/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/%E4%BA%8C%E7%BB%B4%E6%A1%88%E4%BE%8B/%E6%94%BE%E5%A4%A7%E9%95%9C/","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E4%BB%8B%E7%BB%8D.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E5%9B%BE%E5%BD%A2.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E5%9B%BE%E7%89%87.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%88%B6%E6%96%87%E6%9C%AC.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E7%BB%98%E5%9B%BE%E6%A0%B7%E5%BC%8F.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/Canvas/Canvas%E7%9A%84%E4%BD%BF%E7%94%A8/%E8%BF%9B%E9%98%B6.html","/%E5%89%8D%E7%AB%AF/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA/SVG/SVG%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/%E4%BB%8B%E7%BB%8D/","/%E5%90%8E%E7%AB%AF/MySql/","/%E5%89%8D%E7%AB%AF/Browser/Http%E7%BC%93%E5%AD%98/","/%E5%89%8D%E7%AB%AF/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/","/%E5%89%8D%E7%AB%AF/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/HTML/","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Vite/REAEME.html","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Rollup/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/CSS/BFC/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/SSE/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/WebSocket/","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack4/","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E5%9F%BA%E7%A1%80.html","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E6%90%AD%E5%BB%BA%E8%84%9A%E6%89%8B%E6%9E%B6.html","/%E5%89%8D%E7%AB%AF/%E5%B7%A5%E7%A8%8B%E5%8C%96/Webpack/Webpack5/Webpack5_%E9%AB%98%E7%BA%A7.html","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/React/React16/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%89%81%E5%B9%B3%E5%8C%96%E5%88%97%E8%A1%A8%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%97%B6%E9%97%B4%E5%88%87%E7%89%87/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Apply_Bind_Call/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Reflect/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/This%20%E6%8C%87%E5%90%91/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E7%B1%BB%E5%92%8C%E5%8E%9F%E5%9E%8B/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E9%97%AD%E5%8C%85/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/PDF/PDF%E9%A2%84%E8%A7%88/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%A7%86%E9%A2%91%E7%9B%B8%E5%85%B3/%E8%8E%B7%E5%8F%96%E8%A7%86%E9%A2%91%E6%B5%81%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E5%9F%BA%E7%A1%80%E5%81%9A%E6%B3%95/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E6%B7%BB%E5%8A%A0%E4%B8%8A%E4%B8%8B%E7%BC%93%E5%86%B2%E5%8C%BA/","/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8/%E5%9B%BA%E5%AE%9A%E9%AB%98%E5%BA%A6/%E6%B7%BB%E5%8A%A0%E8%8A%82%E6%B5%81/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E6%89%93%E5%8C%85%E5%90%8E%E8%B5%84%E6%BA%90%E5%8A%A0%E8%BD%BD%E8%B7%AF%E5%BE%84%E5%92%8C%E8%B7%AF%E7%94%B1%E7%9A%84%E5%89%8D%E7%BC%80/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue2/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E8%99%9A%E6%8B%9FDom%E5%92%8CDiff%E7%AE%97%E6%B3%95/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%8E%B7%E5%8F%96%E7%BB%84%E4%BB%B6%E7%9A%84%20TS%20%E7%B1%BB%E5%9E%8B/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E4%BC%A0%E5%8F%82/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E4%BB%A3%E7%A0%81%E5%92%8C%E5%B0%8F%E6%A1%88%E4%BE%8B/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E6%8B%A6%E6%88%AA%20v-model%20%E8%BF%9B%E8%A1%8C%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/Vue3%20%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/","/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/Vue/Vue3/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E8%99%9A%E6%8B%9F%20Dom%20%E5%92%8C%20Diff%20%E7%AE%97%E6%B3%95/"],yl=Mi(zy);Zs(yl);const Sr=i=>{const s=Di(),a=Ei(),n=sa();return F(()=>{var k;const t=i??((k=a.value.blog)==null?void 0:k.key)??"";if(!t)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!yl.value[t])throw new Error(`useBlogCategory: key ${t} is invalid`);const l=yl.value[t][n.value],e={path:l.path,map:{}};for(const p in l.map){const r=l.map[p];e.map[p]={path:r.path,items:[]};for(const d of r.indexes){const{path:c,meta:o}=cs(xr[d]);e.map[p].items.push({path:c,info:o})}s.value.path===r.path&&(e.currentItems=e.map[p].items)}return e})},Wy={article:{"/":{path:"/article/",indexes:[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,2,3,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,2,3,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141]}}},Al=Mi(Wy);Zs(Al);const Ft=i=>{const s=Ei(),a=sa();return F(()=>{var e;const n=i??((e=s.value.blog)==null?void 0:e.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Al.value[n])throw new Error(`useBlogType: key ${i} is invalid`);const t=Al.value[n][a.value],l={path:t.path,items:[]};for(const k of t.indexes){const{path:p,meta:r}=cs(xr[k]);l.items.push({path:p,info:r})}return l})},Pr=()=>h(di,{name:"lock"},()=>h("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));Pr.displayName="LockIcon";var qy=[];const Tr=Symbol(""),ee=()=>{const i=mi(Tr);if(!i)throw new Error("useTimeline() is called without provider.");return i},Uy=()=>{const i=Ft("timeline"),s=F(()=>{const a=[];return i.value.items.forEach(({info:n,path:t})=>{const l=Ul(n[$i.date]);if(l){const e=l.getFullYear(),k=l.getMonth()+1,p=l.getDate();(!a[0]||a[0].year!==e)&&a.unshift({year:e,items:[]}),a[0].items.push({date:`${k}/${p}`,info:n,path:t})}}),{...i.value,config:a.reverse()}});ys(Tr,s)},Rr=Symbol(""),Rn=()=>{const i=mi(Rr);if(!i)throw new Error("useArticles() is called without provider.");return i},Jy=()=>{const i=Ft("article");ys(Rr,i)},Lr=Symbol.for("categoryMap"),Ln=()=>{const i=mi(Lr);if(!i)throw new Error("useCategoryMap() is called without provider.");return i},Gy=()=>{const i=Sr("category");ys(Lr,i)},jr=Symbol(""),he=()=>{const i=mi(jr);if(!i)throw new Error("useStars() is called without provider.");return i},Ky=()=>{const i=Ft("star");ys(jr,i)},Ir=Symbol.for("tagMap"),jn=()=>{const i=mi(Ir);if(!i)throw new Error("useTagMap() is called without provider.");return i},Yy=()=>{const i=Sr("tag");ys(Ir,i)},Qy=()=>{Jy(),Gy(),Ky(),Yy(),Uy()},In=()=>{const i=Os(),s=ei();return F(()=>({...i.value.blog,...s.value.blog}))},Xy=i=>{const s=ei();return F(()=>{const{[$i.author]:a}=i.value;return a?cn(a):a===!1?[]:cn(s.value.author,!1)})},Zy=i=>{const s=Ln();return F(()=>$p(i.value[$i.category]).map(a=>({name:a,path:s.value.map[a].path})))},i6=i=>{const s=jn();return F(()=>Np(i.value[$i.tag]).map(a=>({name:a,path:s.value.map[a].path})))},s6=i=>F(()=>{const{[$i.date]:s}=i.value;return Ul(s)}),a6=i=>{const s=Oa(i,"info"),a=In(),n=Xy(s),t=Zy(s),l=i6(s),e=s6(s),k=Yp(),p=F(()=>({author:n.value,category:t.value,date:e.value,localizedDate:s.value[$i.localizedDate]??"",tag:l.value,isOriginal:s.value[$i.isOriginal]??!1,readingTime:s.value[$i.readingTime]??null,readingTimeLocale:s.value[$i.readingTime]&&k.value?Kp(s.value[$i.readingTime],k.value):null,pageview:i.path})),r=F(()=>a.value.articleInfo);return{info:p,items:r}};var Or=N({name:"SocialMedias",setup(){const i=In(),s=Ki(),a=F(()=>_n(i.value.medias??{}).map(([n,t])=>typeof t=="string"?{name:n,icon:Ny[n],link:t}:{name:n,...t}));return()=>a.value.length?h("div",{class:"vp-social-medias"},a.value.map(({name:n,icon:t,link:l})=>h("a",{class:"vp-social-media",href:l,rel:"noopener noreferrer",target:"_blank","aria-label":n||"",...s.value?{}:{"data-balloon-pos":"up"},innerHTML:oa(t)?`<img class="icon ${n}-icon" src="${t}">`:t}))):null}}),ke=N({name:"BloggerInfo",setup(){const i=In(),s=Cn(),a=ei(),n=Rn(),t=Ln(),l=jn(),e=ee(),k=ya(),p=F(()=>{var o;return i.value.name??((o=cn(a.value.author)[0])==null?void 0:o.name)??s.value.title}),r=F(()=>i.value.avatar??a.value.logo),d=F(()=>a.value.blogLocales),c=F(()=>i.value.intro);return()=>{const{article:o,category:B,tag:u,timeline:v}=d.value,m=[[n.value.path,n.value.items.length,o],[t.value.path,bs(t.value.map).length,B],[l.value.path,bs(l.value.map).length,u],[e.value.path,e.value.items.length,v]];return h("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h("div",{class:"vp-blogger",...c.value?{"aria-label":d.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>k(c.value)}:{}},[r.value?h("img",{class:"vp-blogger-avatar",src:ui(r.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?h("div",{class:"vp-blogger-name",property:"name"},p.value):null,i.value.description?h("div",{class:"vp-blogger-description",innerHTML:i.value.description}):null,c.value?h("meta",{property:"url",content:ui(c.value)}):null]),h("div",{class:"vp-blog-counts"},m.map(([f,C,A])=>h(Ti,{class:"vp-blog-count",to:f},()=>[h("div",{class:"count"},C),h("div",A)]))),h(Or)])}}});const pe=()=>h(di,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));pe.displayName="CategoryIcon";const re=()=>h(di,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));re.displayName="TagIcon";const de=()=>h(di,{name:"timeline"},()=>h("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));de.displayName="TimelineIcon";const Vr=()=>h(di,{name:"slides"},()=>h("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));Vr.displayName="SlideIcon";const Mr=()=>h(di,{name:"sticky"},()=>[h("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);Mr.displayName="StickyIcon";const ft=()=>h(di,{name:"article"},()=>h("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));ft.displayName="ArticleIcon";const Hr=()=>h(di,{name:"book"},()=>h("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));Hr.displayName="BookIcon";const $r=()=>h(di,{name:"link"},()=>h("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));$r.displayName="LinkIcon";const Nr=()=>h(di,{name:"project"},()=>h("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));Nr.displayName="ProjectIcon";const zr=()=>h(di,{name:"friend"},()=>h("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));zr.displayName="FriendIcon";const ul=()=>h(di,{name:"slide-down"},()=>h("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));ul.displayName="SlideDownIcon";const Wr=()=>h("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});Wr.displayName="EmptyIcon";var n6=N({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const a=Oa(i,"info"),{info:n,items:t}=a6(i);return()=>{var o,B,u;const{[Wi.title]:l,[$i.type]:e,[$i.isEncrypted]:k=!1,[$i.cover]:p,[$i.excerpt]:r,[$i.sticky]:d}=a.value,c=n.value;return h("div",{class:"vp-article-wrapper"},h("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((o=s.cover)==null?void 0:o.call(s,{cover:p}))??(p?[h("img",{class:"vp-article-cover",src:ui(p),alt:"",loading:"lazy"}),h("meta",{property:"image",content:ui(p)})]:[]),d?h(Mr):null,h(Ti,{to:i.path},()=>{var v;return((v=s.title)==null?void 0:v.call(s,{title:l,isEncrypted:k,type:e}))??h("header",{class:"vp-article-title"},[k?h(Pr):null,e===ir.slide?h(Vr):null,h("span",{property:"headline"},l)])}),((B=s.excerpt)==null?void 0:B.call(s,{excerpt:r}))??(r?h("div",{class:"vp-article-excerpt",innerHTML:r}):null),h("hr",{class:"vp-article-hr"}),((u=s.info)==null?void 0:u.call(s,{info:c}))??h(Cr,{info:c,...t.value?{items:t.value}:{}})]))}}}),t6=N({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(i,{emit:s}){let a;const n=ei(),t=Z(""),l=F(()=>n.value.paginationLocales),e=F(()=>Math.ceil(i.total/i.perPage)),k=F(()=>!!e.value&&e.value!==1),p=F(()=>e.value<7?!1:i.current>4),r=F(()=>e.value<7?!1:i.current<e.value-3),d=F(()=>{const{current:B}=i;let u=1,v=e.value;const m=[];e.value>=7&&(B<=4&&B<e.value-3?(u=1,v=5):B>4&&B>=e.value-3?(v=e.value,u=e.value-4):e.value>7&&(u=B-2,v=B+2));for(let f=u;f<=v;f++)m.push(f);return m}),c=B=>s("updateCurrentPage",B),o=B=>{const u=parseInt(B,10);u<=e.value&&u>0?c(u):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${l.value.errorText.replace(/\$page/gu,e.value.toString())}`)};return wi(()=>{a=new JE}),()=>h("div",{class:"vp-pagination"},k.value?h("nav",{class:"vp-pagination-list"},[h("div",{class:"vp-pagination-number "},[i.current>1?h("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>c(i.current-1)},l.value.prev):null,p.value?[h("div",{role:"navigation",onClick:()=>c(1)},1),h("div",{class:"ellipsis"},"...")]:null,d.value.map(B=>h("div",{key:B,class:{active:i.current===B},role:"navigation",onClick:()=>c(B)},B)),r.value?[h("div",{class:"ellipsis"},"..."),h("div",{role:"navigation",onClick:()=>c(e.value)},e.value)]:null,i.current<e.value?h("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>c(i.current+1)},l.value.next):null]),h("div",{class:"vp-pagination-nav"},[h("label",{for:"navigation-text"},`${l.value.navigate}: `),h("input",{id:"navigation-text",value:t.value,onInput:({target:B})=>{t.value=B.value},onKeydown:B=>{B.key==="Enter"&&(B.preventDefault(),o(t.value))}}),h("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:l.value.action,onClick:()=>o(t.value)},l.value.action)])]):[])}}),ce=N({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(i){const s=Ds(),a=Ba(),n=In(),t=Z(1),l=F(()=>n.value.articlePerPage??10),e=F(()=>i.items.slice((t.value-1)*l.value,t.value*l.value)),k=async p=>{t.value=p;const r={...s.query};!(r.page===p.toString()||p===1&&!r.page)&&(p===1?delete r.page:r.page=p.toString(),await a.push({path:s.path,query:r}))};return wi(()=>{const{page:p}=s.query;k(p?Number(p):1),oi(t,()=>{const r=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,r)},100)})}),()=>h("div",{id:"article-list",class:"vp-article-list",role:"feed"},e.value.length?[...e.value.map(({info:p,path:r},d)=>h(ti,{appear:!0,delay:d*.04},()=>h(n6,{key:r,info:p,path:r}))),h(t6,{current:t.value,perPage:l.value,total:i.items.length,onUpdateCurrentPage:k})]:h(Wr))}}),qr=N({name:"CategoryList",setup(){const i=Di(),s=Ln();return()=>h("ul",{class:"vp-category-list"},_n(s.value.map).sort(([,a],[,n])=>n.items.length-a.items.length).map(([a,{path:n,items:t}])=>h("li",{class:["vp-category",`color${Sn(a,Number(ga.colorNumber))}`,{active:n===i.value.path}]},h(Ti,{to:n},()=>[a,h("span",{class:"count"},t.length)]))))}}),Ur=N({name:"TagList",setup(){const i=Ei(),s=jn(),a=n=>{var t;return n===((t=i.value.blog)==null?void 0:t.name)};return()=>h("ul",{class:"tag-list-wrapper"},_n(s.value.map).sort(([,n],[,t])=>t.items.length-n.items.length).map(([n,{path:t,items:l}])=>h("li",{class:["tag",`color${Sn(n,Number(ga.colorNumber))}`,{active:a(n)}]},h(Ti,{to:t},()=>[n,h("span",{class:"tag-num"},l.length)]))))}}),l6=N({name:"TimelineList",setup(){const i=ei(),s=ee(),a=ya(),n=F(()=>i.value.blogLocales.timeline);return()=>h("div",{class:"timeline-list-wrapper"},[h("div",{class:"timeline-list-title",onClick:()=>a(s.value.path)},[h(de),h("span",{class:"num"},s.value.items.length),n.value]),h("hr"),h("div",{class:"timeline-content"},h("ul",{class:"timeline-list"},s.value.config.map(({year:t,items:l},e)=>h(ti,{appear:!0,delay:.08*(e+1)},()=>h("li",[h("h3",{class:"timeline-year"},t),h("ul",{class:"timeline-year-wrapper"},l.map(({date:k,info:p,path:r})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},k),h(Ti,{class:"timeline-title",to:r},()=>p[Wi.title])])))])))))])}});const e6={article:ft,category:pe,tag:re,timeline:de};var Jr=N({name:"InfoList",setup(){const i=ei(),s=Rn(),a=Ln(),n=F(()=>bs(a.value.map).length),t=he(),l=jn(),e=F(()=>bs(l.value.map).length),k=ya(),p=Z("article"),r=F(()=>i.value.blogLocales);return()=>h("div",{class:"vp-blog-infos"},[h("div",{class:"vp-blog-type-switcher"},_n(e6).map(([d,c])=>h("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{p.value=d}},h("div",{class:["icon-wrapper",{active:p.value===d}],"aria-label":r.value[d],"data-balloon-pos":"up"},h(c))))),h(ti,()=>p.value==="article"?h("div",{class:"vp-star-article-wrapper"},[h("div",{class:"title",onClick:()=>k(s.value.path)},[h(ft),h("span",{class:"num"},s.value.items.length),r.value.article]),h("hr"),t.value.items.length?h("ul",{class:"vp-star-articles"},t.value.items.map(({info:d,path:c},o)=>h(ti,{appear:!0,delay:.08*(o+1)},()=>h("li",{class:"vp-star-article"},h(Ti,{to:c},()=>d[Wi.title]))))):h("div",{class:"vp-star-article-empty"},r.value.empty.replace("$text",r.value.star))]):p.value==="category"?h("div",{class:"vp-category-wrapper"},[n.value?[h("div",{class:"title",onClick:()=>k(a.value.path)},[h(pe),h("span",{class:"num"},n.value),r.value.category]),h("hr"),h(ti,{delay:.04},()=>h(qr))]:h("div",{class:"vp-category-empty"},r.value.empty.replace("$text",r.value.category))]):p.value==="tag"?h("div",{class:"vp-tag-wrapper"},[e.value?[h("div",{class:"title",onClick:()=>k(l.value.path)},[h(re),h("span",{class:"num"},e.value),r.value.tag]),h("hr"),h(ti,{delay:.04},()=>h(Ur))]:h("div",{class:"vp-tag-empty"},r.value.empty.replace("$text",r.value.tag))]):h(ti,()=>h(l6)))])}}),mt=N({name:"BlogWrapper",slots:Object,setup(i,{slots:s}){const{isMobile:a}=Pn();return()=>[h(le),h(te,{noSidebar:!0,noToc:!0},{default:()=>s.default(),navScreenBottom:()=>h(ke),sidebar:a.value?()=>h(Jr):null})]}});const On=()=>h("aside",{class:"vp-blog-info-wrapper"},[h(ti,()=>h(ke)),h(ti,{delay:.04},()=>h(Jr))]);On.displayName="InfoPanel";var h6=N({name:"BlogPage",setup(){const i=Di(),s=Ei(),a=Ln(),n=jn();return()=>{const{key:t="",name:l=""}=s.value.blog||{},e=l?t==="category"?a.value.map[l].items:t==="tag"?n.value.map[l].items:[]:[];return h(mt,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ti,()=>t==="category"?h(qr):t==="tag"?h(Ur):null),l?h(ti,{appear:!0,delay:.24},()=>h(ce,{key:i.value.path,items:e})):null]),h(ti,{delay:.16},()=>h(On,{key:"blog"}))])))}}});const k6="//theme-hope-assets.vuejs.press/hero/default.jpg";var p6=N({name:"BlogHero",slots:Object,setup(i,{slots:s}){const a=Ei(),n=Cn(),t=Mi(),l=F(()=>a.value.heroFullScreen??!1),e=F(()=>{const{heroText:p,heroImage:r,heroImageDark:d,heroAlt:c,heroImageStyle:o,tagline:B}=a.value;return{text:p??n.value.title??"Hello",tagline:B??"",image:r?ui(r):null,imageDark:d?ui(d):null,alt:c??p??"",imageStyle:o,isFullScreen:l.value}}),k=F(()=>{const{bgImage:p,bgImageDark:r,bgImageStyle:d}=a.value;return{image:Ci(p)?ui(p):p===!1?null:k6,imageDark:Ci(r)?ui(r):null,bgStyle:d,isFullScreen:l.value}});return()=>{var p,r;return a.value.hero===!1?null:h("div",{ref:t,class:["vp-blog-hero",{fullscreen:l.value,"no-bg":!k.value.image}]},[((p=s.bg)==null?void 0:p.call(s,k.value))??[k.value.image?h("div",{class:["vp-blog-mask",{light:k.value.imageDark}],style:[{background:`url(${k.value.image}) center/cover no-repeat`},k.value.bgStyle]}):null,k.value.imageDark?h("div",{class:"vp-blog-mask dark",style:[{background:`url(${k.value.imageDark}) center/cover no-repeat`},k.value.bgStyle]}):null],((r=s.info)==null?void 0:r.call(s,e.value))??[h(ti,{appear:!0,type:"group",delay:.04},()=>{const{image:d,imageDark:c,imageStyle:o,alt:B}=e.value;return[d?h("img",{key:"light",class:["vp-blog-hero-image",{light:c}],style:o,src:d,alt:B}):null,c?h("img",{key:"dark",class:"vp-blog-hero-image dark",style:o,src:c,alt:B}):null]}),h(ti,{appear:!0,delay:.08},()=>e.value.text?h("h1",{class:"vp-blog-hero-title"},e.value.text):null),h(ti,{appear:!0,delay:.12},()=>e.value.tagline?h("p",{class:"vp-blog-hero-description",innerHTML:e.value.tagline}):null)],e.value.isFullScreen?h("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:t.value.clientHeight,behavior:"smooth"})}},[h(ul),h(ul)]):null])}}});const r6=["link","article","book","project","friend"];var d6=N({name:"ProjectPanel",components:{ArticleIcon:ft,BookIcon:Hr,FriendIcon:zr,LinkIcon:$r,ProjectIcon:Nr},props:{items:{type:Array,required:!0}},setup(i){const s=Ki(),a=ya(),n=(t="",l="icon")=>r6.includes(t)?h(ps(`${t}-icon`)):oa(t)?h("img",{class:"vp-project-image",src:t,alt:l}):ut(t)?h("img",{class:"vp-project-image",src:ui(t),alt:l}):h(Ni,{icon:t});return()=>h("div",{class:"vp-project-panel"},i.items.map(({icon:t,link:l,name:e,desc:k,background:p})=>h("div",{class:["vp-project-card",{[`color${Sn(e,Number(ga.colorNumber))}`]:!s.value&&!p}],...p?{style:p}:{},onClick:()=>a(l)},[n(t,e),h("div",{class:"vp-project-name"},e),h("div",{class:"vp-project-desc"},k)])))}}),c6=N({name:"BlogHomePage",setup(){const i=Rn(),s=Ei(),a=F(()=>s.value.projects??[]);return()=>h("div",{class:"vp-page vp-blog-home"},[h(p6),h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[a.value.length?h(ti,{appear:!0,delay:.16},()=>h(d6,{items:a.value})):null,h(ti,{appear:!0,delay:.24},()=>h(ce,{items:i.value.items}))]),h(ti,{appear:!0,delay:.16},()=>h(On,{key:"blog"}))]),h(ti,{appear:!0,delay:.28},()=>h(La))])}});const Gr=()=>h(mt,()=>h(c6));Gr.displayName="BlogHome";var o6=Gr,B6=N({name:"ArticleType",setup(){const i=Di(),s=sa(),a=ei(),n=Rn(),t=he(),l=F(()=>{const e=a.value.blogLocales;return[{text:e.all,path:n.value.path},{text:e.star,path:t.value.path},...qy.map(({key:k,path:p})=>{const r=p.replace(/^\//,s.value);return{text:e[k]??cs(r).meta[Wi.title]??k,path:r}})]});return()=>h("ul",{class:"vp-article-type-wrapper"},l.value.map(e=>h("li",{class:["vp-article-type",{active:e.path===i.value.path}]},h(Ti,{to:e.path},()=>e.text))))}}),E6=N({name:"BlogPage",setup(){const i=Ft(),s=Ei(),a=Di(),n=Rn(),t=he(),l=F(()=>{const{key:e="",type:k}=s.value.blog||{};return e==="star"?t.value.items:k==="type"&&e?i.value.items:n.value.items});return()=>h(mt,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ti,()=>h(B6)),h(ti,{appear:!0,delay:.24},()=>h(ce,{key:a.value.path,items:l.value}))]),h(ti,{delay:.16},()=>h(On,{key:"blog"}))])))}}),g6=N({name:"TimelineItems",setup(){const i=In(),s=ei(),a=ee(),n=F(()=>i.value.timeline??s.value.blogLocales.timelineTitle),t=F(()=>a.value.config.map(({year:l})=>({title:l.toString(),level:2,slug:l.toString(),children:[]})));return()=>h("div",{class:"timeline-wrapper"},h("ul",{class:"timeline-content"},[h(ti,()=>h("li",{class:"motto"},n.value)),h(br,{items:t.value}),a.value.config.map(({year:l,items:e},k)=>h(ti,{appear:!0,delay:.08*(k+1),type:"group"},()=>[h("h3",{key:"title",id:l,class:"timeline-year-title"},h("span",l)),h("li",{key:"content",class:"timeline-year-list"},[h("ul",{class:"timeline-year-wrapper"},e.map(({date:p,info:r,path:d})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},p),h(Ti,{class:"timeline-title",to:d},()=>r[Wi.title])])))])]))]))}});const Kr=()=>h(mt,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(ti,{appear:!0,delay:.24},()=>h(g6))]),h(ti,{delay:.16},()=>h(On,{key:"blog"}))])));Kr.displayName="Timeline";var y6=Kr;gE(i=>{const s=i.t,a=i.I!==!1,n=i.i;return a?{title:s,content:n?()=>[h(Ni,{icon:n}),s]:null,order:i.O,index:i.I}:null});const A6=_s({enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...n)=>(await Bl.wait(),a(...n)),Xg(i),i.component("HopeIcon",Ni),i.component("BloggerInfo",ke),i.component("SocialMedias",Or)},setup:()=>{Zg(),Kg(),Qy()},layouts:{Layout:My,NotFound:$y,BlogCategory:h6,BlogHome:o6,BlogType:E6,Timeline:y6}}),u6=Object.freeze(Object.defineProperty({__proto__:null,default:A6},Symbol.toStringTag,{value:"Module"})),Yn=[dB,kE,EE,fE,DE,PE,OE,zE,ug,Ig,u6].map(i=>i.default).filter(Boolean),v6=JSON.parse('{"base":"/web-docs/","lang":"zh-CN","title":"Web Docs","description":"记录 Web 开发中的原理、问题和案例","head":[],"locales":{}}');var za=Mi(v6),F6=Do,f6=()=>{const i=Xo({history:F6(Nl("/web-docs/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(s,a,n)=>n||(s.hash?{el:s.hash}:{top:0})});return i.beforeResolve(async(s,a)=>{if(s.path!==a.path||a===Ps){const n=cs(s.fullPath);if(n.path!==s.fullPath)return n.path;const t=await n.loader();s.meta={...n.meta,_pageChunk:t}}else s.path===a.path&&(s.meta=a.meta)}),i},m6=i=>{i.component("ClientOnly",At),i.component("Content",dp),i.component("RouteLink",Ti)},C6=(i,s,a)=>{const n=F(()=>s.currentRoute.value.path),t=ek((m,f)=>({get(){return m(),s.currentRoute.value.meta._pageChunk},set(C){s.currentRoute.value.meta._pageChunk=C,f()}})),l=F(()=>la.resolveLayouts(a)),e=F(()=>la.resolveRouteLocale(za.value.locales,n.value)),k=F(()=>la.resolveSiteLocaleData(za.value,e.value)),p=F(()=>t.value.comp),r=F(()=>t.value.data),d=F(()=>r.value.frontmatter),c=F(()=>la.resolvePageHeadTitle(r.value,k.value)),o=F(()=>la.resolvePageHead(c.value,d.value,k.value)),B=F(()=>la.resolvePageLang(r.value,k.value)),u=F(()=>la.resolvePageLayout(r.value,l.value)),v={layouts:l,pageData:r,pageComponent:p,pageFrontmatter:d,pageHead:o,pageHeadTitle:c,pageLang:B,pageLayout:u,redirects:el,routeLocale:e,routePath:n,routes:ba,siteData:za,siteLocaleData:k};return i.provide(ql,v),Object.defineProperties(i.config.globalProperties,{$frontmatter:{get:()=>d.value},$head:{get:()=>o.value},$headTitle:{get:()=>c.value},$lang:{get:()=>B.value},$page:{get:()=>r.value},$routeLocale:{get:()=>e.value},$site:{get:()=>za.value},$siteLocale:{get:()=>k.value},$withBase:{get:()=>ui}}),v},b6=()=>{const i=sB(),s=kp();let a=[];const n=()=>{i.value.forEach(e=>{const k=D6(e);k&&a.push(k)})},t=()=>{const e=[];return i.value.forEach(k=>{const p=_6(k);p&&e.push(p)}),e},l=()=>{document.documentElement.lang=s.value;const e=t();a.forEach((k,p)=>{const r=e.findIndex(d=>k.isEqualNode(d));r===-1?(k.remove(),delete a[p]):e.splice(r,1)}),e.forEach(k=>document.head.appendChild(k)),a=[...a.filter(k=>!!k),...e]};ys(lB,l),wi(()=>{n(),oi(i,l,{immediate:!1})})},D6=([i,s,a=""])=>{const n=Object.entries(s).map(([k,p])=>Ci(p)?`[${k}=${JSON.stringify(p)}]`:p===!0?`[${k}]`:"").join(""),t=`head > ${i}${n}`;return Array.from(document.querySelectorAll(t)).find(k=>k.innerText===a)||null},_6=([i,s,a])=>{if(!Ci(i))return null;const n=document.createElement(i);return mn(s)&&Object.entries(s).forEach(([t,l])=>{Ci(l)?n.setAttribute(t,l):l===!0&&n.setAttribute(t,"")}),Ci(a)&&n.appendChild(document.createTextNode(a)),n},w6=Tc,x6=async()=>{var a;const i=w6({name:"Vuepress",setup(){var l;b6();for(const e of Yn)(l=e.setup)==null||l.call(e);const n=Yn.flatMap(({rootComponents:e=[]})=>e.map(k=>h(k))),t=aB();return()=>[h(t.value),n]}}),s=f6();m6(i),C6(i,s,Yn);for(const n of Yn)await((a=n.enhance)==null?void 0:a.call(n,{app:i,router:s,siteData:za}));return i.use(s),{app:i,router:s}};x6().then(({app:i,router:s})=>{s.isReady().then(()=>{i.mount("#app")})});export{Ok as a,R6 as b,T6 as c,x6 as createVueApp,Pi as d,Vk as e,P6 as o,ps as r,Q2 as w};
