import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,b as a}from"./app-yQAcOzkj.js";const n="/web-docs/assets/001-DQoCiI1l.png",t={},l=a(`<h1 id="授权登录流程" tabindex="-1"><a class="header-anchor" href="#授权登录流程"><span>授权登录流程</span></a></h1><h2 id="流程概述" tabindex="-1"><a class="header-anchor" href="#流程概述"><span>流程概述</span></a></h2><p>微信小程序登录涉及到前端和后端的交互，主要流程如下：</p><ol><li><strong>前端</strong> 调用 <code>wx.login()</code> ，获取临时登录凭证 <code>code</code>。</li><li><strong>前端</strong> 当用户点击授权登录按钮时，获取用户信息或者手机号码，同时发送请求把 <code>code</code> 以及获取的用户加密信息发送给我们自己的 <strong>后端</strong> 服务器。</li><li><strong>后端</strong> 服务器调用 <code>code2Session</code>：使用 <code>code</code> 向微信服务器请求 <code>session_key</code> 和 <code>openid</code>。</li><li><strong>后端</strong> 服务器解密用户信息或手机号：使用 <code>session_key</code> 解密用户信息或手机号。</li></ol><p>以下是通过 <code>uni-app</code> 和 <code>vue</code> 的语法来展示代码：</p><h2 id="前端调用-wx-login-获取-code" tabindex="-1"><a class="header-anchor" href="#前端调用-wx-login-获取-code"><span>前端调用 wx.login() 获取 code</span></a></h2><p>我们可以在页面加载的时候就通过调用 <code>wx.login()</code> 来获取 <code>code</code>：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">onLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">  wx</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	success</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        // 成功获取 code，可以先把 code 保存到 data 中，后续发送到服务器调换 session_key 和 openid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Login success with code: &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">code</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">        console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;Login failed. Error: &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">errMsg</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  })	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前端点击授权登录获取用户信息" tabindex="-1"><a class="header-anchor" href="#前端点击授权登录获取用户信息"><span>前端点击授权登录获取用户信息</span></a></h2><p>前端中获取用户的信息，有两种方式：</p><ol><li>通过 <code>button</code> 的 <code>open-type</code> 属性，以及监听对应的 <code>open-type</code> 的事件来获取。<strong>注意：目前个人账号没办法使用 <code>getPhoneNumber</code>，需要企业账号才有权限</strong>。</li><li>通过 <code>wx.getUserProfile()</code> 方法获取，但是该方法不能直接调用，需要在某个点击事件中才能调用。</li></ol><p>这里以 <code>button</code> 的 <code>open-type</code> 为例：</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;login-view&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    &lt;!-- 当设置了 open-type 为 getUserInfo 时，需要监听 getuserinfo 事件，获取用户信息 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    &lt;!-- 当设置了 open-type 为 getPhoneNumber 时，需要监听 getphonenumber 事件，获取用户信息 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;login-btn&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;default&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> open-type</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;getUserInfo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> @</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;">getuserinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">getUserInfo</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;授权登录&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  methods</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">	getUserInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">	  console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果如下，重点看 <code>detail</code> 字段的内容：</p><p><img src="`+n+'" alt="001"></p><p>返回的参数说明：</p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">userInfo</td><td style="text-align:left;"><a href="https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/UserInfo.html" target="_blank" rel="noopener noreferrer">UserInfo</a></td><td style="text-align:left;">用户信息对象</td></tr><tr><td style="text-align:left;">rawData</td><td style="text-align:left;">string</td><td style="text-align:left;">不包括敏感信息的原始数据字符串，用于计算签名</td></tr><tr><td style="text-align:left;">signature</td><td style="text-align:left;">string</td><td style="text-align:left;">使用 sha1( rawData + sessionkey ) 得到字符串，用于校验用户信息，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html" target="_blank" rel="noopener noreferrer">用户数据的签名验证和加解密</a></td></tr><tr><td style="text-align:left;">encryptedData</td><td style="text-align:left;">string</td><td style="text-align:left;">包括敏感数据在内的完整用户信息的加密数据，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreferrer">用户数据的签名验证和加解密</a></td></tr><tr><td style="text-align:left;">iv</td><td style="text-align:left;">string</td><td style="text-align:left;">加密算法的初始向量，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95" target="_blank" rel="noopener noreferrer">用户数据的签名验证和加解密</a></td></tr><tr><td style="text-align:left;">cloudID</td><td style="text-align:left;">string</td><td style="text-align:left;">敏感数据对应的云 ID，开通<a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/basis/getting-started.html" target="_blank" rel="noopener noreferrer">云开发</a>的小程序才会返回，可通过云调用直接获取开放数据，详细见<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html#method-cloud" target="_blank" rel="noopener noreferrer">云调用直接获取开放数据</a></td></tr></tbody></table><h2 id="后端调用-code2session" tabindex="-1"><a class="header-anchor" href="#后端调用-code2session"><span>后端调用 code2Session</span></a></h2><p>在我们自己的后端服务器中，定义一个接口来获取 <code>code</code>，并与小程序的服务进行交互。需要使用 <code>code</code> 和 <code>appid</code>、<code>appsecret</code> 调用微信的 <code>code2Session</code> 接口，获取 <code>session_key</code> 和 <code>openid</code>。这个步骤可以查看 <a href="https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/user-login/code2Session.html" target="_blank" rel="noopener noreferrer">官网的小程序登录</a>。</p><ul><li><code>session_key</code>：会话密钥，是对用户数据进行 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/signature.html" target="_blank" rel="noopener noreferrer">加密签名</a> 的密钥。为了应用自身的数据安全，开发者服务器 <strong>不应该把会话密钥下发到小程序，也不应该对外提供这个密钥</strong>。</li><li><code>openid</code>：用户唯一标识。</li><li>临时登录凭证 <code>code</code> 只能使用一次</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 后端代码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="后端解密用户信息或手机号码" tabindex="-1"><a class="header-anchor" href="#后端解密用户信息或手机号码"><span>后端解密用户信息或手机号码</span></a></h2><p>这一步骤和上一个步骤是是同一个接口，同时进行的，后端服务器需要拿到前端传过来的 <code>iv</code> 和 <code>encryptedData</code> 以及 <code>code</code> 来解密对应的用户加密的信息或者解密拿到用户的手机号码。</p><p>解密完成后返回所有用户信息给前端进行展示，当然还包括最重要的 <code>token</code> 也可以在这里传给前端。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 后端代码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',25),h=[l];function d(r,p){return e(),s("div",null,h)}const c=i(t,[["render",d],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B/","title":"授权登录流程","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"流程概述","slug":"流程概述","link":"#流程概述","children":[]},{"level":2,"title":"前端调用 wx.login() 获取 code","slug":"前端调用-wx-login-获取-code","link":"#前端调用-wx-login-获取-code","children":[]},{"level":2,"title":"前端点击授权登录获取用户信息","slug":"前端点击授权登录获取用户信息","link":"#前端点击授权登录获取用户信息","children":[]},{"level":2,"title":"后端调用 code2Session","slug":"后端调用-code2session","link":"#后端调用-code2session","children":[]},{"level":2,"title":"后端解密用户信息或手机号码","slug":"后端解密用户信息或手机号码","link":"#后端解密用户信息或手机号码","children":[]}],"git":{"createdTime":1723376304000,"updatedTime":1725040220000,"contributors":[{"name":"wr","email":"893634104@qq.com","commits":1}]},"readingTime":{"minutes":3.33,"words":999},"filePathRelative":"前端/框架/小程序/微信小程序/登录流程/README.md","localizedDate":"2024年8月11日","excerpt":"\\n<h2>流程概述</h2>\\n<p>微信小程序登录涉及到前端和后端的交互，主要流程如下：</p>\\n<ol>\\n<li><strong>前端</strong> 调用 <code>wx.login()</code> ，获取临时登录凭证 <code>code</code>。</li>\\n<li><strong>前端</strong> 当用户点击授权登录按钮时，获取用户信息或者手机号码，同时发送请求把 <code>code</code> 以及获取的用户加密信息发送给我们自己的 <strong>后端</strong> 服务器。</li>\\n<li><strong>后端</strong> 服务器调用 <code>code2Session</code>：使用 <code>code</code> 向微信服务器请求 <code>session_key</code> 和 <code>openid</code>。</li>\\n<li><strong>后端</strong> 服务器解密用户信息或手机号：使用 <code>session_key</code> 解密用户信息或手机号。</li>\\n</ol>"}');export{c as comp,g as data};
