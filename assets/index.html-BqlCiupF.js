import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as d,b as o}from"./app-fQyFsxl4.js";const r={},a=o('<h1 id="拖拽" tabindex="-1"><a class="header-anchor" href="#拖拽"><span>拖拽</span></a></h1><p>实现元素的拖拽有两种方式：</p><ol><li>使用 H5 的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FHTML_Drag_and_Drop_API" target="_blank" rel="noopener noreferrer">drag and drop api</a>。</li><li>原生 JS 鼠标点击事件。</li></ol><h3 id="一、h5-拖放事件" tabindex="-1"><a class="header-anchor" href="#一、h5-拖放事件"><span>一、H5 拖放事件</span></a></h3><p>拖放是由 <strong>拖动</strong> 与 <strong>释放</strong> 两部分组成，拖放事件也分为 <strong>被拖动元素的相关事件</strong> 和<strong>容器（目标元素）的相关事件</strong>。</p><p>如果想要一个元素允许被拖动，必须给该元素加上 <code>draggable</code> 属性，并设置为 <code>true</code>，该默认值为 <code>false</code>。</p><h4 id="_1-被拖拽元素事件" tabindex="-1"><a class="header-anchor" href="#_1-被拖拽元素事件"><span>1. 被拖拽元素事件</span></a></h4><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>dragstart</td><td>开始拖动元素时触发，只触发一次。</td></tr><tr><td>drag</td><td>元素正在拖动时触发</td></tr><tr><td>dragend</td><td>完成元素拖动后触发</td></tr></tbody></table><h4 id="_2-目标元素事件" tabindex="-1"><a class="header-anchor" href="#_2-目标元素事件"><span>2. 目标元素事件</span></a></h4><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>dragenter</td><td>当被鼠标拖动的对象进入目标容器时触发此事件，只触发一次。</td></tr><tr><td>dragover</td><td>当被拖动的对象在目标容器范围内拖动时触发此事件，频繁触发。</td></tr><tr><td>dragleave</td><td>当被鼠标拖动的对象离开目标容器时触发此事件</td></tr><tr><td>drop</td><td>在一个拖动过程中，释放鼠标键到目标容器时触发此事件</td></tr></tbody></table><p>注意：拖拽事件需要阻止浏览器默认事件，在 <code>dragover</code> 事件中阻止。否则目标元素事件 <code>drop</code> 事件，用户看不到效果。</p><h3 id="二、鼠标点击事件拖拽" tabindex="-1"><a class="header-anchor" href="#二、鼠标点击事件拖拽"><span>二、鼠标点击事件拖拽</span></a></h3><p>需要利用 <code>mousedown</code>，<code>mousemove</code>，<code>mouseup</code> 三个事件来完成原生拖拽实现。</p><ul><li><code>mousedown</code> 是鼠标左键按下的事件。</li><li><code>mousemove</code> 是鼠标移动事件。</li><li><code>mouseup</code> 是鼠标左键放开的事件。</li></ul><p>整体的思：</p><ul><li>在鼠标移动到当前元素的上方并且按下左键的事件开始。</li><li>当鼠标移动的时候，改变元素的位置。</li><li>当鼠标左键放开的时候，停止改变元素的位置。</li></ul><p>其中改变元素位置是利用改变元素的 <code>top</code> 和 <code>left</code> 实现的。</p><p>注意：当移动鼠标过快，元素会脱离拖拽，所以应该给 拖拽元素 绑定 <code>mousedown</code> 事件，然后在 <code>mousedown</code> 事件中的回调中，给 <code>document</code> 绑定 <code>mousemove</code> 和 <code>mouseup</code> 事件。</p>',18),n=[a];function l(c,s){return d(),t("div",null,n)}const p=e(r,[["render",l],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E4%B8%89%E4%BB%B6%E5%A5%97/JavaScript/%E5%8E%9F%E7%90%86%E5%92%8C%E5%9F%BA%E7%A1%80/%E6%8B%96%E6%8B%BDAPI/","title":"拖拽","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"一、H5 拖放事件","slug":"一、h5-拖放事件","link":"#一、h5-拖放事件","children":[{"level":4,"title":"1. 被拖拽元素事件","slug":"_1-被拖拽元素事件","link":"#_1-被拖拽元素事件","children":[]},{"level":4,"title":"2. 目标元素事件","slug":"_2-目标元素事件","link":"#_2-目标元素事件","children":[]}]},{"level":3,"title":"二、鼠标点击事件拖拽","slug":"二、鼠标点击事件拖拽","link":"#二、鼠标点击事件拖拽","children":[]}],"git":{"createdTime":1724447679000,"updatedTime":1724447679000,"contributors":[{"name":"wr","email":"893634104@qq.com","commits":1}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"前端/前端三件套/JavaScript/原理和基础/拖拽API/README.md","localizedDate":"2024年8月24日","excerpt":"\\n<p>实现元素的拖拽有两种方式：</p>\\n<ol>\\n<li>使用 H5 的 <a href=\\"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FHTML_Drag_and_Drop_API\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">drag and drop api</a>。</li>\\n<li>原生 JS 鼠标点击事件。</li>\\n</ol>\\n<h3>一、H5 拖放事件</h3>\\n<p>拖放是由 <strong>拖动</strong> 与 <strong>释放</strong> 两部分组成，拖放事件也分为 <strong>被拖动元素的相关事件</strong> 和<strong>容器（目标元素）的相关事件</strong>。</p>"}');export{p as comp,g as data};
